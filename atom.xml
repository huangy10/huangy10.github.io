<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>治部少辅</title>
  
  <subtitle>大一大万大吉</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.codewoody.com/"/>
  <updated>2019-11-10T23:11:58.788Z</updated>
  <id>http://www.codewoody.com/</id>
  
  <author>
    <name>治部少辅</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Weekly-20</title>
    <link href="http://www.codewoody.com/posts/53549/"/>
    <id>http://www.codewoody.com/posts/53549/</id>
    <published>2019-11-06T07:40:13.000Z</published>
    <updated>2019-11-10T23:11:58.788Z</updated>
    
    <content type="html"><![CDATA[<h2 id="新闻">新闻</h2><h3 id="印度宣布退出rcep"><a href="https://www.dw.com/zh/印度退群亚太自贸协定-转身与欧盟谈/a-51107693?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">印度宣布退出RCEP</a></h3><p>中国牵头、原定16国参加的亚太自贸协定（RCEP）比原计划推迟签署。印度对该协定提出质疑，表示目前不愿加入。而仅隔了一天就传出消息，印度将与欧盟就签署自贸协定展开会谈。</p><h3 id="英国大选"><a href="http://www.bbc.com/zhongwen/simp/world-50320490" target="_blank" rel="noopener">英国大选</a></h3><figure><img src="https://imgs.codewoody.com/uploads/big/1fd7fc646d55c11f2a5394df02b88ce8.jpg" alt="图为执政党保守党领袖约翰逊和在野最大党工党领袖科尔宾"><figcaption>图为执政党保守党领袖约翰逊和在野最大党工党领袖科尔宾</figcaption></figure><p>英国议会2019年11月6日周三凌晨解散，大选竞选活动正式拉开帷幕。各党领袖先后演讲，亮出自己的承诺。英国政府首相约翰逊前往白金汉宫与女王会面，这标志着12月12日投票前选举期的开始。</p><p>在约翰逊可以完成英国脱欧任务的承诺下，英国目前执政的保守党也将发起该党的竞选活动。</p><p>与此同时，在野的工党领袖科尔宾将在演讲中承诺，在工党领导下实现一场“真正的变革”。</p><h3 id="香港亲中议员何君尧被刺伤">香港亲中议员何君尧被刺伤</h3><iframe width="560" height="315" src="https://www.youtube.com/embed/1CPZdkn7rc4" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><h3 id="滴滴宣布恢复顺风车业务">滴滴宣布恢复顺风车业务</h3><p>不过这一过程中引起了不少争议。因为新政策发布文字中提到：“试运营期间，首先提供 5:00-23:00（女性 5:00-20:00）、市内中短途（50 公里以内）的顺风车平台服务”。引起舆论对于滴滴性别歧视的指控。</p><p>在舆论发酵之后，滴滴修改了顺风车政策，无论男女，顺风车业务都只开放到20点。</p><h3 id="中国称美国愿意分阶段取消关税"><a href="https://www.dw.com/zh/贸易战：中国称美国愿意-分阶段取消关税/a-51144826?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">中国称美国愿意分阶段取消关税</a></h3><p>中国官方周四宣布，中美双方同意“分阶段取消加征关税”。而此前曾有美方官员表示，特朗普和习近平可能会将签署贸易协议推迟到12月份，因为协议内容和双方会面地点依然没有敲定。</p><h3 id="王思聪被限制高消费">王思聪被限制高消费</h3><p>王思聪已被上海市嘉定区人民法院发布限制消费令。上述限制消费令显示，法院于2019年08月12日立案执行申请人曹悦申请执行上海熊猫互娱文化有限公司其他合同纠纷一案，因熊猫互娱未按执行通知书指定的期间履行生效法律文书确定的给付义务，被采取限制消费措施，限制其法定代表人、主要负责人、影响债务履行的直接责任人员、实际控制人王思聪不得实施高消费及非生活和工作必需的消费行为。</p><h3 id="其他新闻">其他新闻</h3><h4 id="国内">国内</h4><ul><li>习近平会见香港特首林郑月娥，肯定其工作。<a href="http://www.bbc.com/zhongwen/simp/chinese-news-50298922" target="_blank" rel="noopener">source</a></li><li>滴滴宣布了顺风车的试运营产品方案将于11月20日起，陆续在哈尔滨、太原、石家庄、常州、沈阳、北京、南通7个城市上线试运营。根据方案，试运营期间，滴滴将在这7个城市首先提供5:00-23:00（女性5:00-20:00）、市内中短途（50公里以内）的顺风车平台服务。试运营期间，不收取信息服务费。<a href="http://www.lieyunwang.com/archives/460451" target="_blank" rel="noopener">source</a></li><li>根据VISA中国官方的消息， Visa将与腾讯合作为国际Visa持卡人提供微信支付服务。同时支付宝（Alipay）首次向中国的国际旅行者开放该平台。</li><li>香港反送中出现第一条命案：一名港科技大学本科生在香港防暴警察于将军澳驱散示威者期间从高处堕下，其堕楼原因仍在调查当中。在抢救五日以后，这名学生死亡。<a href="http://www.bbc.com/zhongwen/simp/chinese-news-50302812" target="_blank" rel="noopener">source</a></li><li>前10个月中国进出口总值3.74万亿美元，同比下降2.5%。<a href="http://sputniknews.cn/economics/201911081030010067/" target="_blank" rel="noopener">source</a></li><li>日本议员在华走私毒品案宣判，涉案的樱木琢磨被广州市中级人民法院判处无期徒刑。他于2013年10月31日在广州白云国际机场准备搭乘航班经由上海转机回日本时，安检人员在其行李箱拉杆夹层及箱内女式松糕凉鞋内共查获甲基苯丙胺（俗称冰毒）3289克。</li><li>长春长生生物科技有限责任公司破产。该公司之前陷入疫苗不合格的丑闻。</li><li>大陆开放香港人在粤港大湾区的购房资格限制。<a href="http://www.bbc.com/zhongwen/simp/chinese-news-50343654" target="_blank" rel="noopener">source</a></li></ul><h4 id="国际">国际</h4><ul><li>印度新德里严重雾霾导致航班延误。世界上污染最严重的前30个城市中，印度占了22个。这是设在瑞士的全球空气质量数据研究机构IQ AirVisual和环保组织绿色和平的最新研究结果。其余的8个城市则在巴基斯坦、孟加拉和中国。不过榜上有名的中国城市并不是其首都北京。北京的空气质量近年来大幅改善，现在已经列在第122名。<a href="https://www.bbc.com/zhongwen/simp/world-50344544" target="_blank" rel="noopener">source</a></li><li>台湾向其「邦交国」洪都拉斯提供3亿美元贷款。<a href="http://www.bbc.com/zhongwen/simp/chinese-news-50299692" target="_blank" rel="noopener">source</a></li><li>中美贸易战签约可能延迟到12月。<a href="https://www.dw.com/zh/中美签约恐再延迟-或选择在欧洲见/a-51144826?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">source</a></li><li>法国总统马克龙访华。</li><li>匈牙利计划让华为参与本国的5G网络建设。<a href="https://www.dw.com/zh/匈牙利计划让华为参与本国5g网络建设/a-51121503?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">source</a></li><li>伊朗回复福尔多核设施的浓缩铀活动。<a href="https://cn.reuters.com/article/iran-nuclear-centrifuges-fuel-1107-thur-idCNKBS1XH03C?feedType=RSS&amp;feedName=CNTopGenNews" target="_blank" rel="noopener">source</a></li><li>越南和英国警方确认上月发生在英国的集装箱惨案遇难者国籍，39名遇难者均为越南人。<a href="https://cn.reuters.com/article/britain-bodies-truck-1107-thur-idCNKBS1XI026?feedType=RSS&amp;feedName=CNTopGenNews" target="_blank" rel="noopener">source</a></li><li>中美联合破获首起芬太尼走私案，缴获芬太尼11.9公斤。<a href="https://cn.reuters.com/article/china-liu-fentanyl-drug-court-1107-idCNKBS1XH0GX?feedType=RSS&amp;feedName=CNTopGenNews" target="_blank" rel="noopener">source</a></li><li>柏林墙倒塌30周年</li><li>纽约市长布隆伯格有意参选总统。<a href="http://www.bbc.com/zhongwen/simp/world-50355718" target="_blank" rel="noopener">source</a></li></ul><h4 id="科技新闻">科技新闻</h4><ul><li>百度上线匿名社交APP：听筒</li><li>马云蝉联国内首富（福布斯杂志)</li></ul><h2 id="文章与言论">文章与言论</h2><ul><li>Yes, Americans should only be exposed to American Corporate-sanctioned propaganda. -- HN 读者评论美国政府宣布对抖音收购 Musical.ly 进行国家安全审查。<a href="http://www.ruanyifeng.com/blog/2019/11/weekly-issue-81.html" target="_blank" rel="noopener">source</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://imgs.codewoody.com/uploads/big/1fd7fc646d55c11f2a5394df02b88ce8.jpg&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Weekly" scheme="http://www.codewoody.com/categories/Weekly/"/>
    
    
      <category term="杂谈" scheme="http://www.codewoody.com/tags/%E6%9D%82%E8%B0%88/"/>
    
      <category term="科技新闻" scheme="http://www.codewoody.com/tags/%E7%A7%91%E6%8A%80%E6%96%B0%E9%97%BB/"/>
    
      <category term="转载" scheme="http://www.codewoody.com/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="Weekly" scheme="http://www.codewoody.com/tags/Weekly/"/>
    
  </entry>
  
  <entry>
    <title>Weekly-19</title>
    <link href="http://www.codewoody.com/posts/10221/"/>
    <id>http://www.codewoody.com/posts/10221/</id>
    <published>2019-11-03T08:30:29.000Z</published>
    <updated>2019-11-10T23:12:02.188Z</updated>
    
    <content type="html"><![CDATA[</p><h2 id="新闻">新闻</h2><h3 id="冲绳首里城大部分建筑被烧毁"><a href="https://t.me/solidot/9273" target="_blank" rel="noopener">冲绳首里城大部分建筑被烧毁</a></h3><p>周四，位于日本冲绳的世界文化遗产首里城的大部分建筑遭大火烧毁。首里城建造于 13 世纪末至 14 世纪之间，从 15 世纪至 19 世纪是琉球国都城和王宫的所在地，至今有 500 多年的历史，公元 2000 年由联合国列为世界遗产。朝日新闻报道，31 日凌晨 2 点 50 分左右，110 报警电话接到消防方面的通报称，那霸市首里城 “正殿发生火灾，冒出黑烟”。那霸署表示，首里城的正殿、北殿及南殿全部烧毁。火势也蔓延至位于正殿前的御庭入口 “奉神门” 及与南殿相邻的“书院”。以上均为木造建筑物。</p><p><img src="https://imgs.codewoody.com/uploads/big/51392c77f48d0f0f5ebf48f1fa95ecc6.jpg"></p><h3 id="isis头目巴格达迪在美国袭击中死亡"><a href="https://cn.reuters.com/article/mideast-crisis-ishead-killed-1027-idCNKBS1X7013?feedType=RSS&amp;feedName=CNTopGenNews" target="_blank" rel="noopener">ISIS头目巴格达迪在美国袭击中死亡</a></h3><p>美国总统特朗普周日宣布，极端组织<a href="https://zh.wikipedia.org/wiki/%E4%BC%8A%E6%96%AF%E5%85%B0%E5%9B%BD" target="_blank" rel="noopener">“伊斯兰国”(ISIS)</a>头目巴格达迪(Abu Bakr al-Baghdadi)在美国特种部队对叙利亚西北部的袭击行动中身亡，实现了他所谓的最高国家安全目标。</p><p><img src="https://imgs.codewoody.com/uploads/big/5f44c8f9ab4135c21d04774404e7347d.jpg"></p><p>特朗普在白宫发表电视讲话中称，巴格达迪被逼入一个坑道尽头，随即引爆自杀式炸弹背心身亡。</p><p>特朗普称，15分钟后经过DNA检验，确认了他的身份。</p><p>数小时后，叙利亚库尔德民兵武装保护人民部队(YPG)宣布，被称作巴格达迪左右手的伊斯兰国发言人Abu al-Hassan al-Muhajir，也在库尔德人和美国军方在叙利亚北部的另一次联合行动中身亡。</p><h3 id="欧盟同意英国脱欧延期"><a href="https://www.dw.com/zh/欧盟同意：英国脱欧期限再次推迟/a-51018684?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">欧盟同意英国脱欧延期</a></h3><p>欧洲理事会主席图斯克(Donald Tusk)周一表示，欧盟其他27个成员国周一同意接受英国的要求，将英国退欧期限延长至2020年1月31日。</p><p>首相约翰逊谋求提前举行大选。英国将在12月12日提前举行大选。<a href="http://www.bbc.com/zhongwen/simp/uk-50228289" target="_blank" rel="noopener">source</a></p><h3 id="英国集装箱案-39-名死者均为越南人"><a href="https://www.bbc.com/zhongwen/simp/world-50272480" target="_blank" rel="noopener">英国集装箱案 39 名死者均为越南人</a></h3><p>英国埃塞克斯警方说，他们相信在集装箱惨案中发现的39名遇难者全部为越南人，推翻了此前其认定是中国人的结论。</p><p><img src="https://imgs.codewoody.com/uploads/big/6ab6ac405b1590adc4544fe452c82b06.jpg"></p><h3 id="三季度中国国内手机出货量情况">三季度中国国内手机出货量情况</h3><p>同比去年下降3%。其中：</p><p>华为增长66%，占比42.4%，</p><p>vivo下降23%，占比17.9%，</p><p>OPPO下降20%，占比17.4%，</p><p>小米下降33%，占比9.0%，</p><p>苹果下降28%，占比5.2%，</p><p>Others下降31%，占比8.0%。</p><h3 id="智利宣布取消主板apec峰会"><a href="https://cn.reuters.com/article/chile-apec-summitcancellation-1030-wedn-idCNKBS1XA00T?feedType=RSS&amp;feedName=CNTopGenNews" target="_blank" rel="noopener">智利宣布取消主板APEC峰会</a></h3><p>智利周三宣布，受街头抗议活动影响，取消主办即将于下个月举行的亚太经合组织(APEC)峰会。美国和中国原本料在这次峰会上签署一项贸易协议，缓和双方已经损害到全球经济的贸易战。</p><p>同时取消的还有联合国气候变化大会(COP25)。西班牙提议接替智利在马德里主办COP25.</p><h3 id="其他新闻">其他新闻</h3><h4 id="国内">国内</h4><ul><li>敦煌干涸了三百年的湖泊哈拉奇湖重现，湖面约5平方公里</li><li>鄂尔多斯男子在微信群称化肥含量不够被拘留: 8月25日至26日，鄂尔多斯市杭锦旗吉日嘎朗镇村民梁某某在没有购买使用某化肥公司的化肥，并且没有任何证据证明该化肥公司的化肥有质量问题的前提下，在一个50人的微信群内发表该化肥公司含量不够等言论，造成了严重的社会影响。<a href="http://www.nmgzf.gov.cn/msrx/2019-10-22/28315.html" target="_blank" rel="noopener">source</a></li><li>黄之锋被剥夺香港区议员参选资格。<a href="http://www.bbc.com/zhongwen/simp/chinese-news-50217675" target="_blank" rel="noopener">source</a></li><li>台湾立法院批准耗资最多2500亿新台币（约81.9亿美元）向美国购买66架F-16V战斗机的《新式战机采购特别条例草案》。<a href="http://sputniknews.cn/military/201910301029945884/" target="_blank" rel="noopener">source</a></li><li>世界贸易组织小型部长会议将于11月5日在上海举行。<a href="http://sputniknews.cn/politics/201910301029945870/" target="_blank" rel="noopener">source</a></li><li>广州市宣布区块链奖励政策，公链项目最高补贴1000万元、本地项目最高补贴300万元。补贴基金总计10亿元。</li><li>罗永浩被列入限制高消费名单，不得选择飞机二等以上舱位。</li></ul><h4 id="国际">国际</h4><ul><li>澳大利亚的乌鲁鲁岩宣布对攀登者永久性关闭</li><li>加州因为野火宣布进入紧急状态。截至北京时间 10 月 29 日下午 2 点，整个加州目前有 12 处火点正在燃烧，其中仅有 1 处火势已经被完全控制，但距离扑灭仍然有较长距离。</li><li>法国加莱发现偷渡冷藏车，货柜车的目的地是英国。检查人员拉响了警报。车厢里藏有8人，其中4名孩子，因发现及时，躲过一劫。<a href="https://www.dw.com/zh/法国加莱：死亡冷藏车事件险些重演/a-51019718?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">source</a></li><li>比利时警方30日在该国北部城市Antwerp的一辆货车的冰柜内发现12名男性移民。</li><li>英国将在12月12日提前举行大选。<a href="http://www.bbc.com/zhongwen/simp/uk-50228289" target="_blank" rel="noopener">source</a></li><li>叙利亚和土耳其政府军在叙利亚北部边境地区发生直接交火。<a href="https://www.dw.com/zh/战斗持续-土叙政府军直接交火/a-51035515?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">source</a></li><li>美国通过「台北法案」</li><li>美国众议院以压倒性的绝对多数表决结果，正式承认第一次世界大战期间对亚美尼亚人的屠杀是种族灭绝。<a href="https://www.dw.com/zh/美众议院：亚美尼亚大屠杀是-种族灭绝/a-51046036?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">source</a></li><li>Twitter将在全球禁止政治广告。</li><li>美国众议院投票通过弹劾总统调查程序。<a href="https://cn.reuters.com/article/house-vote-impeachment-resolution-1031-t-idCNKBS1XB31P?feedType=RSS&amp;feedName=CNTopGenNews" target="_blank" rel="noopener">source</a></li><li>本周联合国大会，谴责中国新疆政策的国家有22个，而赞赏北京做法的国家则有54个。显然北京的同盟军正在不断发展壮大。<a href="https://www.dw.com/zh/德语媒体：北京的同盟军/a-51070144?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">source</a></li><li>印度已将克什米尔地区正式划分为由新德里中央政府直接管辖的两个地区。该决定可能再次引起地区骚乱。<a href="https://www.dw.com/zh/克什米尔分为两个印度直接管辖区/a-51070052?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">source</a></li></ul><h4 id="科技新闻">科技新闻</h4><ul><li>28日小米宣布将在11月5日发布小米手表</li><li>苹果发布AirPods pro，包含主动降噪功能。<a href="https://sspai.com/post/57198" target="_blank" rel="noopener">source</a></li><li>28日蔚来汽车CFO 谢东萤辞职，自2019年10月30日起生效。<a href="http://www.lieyunwang.com/archives/460164" target="_blank" rel="noopener">source</a></li><li>中国成立了一只 2000 多亿美元的半导体投资基金</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://imgs.codewoody.com/uploads/big/5f44c8f9ab4135c21d04774404e7347d.jpg&quot;&gt;
    
    </summary>
    
      <category term="Weekly" scheme="http://www.codewoody.com/categories/Weekly/"/>
    
    
      <category term="杂谈" scheme="http://www.codewoody.com/tags/%E6%9D%82%E8%B0%88/"/>
    
      <category term="科技新闻" scheme="http://www.codewoody.com/tags/%E7%A7%91%E6%8A%80%E6%96%B0%E9%97%BB/"/>
    
      <category term="转载" scheme="http://www.codewoody.com/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="Weekly" scheme="http://www.codewoody.com/tags/Weekly/"/>
    
  </entry>
  
  <entry>
    <title>Weekly-18</title>
    <link href="http://www.codewoody.com/posts/59180/"/>
    <id>http://www.codewoody.com/posts/59180/</id>
    <published>2019-10-27T13:28:29.000Z</published>
    <updated>2019-11-03T08:34:44.510Z</updated>
    
    <content type="html"><![CDATA[<h2 id="新闻">新闻</h2><h3 id="陈同佳出狱"><a href="https://www.dw.com/zh/陈同佳出狱-如何赴台受审仍无共识/a-50942108?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">陈同佳出狱</a></h3><p>陈同佳愿意前往台湾投案，但是被台当局拒绝。随后两天民进党当局态度反复，至本周结束仍然没有确定信息。</p><h3 id="厄瓜多尔临时迁都">厄瓜多尔临时迁都</h3><p>新华社基多10月7日电（记者郝云甫）厄瓜多尔总统莫雷诺7日宣布，鉴于当前首都基多的安全局势愈发紧张，厄政府机关将从基多临时迁至厄瓜多尔第一大城市瓜亚基尔。</p><p><img src="https://imgs.codewoody.com/uploads/big/4e401143a51fd32ff356c18a8be78039.jpg"></p><p>莫雷诺在7日晚发表的全国电视讲话中表示，从10月3日开始，厄社会受到抗议活动的严重冲击。他说，抗议活动的暴力色彩越来越严重，暴徒恣意进行打砸抢等暴力活动。“这是有组织、有计划的行动，意在破坏厄瓜多尔的民主秩序，破坏政府的稳定。”</p><p><img src="https://imgs.codewoody.com/uploads/big/61487e47b4082106911b49a56f0d70d8.jpg" alt="" style="width: 70%;"></p><p>莫雷诺指责厄瓜多尔前总统科雷亚是暴力活动的幕后黑手。他指控科雷亚及其支持者企图利用抗议活动发动一场旨在推翻现政府的“政变”。</p><p>莫雷诺强调，政府不会退缩，不会在压力下停止经济改革。同时他呼吁抗议者立即同政府开展对话以化解分歧。</p><p>日前，厄宣布取消对汽油等燃油的价格补贴，这一措施导致油价大涨并引发民众强烈不满。为抗议政府放开汽油价格，厄交通运输业者3日举行全国大罢工。莫雷诺3日宣布全国进入为期60天的紧急状态，以应对厄公共交通行业宣布罢工给社会造成的混乱状况。</p><p>在厄首都基多，居民由于担心物价大幅上涨而开始抢购食物。超市货架的各类食品被抢购一空。厄政府开始采取措施打击哄抬物价的行为。此外，由于担心安全问题，从3日开始，厄瓜多尔全国中小学处于持续停课状态。</p><h3 id="德仁天皇即位典礼22日举行"><a href="https://cn.reuters.com/article/japan-emperor-enthronement1022-tues-idCNKBS1X105Q?feedType=RSS&amp;feedName=CNTopGenNews" target="_blank" rel="noopener">德仁天皇即位典礼22日举行</a></h3><p>日本德仁天皇正式即位典礼将于周二(22日)举行，将有来自超过180个国家的政要贵宾出席这场有百年历史的庆祝仪式。</p><p>晚间将举行“飨宴之仪”，本次宴请将于22日，25日，29日，31日分4天宴请约2000名国内外宾客，其中22日宴请外国领导人，祝贺使节，参众两院议长，首相，最高裁判所长官等共约410人。</p><p>当日东京银座，数百名对天皇制的民众在东京银座举行示威，高喊“反对即位”等口号，部分示威者与警方发生冲突，3人被捕。</p><p><img src="https://imgs.codewoody.com/uploads/big/dafe160b119289285436e2ee1d453b1e.jpg"></p><h3 id="智利宣布进入紧急状态"><a href="https://www.bbc.com/zhongwen/simp/world-50109650" target="_blank" rel="noopener">智利宣布进入紧急状态</a></h3><p><img src="https://imgs.codewoody.com/uploads/big/0069ab52e3f3a59d02a4e2ec053ad8c5.jpg"></p><p>智利首都圣地亚哥因地铁加价<span class="foot-note-span">【10月6日凌晨，圣地亚哥新公交系统开始使用，地铁早晚高峰各两个小时时段的票价较原来上涨30比索，达到830比索（约合1.17美元）】</span>引发民众示威抗议。智利总统皮涅拉宣布首都进入紧急状态。</p><p>当地时间周五，以学生为主的示威者在当地多个地铁站出入口纵火，破坏站内设施。有示威者向警察投掷石块，袭击警车并燃烧至少一辆巴士。警方出动防暴警察，向示威者使用警棍及催泪弹。</p><p>受示威影响，当地地铁服务暂停。</p><h4 id="旧闻一则">旧闻一则</h4><p><img src="https://imgs.codewoody.com/uploads/big/d2ca8d3ef329d28b18883f9dc5ba9c94.jpg"></p><h3 id="玻利维亚大选结束存在舞弊疑虑"><a href="http://www.rfi.fr/cn/contenu/20191022-%E8%AE%A1%E7%A5%A8%E7%BB%93%E6%9E%9C%E7%AA%81%E9%80%86%E8%BD%AC-%E7%8E%BB%E5%88%A9%E7%BB%B4%E4%BA%9A%E6%80%BB%E7%BB%9F%E5%A4%A7%E9%80%89%E7%88%86%E8%88%9E%E5%BC%8A%E7%96%91%E8%99%91" target="_blank" rel="noopener">玻利维亚大选结束，存在舞弊疑虑</a></h3><p>玻维亚昨天举行战况激烈的总统大选，最新计票结果显示，长期执政的现任总统莫拉莱斯似乎准备迎接胜利，引发舞弊疑虑，主要反对派候选人梅沙今天拒绝承认这项结果。</p><p><img src="https://imgs.codewoody.com/uploads/big/075998034c0d5bf4a312cf34540db078.jpg"></p><p>昨晚初步计票结果显示，得票率第2高的前总统梅沙（Carlos Mesa）将与莫拉莱斯（Evo Morales）一同进入第2轮决选，如今计票结果却突然翻转，梅沙今天谴责选举当局发布的修正结果是场「骗局」。</p><p>梅沙说：「我们不会承认那些计票结果，那是这场可耻、虚假骗局的一环，使玻利维亚社会处于不必要的紧张局势。」</p><p>梅沙在圣克鲁斯（Santa Cruz）告诉记者：「我们相信公民们不会接受这个结果。政府创造了一个不可能发生的局面，伪造人民的投票。」</p><p>来自美洲国家组织（Organization of American States）的选举监督小组稍早已对玻利维亚大选结果突然逆转「深表关切」。</p><p>选举监督小组声明说：「对于投票结束后显示的初步结果走向发生剧烈且难以解释的变化，美洲国家组织代表团深表关切和讶异。」</p><p>代表团指出，昨晚公布的初步计票结果显示，59岁的莫拉莱斯囊括45%选票，66岁的梅沙则拿下38%，两人得票皆未达到首轮所需的当选门槛，这意味莫拉莱斯原本将首度面临第2轮决选。</p><p>媒体报导，双方支持者在行政首都拉巴斯（La Paz）街头爆发冲突，美洲国家组织呼吁选举当局「坚决捍卫玻利维亚人民的意志」，并呼吁各方冷静。</p><p>「在这种棘手的情况下，保持冷静和避免各种形式的暴力极为重要。」</p><p>反对派支持者已在全国各地主要计票中心外头发起抗议，以向选举当局持续施压。</p><h3 id="中国富裕人口总数超过美国">中国富裕人口总数超过美国</h3><p>瑞士信贷的研究显示，中国富裕人口首度超越美国。瑞士信贷周一公布的年度财富调查结果显示，截至今年年中为止，名列全球前 10% 的富裕人口中，中国占了 1 亿人，美国则占了 9,900 万人。研究显示，全球百万美元富翁人数估计增加 110 万人至 4,680 万人，整体净资产规模达 158.3 万亿美元，占全球总数的 44%。美国占上述增幅的一半以上，新增 67.5 万个百万富翁。55,920 名成年人的身家至少 1 亿美元，4,830 人的净资产超过 5 亿美元。</p><h3 id="英国卡车集装箱内发现39具尸体"><a href="http://www.bbc.com/zhongwen/simp/uk-50154243" target="_blank" rel="noopener">英国卡车集装箱内发现39具尸体</a></h3><p>据英国天空新闻23日最新消息，英国埃塞克斯一工业园区的一辆卡车集装箱内发现39具尸体。报道称，卡车司机是一名来自北爱尔兰的25岁男子，现因涉嫌谋杀已被逮捕。</p><p><img src="https://imgs.codewoody.com/uploads/big/6415960c2c878cf88a16235b55373f03.jpeg"></p><p>后续传出消息39名遇难者均为中国国籍，随后驻英大使馆以及英国警方均表示目前还未确认遇难者国籍。有消息显示遇难者中可能有越南人(<a href="https://cn.reuters.com/article/vietnam-uk-embassy-truck-dead-1025-idCNKBS1X5005?feedType=RSS&amp;feedName=CNTopGenNews" target="_blank" rel="noopener">source</a>)。有多名越南人表示他们担心其亲属可能在这辆集卡车上(<a href="http://www.bbc.com/zhongwen/simp/uk-50182847" target="_blank" rel="noopener">source</a>)。</p><p>27日消息，英国警方称将把调查重点转向越南社区。(<a href="http://www.bbc.com/zhongwen/simp/world-50198514" target="_blank" rel="noopener">source</a>)</p><h3 id="其他新闻">其他新闻</h3><ul><li>总市值超过30亿港元的「51信用卡」疑似被查。(<a href="https://www.zhihu.com/question/351747235" target="_blank" rel="noopener">source</a>)</li><li>塔利班组织证实了将于下周在华举行阿富汗各派间会议的计划。(<a href="http://sputniknews.cn/politics/201910231029895765/" target="_blank" rel="noopener">source</a>)</li><li>加拿大大选结束，特鲁多连任，但议会席次大减。(<a href="https://cn.reuters.com/article/canada-election-trudeau-win-1023-idCNKBS1X204L?feedType=RSS&amp;feedName=CNTopGenNews" target="_blank" rel="noopener">source</a>)</li><li>外籍乘客拉高铁紧急制动阀未被处理？广州铁路回应。</li><li>因为美国未及时发放签证，中国代表团集体缺席今年的国际宇航联大会。(<a href="https://www.dw.com/zh/%E5%9B%BD%E9%99%85%E5%AE%87%E8%88%AA%E8%81%94%E5%A4%A7%E4%BC%9A%E6%B2%A1%E6%9C%89%E4%B8%AD%E5%9B%BD%E4%B8%AD%E6%89%B9%E7%BE%8E%E7%AD%BE%E8%AF%81%E6%AD%A6%E5%99%A8%E5%8C%96/a-50959480?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">source</a>)</li><li>韩国决定放弃世贸组织中的发展中国家地位。(<a href="http://sputniknews.cn/economics/201910251029914306/" target="_blank" rel="noopener">source</a>)</li><li><a href="https://www.zaobao.com.sg/realtime/world/story20191027-1000491" target="_blank" rel="noopener">当地时间10月27日，美国德州发生大规模枪击案，已致2死10多伤</a>: 综合美联社、《达拉斯早报》27日消息称，当地时间周日(27日)凌晨，位于得克萨斯州格林维尔市的一个校园派对上发生大规模枪击事件。据当地官员和目击者称，至少造成2人死亡、十多人受伤。</li><li>巴西宣布对中国免签。</li><li>27日，叙利亚民主力量（SDF）周日（10月27日）宣布从叙利亚和土耳其边境最终撤离，叙利亚边防军将取代他们。(<a href="http://sputniknews.cn/military/201910271029926849/" target="_blank" rel="noopener">source</a>)</li><li>26日，《中华人民共和国密码法》发布。密码法旨在规范密码应用和管理，促进密码事业发展，保障网络与信息安全，提升密码管理科学化、规范化、法治化水平，是中国密码领域的综合性、基础性法律。(<a href="https://www.williamlong.info/archives/5869.html" target="_blank" rel="noopener">source</a>)</li></ul><h3 id="数码新闻">数码新闻</h3><ul><li>10月23日华为正式发布5G折叠手机Mate X，售价为16999元起。</li><li>微软赢得五角大楼100亿美元的云计算合同。</li><li>路透社刚刚援引英国《星期日泰晤士报》27日的报道称，英国首相鲍里斯·约翰逊正准备授予中国华为公司访问英国未来的5G电信网络“不具争议性”部分的权限。(<a href="https://www.cnbeta.com/articles/tech/903835.htm" target="_blank" rel="noopener">source</a>)</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://imgs.codewoody.com/uploads/big/6415960c2c878cf88a16235b55373f03.jpeg&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Weekly" scheme="http://www.codewoody.com/categories/Weekly/"/>
    
    
      <category term="杂谈" scheme="http://www.codewoody.com/tags/%E6%9D%82%E8%B0%88/"/>
    
      <category term="科技新闻" scheme="http://www.codewoody.com/tags/%E7%A7%91%E6%8A%80%E6%96%B0%E9%97%BB/"/>
    
      <category term="转载" scheme="http://www.codewoody.com/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="Weekly" scheme="http://www.codewoody.com/tags/Weekly/"/>
    
  </entry>
  
  <entry>
    <title>Weekly-17</title>
    <link href="http://www.codewoody.com/posts/58220/"/>
    <id>http://www.codewoody.com/posts/58220/</id>
    <published>2019-10-20T06:43:49.000Z</published>
    <updated>2019-10-27T13:28:58.937Z</updated>
    
    <content type="html"><![CDATA[<h2 id="新闻">新闻</h2><h3 id="赵紫阳下葬民间公墓">赵紫阳下葬民间公墓</h3><p><img src="https://imgs.codewoody.com/uploads/big/11b96d95c8d170401a9c3dd80ce75d5b.jpg"></p><p>10月18日下午一時，前中共中央总书记赵紫阳在逝世14年后，与夫人的骨灰合葬于北京昌平区民间公墓天寿园。赵家子女在经历多年波折后，终于在父亲百岁冥诞之时，遵循了中国“入土为安”的传统。在此之前，赵的骨灰一直放置在他北京的故居。</p><p>BBC中文得到消息，赵家子女在与官方协商后，为顺利举行安葬仪式，做出承诺：仅安排直系后裔参加，以家礼送葬。北京数名原本听到消息，准备低调参与安葬仪式的赵紫阳仰慕者被限制行动，未能成行。</p><h3 id="腾讯恢复nba季前赛直播">腾讯恢复NBA季前赛直播</h3><blockquote><p>要么一开始就别整，要整就要整到底。雷声大雨点小，授人以柄，丢人现眼</p></blockquote><p><img src="https://imgs.codewoody.com/uploads/big/729f859e4f97b7a201bafb411f327147.jpg"></p><h3 id="加泰罗尼亚独立运动领导人被判重刑"><a href="https://www.dw.com/zh/加泰罗尼亚独立运动领导人被判重刑/a-50824240?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">加泰罗尼亚独立运动领导人被判重刑</a></h3><p>西班牙最高法院作出裁定：分别判处加泰罗尼亚独立运动的12名被告中的9人9至13年有期徒刑。不过，法官未认定被告犯有叛乱罪。检方曾要求以该罪判处被告最高25年监禁。被告分别被判处多年监禁。前加泰罗尼亚大区政府副主席容克拉斯获最高13年徒刑。数名被告还被裁定犯有侵吞公共资产罪。另3名前政界人士被裁定犯有不服从罪。此案涉及分离主义运动领袖们在2017年10月1日的遭禁独立全民公投中所扮演的角色，及由此导致的巴塞罗那地区政府作出加泰罗尼亚脱离西班牙的决定。</p><p>16日，加泰罗尼亚首府巴塞罗那又发生严重冲突。独立运动支持者焚烧汽车和街垒。大区政府现任主席谴责了暴力。警方通报说，有暴力倾向的独立运动人士不仅向安全力量投掷石块和爆竹，而且还使用了&quot;沾有酸性液体的物品&quot;。这已是在巴塞罗那市内及周边大规模示威的第三天。(<a href="https://www.dw.com/zh/%E5%B7%B4%E5%A1%9E%E7%BD%97%E9%82%A3%E6%8E%A5%E8%BF%9E3%E5%A4%9C%E5%8F%91%E7%94%9F%E9%AA%9A%E4%B9%B1/a-50865092?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">来源</a>)</p><p><img src="https://imgs.codewoody.com/uploads/big/ffcbcacf0a9a8f41f79c15fe66e1d57f.jpg"></p><h3 id="美国众议院通过香港人权民主法案"><a href="http://www.bbc.com/zhongwen/simp/chinese-news-50065093" target="_blank" rel="noopener">美国众议院通过香港人权民主法案</a></h3><p>美国众议院投票一致通过《香港人权与民主法案》，要求美国政府每年审视香港的自治情况，按需要调整美国对香港的贸易特别待遇。 法案的通过被视为美国政府回应香港近期示威浪潮的重要一步。</p><p>法案的主要发起人、共和党议员史密斯（Chris Smith）说，众议院促请中国和香港政府履行承诺，保护香港的权利和自治权。</p><p>中国外交部发言人耿爽周三（10月16日）对法案获得众议院通过感到“强烈愤慨和坚决反对”，他批评香港面临的不是人权和民主问题，而是尽快恢复秩序、维护法治的问题。“美国国会众议院罔顾事实、颠倒黑白，把肆意纵火、打砸商铺、暴力袭警等严重犯罪称之为人权和民主问题，是赤裸裸的双重标准。”</p><p>同一天，香港政府也发表声明，对美国众议院通过法案表示遗憾，重申外国议会不应干预香港内部事务。</p><p>除了《香港人权与民主法案》，众议院还通过了《保护香港法案》，禁止美国公司向香港出口催泪弹等人群管制用品。</p><p>这两部法案正式成为法律前，仍然需要参议院通过，最后由总统特朗普签署正式确定。参议院目前仍未决定什么时候开始审议。《经济学人》智库早前分析称，相信这份法案会在今年年底之前成为真正的法律。</p><h3 id="华为公布第三季度业绩报告"><a href="https://mp.weixin.qq.com/s/KYqp1_NFmbQ46YaG9w45Ig" target="_blank" rel="noopener">华为公布第三季度业绩报告</a></h3><p>华为于昨日公布了 2019 年第三季度的业绩报告。报告显示，华为截至第三季度销售收入 6108 亿人民币，同比增长 24.4%，净利润率为 8.7%。在消费者业务方面，智能手机保持稳健增长，前三季度发货量超过 1.85 亿台，同比增长 26%。而 PC、平板、智能穿戴、智能音频等新业务均获得高速增长。</p><p>另外，在报告中华为还提到，截至目前，华为已和全球领先运营商签定了 60 多个 5G 商用合同，40 多万个 5G Massive MIMO AAU 将发往世界各地。</p><blockquote><p>在制裁中逆势增长，中国还是太缺像华为这样的企业了。</p></blockquote><h3 id="英国退欧协议在欧盟获得通过"><a href="https://cn.reuters.com/article/eu-uk-reach-bexit-deal-1017-idCNKBS1WW1BN?feedType=RSS&amp;feedName=CNTopGenNews" target="_blank" rel="noopener">英国退欧协议在欧盟获得通过</a></h3><p>路透布鲁塞尔10月17日 - 欧盟执委会主席容克说，英国和欧盟达成了一项新的英国脱欧协议。</p><p>英国议会10月19日星期六就脱离欧盟问题举行辩论，决定再次延迟英国议会的脱欧表决。约翰逊政府遭遇重大挫折。(<a href="https://www.bbc.com/zhongwen/simp/world-50110944" target="_blank" rel="noopener">source</a>)</p><p>英国议会议员们以322票赞成，306否决，通过了前保守党议员、现独立无党派议员莱特温提出的英国脱欧修正案，规定所有必要的英国立法获得通过前，英国政府必须推迟英国脱欧。</p><p>这意味着约翰逊首相必须在当地周六晚11点前致函欧盟，提出英国脱欧延期的要求。</p><h3 id="其他新闻">其他新闻</h3><ul><li>重名梗：台湾政治学学者蔡英文先生于10月10日在台北去世，享年67岁。(<a href="https://news.ifeng.com/c/7qjvbpXilwg" target="_blank" rel="noopener">来源</a>)</li><li>印度放宽对华旅游签证限制(<a href="https://finance.jrj.com.cn/2019/10/14010628239620.shtml" target="_blank" rel="noopener">来源</a>)</li><li>韩国艺人崔雪莉死亡(<a href="https://daily.zhihu.com/story/9716169" target="_blank" rel="noopener">来源</a>)</li><li>沙特首次开放旅游签证([来源]](http://www.bbc.com/zhongwen/simp/world-50047289))</li><li>德国宣布不会在5G网络建设中排除华为(<a href="https://www.dw.com/zh/德国5g网络建设不排除华为/a-50819825?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">来源</a>)</li><li>贾跃亭正式申请个人破产(<a href="https://www.williamlong.info/archives/5857.html" target="_blank" rel="noopener">来源</a>): 贾跃亭债务处理小组在发布的《有关贾跃亭先生个人破产重组及成立债权人信托的声明》（以下简称声明）中表示，贾跃亭已于美国当地时间10月13日根据美国相关法律第11章（chapter 11）主动申请个人破产重组，这将成为解决贾跃亭个人余下债务并保障债权人利益的最佳方案。</li><li>风灾已经导致日本58人死亡(<a href="https://cn.reuters.com/article/japan-typhoon-death-toll-1014-idCNKBS1WU039?feedType=RSS&amp;feedName=CNTopGenNews" target="_blank" rel="noopener">来源</a>)，其中遇难中国籍船员达到6人(<a href="http://sputniknews.cn/china/201910151029834269/" target="_blank" rel="noopener">来源</a>)。</li><li>中缅边境地区电信诈骗猖獗，严重区域内的微信支付宝支付服务被封停。</li><li>深圳开出首张电子烟发单，罚款50元。这意味着在禁烟场所，电子烟同样不被允许。</li><li>国务院：允许外国银行在中国设立独资银行或者开分行。(<a href="http://m.yahui.cc/forex/tzck/1551226-1.htm" target="_blank" rel="noopener">来源</a>)</li><li>香港特首发表《施政报告》，首次以短片形式发表。(<a href="http://www.bbc.com/zhongwen/simp/chinese-news-50065095" target="_blank" rel="noopener">来源</a>)</li><li>中美合拍的《雪人奇缘》出现中国「九段线」，遭到越南封禁。(<a href="http://www.bbc.com/zhongwen/simp/chinese-news-50051675" target="_blank" rel="noopener">来源</a>)</li><li>中国9月 CPI涨幅达到六年以来的最高水平，生猪数量减少四成。(<a href="http://www.qdaily.com/articles/64658.html?source=feed" target="_blank" rel="noopener">来源</a>)</li><li>香港民阵召集人岑子杰遭到不明身份人士袭击，目前已送院接受治疗。(<a href="https://www.dw.com/zh/突发：香港民阵召集人遇袭送医/a-50856924?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">来源</a>)</li><li>一名挪威议员提议港人竞选2020年诺贝尔和平奖(<a href="https://www.dw.com/zh/挪威议员提名港人竞逐2020诺贝尔和平奖/a-50855455?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">来源</a>)</li><li>美国政府要求中国驻美人员应在对政府、高校和研究机构的代表进行正式访问之前，事先通知美国外交部门。(<a href="http://sputniknews.cn/politics/201910171029851948/" target="_blank" rel="noopener">来源</a>)</li><li>亚美尼亚开通受理中国银联卡。(<a href="http://sputniknews.cn/economics/201910171029851555/" target="_blank" rel="noopener">来源</a>)</li><li>通用汽车与工会和解</li><li>17日，土耳其同意在叙利亚停火五天，供库尔德武装撤离。(<a href="https://cn.reuters.com/article/turkeypause-assault-syria-1017-thur-idCNKBS1WX057?feedType=RSS&amp;feedName=CNTopGenNews" target="_blank" rel="noopener">来源</a>)</li><li>中国内地停止向香港出口黑色T恤。(<a href="https://www.dw.com/zh/中国内地停止向香港出口黑色t恤/a-50872996?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">来源</a>)</li><li>广西玉林一家化工厂发生爆炸。(<a href="https://daily.zhihu.com/story/9716267" target="_blank" rel="noopener">来源</a>)</li><li>引发持续四个月“反送中”示威的香港杀人嫌犯陈同佳同意赴台自首，但台湾官方表示，希望香港政府续押陈同佳。(<a href="http://www.bbc.com/zhongwen/simp/chinese-news-50107703" target="_blank" rel="noopener">source</a>)</li><li>智利首都圣地亚哥因地铁加价引发民众示威抗议。智利总统皮涅拉宣布首都进入紧急状态。(<a href="http://www.bbc.com/zhongwen/simp/world-50109650" target="_blank" rel="noopener">source</a>)</li><li>波兰：新法案将性教育与“恋童癖”划等号。(<a href="https://www.dw.com/zh/波兰：新法案将性教育与-恋童癖-划等号/a-50899314?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">source</a>)</li></ul><h3 id="科技新闻">科技新闻</h3><ul><li>亚马逊消费者业务关闭最后的甲骨文数据库。</li><li>苹果明年可能发布四款5G iPhone。</li><li>亚马逊提出了一种新的无线协议，叫做Amazon Sidewalk协议，使用900兆赫频率，特点是低带宽、长距离（通信距离可以到一英里），设计用途是连接房屋内部和周围的所有物联网设备。第一款使用该协议的产品，将是明年发售的狗牌 Ring Fetch。狗戴着这个设备，一旦失去信号，就表示狗已经远离了你，你就会收到警报。只要收到信号，就表示狗在距离你一英里的范围内。(<a href="https://blog.aboutamazon.com/devices/introducing-amazon-sidewalk" target="_blank" rel="noopener">来源</a>)</li><li>10月8日 丰台发布第二代Mirai燃料汽车。(<a href="https://www.autoblog.com/2019/10/10/2021-toyota-mirai-revealed/" target="_blank" rel="noopener">来源</a>)</li><li>肯尼亚的埃留德·基普乔格（Eliud Kipchoge）10月12日在维也纳以1:59:40的成绩，成为第一个马拉松进入两小时以内的人。不过，由于这是一次专门为他破记录举办的挑战赛，为了创造记录，有41个人配合他跑，为他挡风和配速，所以国际田联不会承认这个纪录。(<a href="https://www.businessinsider.com/eliud-kipchoge-becomes-first-man-to-run-marathon-in-under-2-hours-2019-10" target="_blank" rel="noopener">来源</a>)</li><li>第一个进行太空行走的宇航员阿列克谢·列昂诺夫（Alexei Leonov）去世，享年85岁。</li><li>10月16日，在美国华盛顿，美、英、韩执法官员宣布，捣毁一个以韩国为基地的儿童非法视频暗网，并逮捕338人。该网站出售儿童非法视频，使用比特币支付，允许用户在交易中隐藏他们的身份，该网收集了至少价值37万美元的比特币。</li></ul><h2 id="文章与言论">文章与言论</h2><ul><li><a href="https://zhuanlan.zhihu.com/p/86274697" target="_blank" rel="noopener">吴恩达新书《Machine Learning Yearning》完整中文版开源</a></li><li><a href="https://modernc.gforge.inria.fr/" target="_blank" rel="noopener">Modern C</a>电子书下载。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://imgs.codewoody.com/uploads/big/11b96d95c8d170401a9c3dd80ce75d5b.jpg&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Weekly" scheme="http://www.codewoody.com/categories/Weekly/"/>
    
    
      <category term="杂谈" scheme="http://www.codewoody.com/tags/%E6%9D%82%E8%B0%88/"/>
    
      <category term="科技新闻" scheme="http://www.codewoody.com/tags/%E7%A7%91%E6%8A%80%E6%96%B0%E9%97%BB/"/>
    
      <category term="转载" scheme="http://www.codewoody.com/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="Weekly" scheme="http://www.codewoody.com/tags/Weekly/"/>
    
  </entry>
  
  <entry>
    <title>梁振英的一段发言</title>
    <link href="http://www.codewoody.com/posts/50577/"/>
    <id>http://www.codewoody.com/posts/50577/</id>
    <published>2019-10-19T08:30:51.000Z</published>
    <updated>2019-10-19T08:33:06.605Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://imgs.codewoody.com/uploads/big/e3e6f9840d729374af9624e8364eba62.jpg"></p><blockquote><p>梁振英，大紫荆勋贤，GBS，JP（英语：Leung Chun-ying，1954年8月12日－），生于香港，籍贯山东省威海市，现任全国政协副主席、全国政协常务委员，香港特别行政区第4任行政长官，也是前香港特别行政区行政会议非官守成员召集人，香港测量师学会前会长及戴德梁行亚太区前主席。梁振英于香港回归前，曾经担任由中方委任的基本法咨询委员会秘书长，参与《香港基本法》的起草事务。</p></blockquote><a id="more"></a><p>泛民用「普選」將「高度自治」篡改成「完全自治」，製造憲制危機</p><p>新加坡總理李顯龍日前講出一個顯淺而關鍵的道理：香港有些人要普選，但是香港不是一個國家。</p><p>香港不是一個國家，和普選不普選有什麼關係？這個問題在30多年前起草基本法時已經釐清，反修例運動發生後我再講過幾次，上星期六在摩洛哥舉行的國際會議上我又講了一次，全場的西方人聽到之後都明白，沒有人反駁。</p><p>道理是這樣的：香港不是一個國家，因此在香港本地實施的民主只能是地方性民主，只可以和倫敦、紐約、東京等城市的民主程度比較。民主國家的城市通過一人一票選出的市政府首長以及他領導的政府的權力相當有限，比香港的行政長官和特區政府的權力小得多。</p><p>為什麼香港的行政長官和特區政府的權力比外國民主國家的市長和市政府權力大？這是因為除了由香港選民通過選舉給予行政長官和特區政府民意授權外，還有中央政府通過實質任命給予額外授權，兩個授權疊加就形成了香港的高度自治權。正正由於需要有中央政府的額外授權才有高度自治，因此行政長官的產生，從辦法的制定、修改以至產生的過程，都不能把中央撇開。如果要把中央撇開，就不會有中央的額外授權，香港的行政長官和特區政府的權力就會大幅縮小至類似倫敦、紐約或東京的市長和市政府的權力。這是香港人願意接受的嗎？</p><p>我過去公開問過泛民這個問題：選舉委員會選舉也好，一人一票選舉也好，如果產生的當選人是中央不能任命的，這樣嚴重的憲制危機，該怎樣處理？泛民說，中央應該尊重香港的民意，按選舉結果任命。這就是廢除中央的任命權力，把中央變成橡皮圖章，用我的話說，是「去中央化」，用泛民的話說，是「自決」，無論怎樣表述，是30多年前「民主抗共」的延續，是香港走向獨立的一大步。</p><p>中央對行政長官的任命有最終決定權，是「高度自治」和「完全自治」的重要分野。中國政府在聯合聲明和基本法都保留了「協商」作為產生行政長官的一種辦法，是留了一手，也是為了避免出現上述的憲制危機。</p><p>我要把這個道理在今天再說一次，原因也很簡單：過去四個月，反修例是引子，「五大訴求」中四個訴求是虛晃一招，要害的是排在最後的一個訴求：「雙普選」。五年前「佔中」，明知是違反基本法的「公民提名 必不可少」竟然成為價碼，今次捲土重來，「五大訴求」的「雙普選」開價不會比「佔中」時低。過去四個月，「和勇一家」、泛民不肯割席、蘋果無恥加無良，利用每一個過世的人，為的都是選票。未來兩年半有四場選舉（區議會、立法會、行政長官選舉委員會、行政長官），下個月的區議會選舉是前哨戰，最後一役的行政長官選舉是戲肉，如果這四場選舉在今天舉行，香港會全面變天，上面說的中央拒絕任命行政長官當選人的嚴重憲制危機就會出現。</p><p>泛民選出的行政長官當選人會把尾巴藏起來，怎麼藏？參照十多年前台灣。這種人萬一成為行政長官，名義上香港仍然是中國的特別行政區，實質上是西方國家的附庸，成為反華反共基地，顛覆華南一帶，更會利用所有執法部門對建制人士和中資機構「專政」。天方夜譚嗎？請參考其他地方的顏色革命。對這些圖謀，中央一清二楚。</p><p>少數人將全體香港人被綁上戰車，攬炒中央，這不是香港大多數人的意願，只有西方國家喜聞樂見，香港本來很有潛力成為中國的金融商貿中心，幾個月下來，香港很可能成為中國的痛點，用英文的說法，就是中國大腿上的一條刺。</p><p>下去怎麼樣？不要猜，「覆巢之下無完卵」，關心香港和亞洲地區的人都要團結起來，行動起來，尤其是工商界。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://imgs.codewoody.com/uploads/big/e3e6f9840d729374af9624e8364eba62.jpg&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;梁振英，大紫荆勋贤，GBS，JP（英语：Leung Chun-ying，1954年8月12日－），生于香港，籍贯山东省威海市，现任全国政协副主席、全国政协常务委员，香港特别行政区第4任行政长官，也是前香港特别行政区行政会议非官守成员召集人，香港测量师学会前会长及戴德梁行亚太区前主席。梁振英于香港回归前，曾经担任由中方委任的基本法咨询委员会秘书长，参与《香港基本法》的起草事务。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="杂谈" scheme="http://www.codewoody.com/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="政治" scheme="http://www.codewoody.com/tags/%E6%94%BF%E6%B2%BB/"/>
    
      <category term="香港" scheme="http://www.codewoody.com/tags/%E9%A6%99%E6%B8%AF/"/>
    
  </entry>
  
  <entry>
    <title>Weekly-16</title>
    <link href="http://www.codewoody.com/posts/9133/"/>
    <id>http://www.codewoody.com/posts/9133/</id>
    <published>2019-10-08T05:47:27.000Z</published>
    <updated>2019-10-20T06:44:12.688Z</updated>
    
    <content type="html"><![CDATA[</p><h2 id="新闻">新闻</h2><h3 id="中美贸易战谈判达成第一阶段贸易协议"><a href="http://www.rfi.fr/cn/中国/20191011-特朗普让步-美中达成第一阶段贸易协议" target="_blank" rel="noopener">中美贸易战谈判达成第一阶段贸易协议</a></h3><p><img src="https://imgs.codewoody.com/uploads/big/f2de9a0bebb8a6cda7e60c434fb817cf.jpg"></p><p>当地时间周五下午，特朗普在白宫表示，美中经贸磋商取得了实质性的第一阶段成果，美国将暂缓下周15号的对华加征关税。刘鹤表示，双方在此轮磋商中就共同关心的经贸问题进行了坦诚、高效、建设性的讨论，在农业、知识产权保护、汇率、金融服务、扩大贸易合作、技术转让、争端解决等领域取得实质性进展(这些部分目前尚未有明确的说明)，讨论了后续磋商安排。</p><p>特朗普表示，美中两国“非常接近”终结贸易战。特朗普还表示，美中贸易协议有可能在下个月智利举行的亚太峰会上，由他本人与中国国家主席习近平正式签署。</p><h3 id="美国从叙利亚北部撤军"><a href="https://www.guancha.cn/internation/2019_10_07_520454.shtml" target="_blank" rel="noopener">美国从叙利亚北部撤军</a></h3><p>美国媒体NBC新闻7日报道，美国总统特朗普与土耳其总统埃尔多安6日就叙利亚问题通了电话，随后白宫发布“撤军”声明。NBC将此声明的发布时间形容为“非同寻常”。依据白宫声明，美国将“不支持也不参与”土耳其即将在叙利亚北部展开的军事行动，同时“也不会干涉”，因为美国军队将不再在“附近区域”行动。</p><p>同时，白宫在声明中提及，美国在叙利亚地区抓获了许多来自于法国、德国等欧洲国家的ISIS恐怖分子，但以上国家事后都拒绝接收。美国决定将不再收押被抓获的恐怖分子，“交由土耳其负责”，“以免浪费美国纳税人的金钱”。</p><p>另外，观察者网6日报道，土耳其总统埃尔多安在5日发出迄今为止最强烈的警告，威胁将在叙利亚东北部发动军事行动。埃尔多安表示，土耳其的目标是“用和平之泉浇灌幼发拉底河东岸”，并将200万难民安置回去。</p><p>10月9日周三，<a href="https://www.bbc.com/zhongwen/simp/world-49986040" target="_blank" rel="noopener">土耳其对叙利亚东北部的库尔德武装组织发动军事攻势</a>。土耳其总统埃尔多安表示，这场攻势旨在库尔德人控制的区域建立一个“安全区”，重新安置目前居住在土耳其的叙利亚难民。许多观察人士将此次中东局势的升级怪罪于特朗普，说他“出卖盟友”。特朗普撤军决定来得突然，国际上，美国国会两党、法国等盟友都表达了反对，认为此举背信弃义，会进一步搅乱中东局势。还有中国的军事战略观察人士认为，特朗普此举是为了重返亚太的政策，将美军的重点放在亚太地区集中对付中俄两国。</p><p>不过特朗普还表示，已经警告土耳其不得出手太重，否则将摧毁土耳其经济。</p><h3 id="刘鹤将于10日至11日赴美国进行新一轮谈判"><a href="https://cn.reuters.com/article/liuhe-visits-usa-schedule-1008-tues-idCNKBS1WN022?feedType=RSS&amp;feedName=CNTopGenNews" target="_blank" rel="noopener">刘鹤将于10日至11日赴美国进行新一轮谈判</a></h3><p>中国商务部周二表示，应美方邀请，中共中央政治局委员、国务院副总理、中美全面经济对话中方牵头人刘鹤将率团访问华盛顿，于10月10日至11日同美国贸易代表莱特希泽、财政部长姆努钦举行新一轮中美经贸高级别磋商。</p><h3 id="年诺贝尔奖揭晓">2019年诺贝尔奖揭晓</h3><p>三名科学家因氧气感知机制而获得诺贝尔医学奖；三名物理学家因宇宙学发现获诺贝尔物理学奖; 化学奖授予锂电池;</p><p><img src="https://imgs.codewoody.com/uploads/big/e87ed012ae8ca1d6aa528ef36df0a2ba.jpg"></p><h3 id="美国商务部将28家中国机构和企业列入贸易黑名单"><a href="https://cn.reuters.com/article/china-us-sanction-dip-1008-idCNKBS1WN0WG?feedType=RSS&amp;feedName=CNTopGenNews" target="_blank" rel="noopener">美国商务部将28家中国机构和企业列入贸易黑名单</a></h3><p>美国商务部周一把中国一地方公安局和包括视频监控公司海康威视及其他七家企业在内的28家机构和企业加入贸易黑名单，理由是少数民族人权问题。</p><h3 id="火箭队总经理莫雷的推特言论事件持续发酵"><a href="https://mp.weixin.qq.com/s/CCCYKg2v0yYLIAS_x8kWMw" target="_blank" rel="noopener">火箭队总经理莫雷的推特言论事件持续发酵</a></h3><ul><li><a href="https://mp.weixin.qq.com/s/CCCYKg2v0yYLIAS_x8kWMw" target="_blank" rel="noopener">30年努力3天内被毁！总裁连夜飞上海要见姚明，但依旧不道歉；NBA在中国面临全面封杀</a></li><li><a href="https://www.zhihu.com/pin/1164919880305500160" target="_blank" rel="noopener">央视暂停NBA转播</a></li><li><a href="http://www.caixin.com/2019-10-08/101468878.html" target="_blank" rel="noopener">腾讯体育也跟进停止转播NBA的比赛</a></li><li>10日的上海NBA中国赛场气氛热烈，NBA球迷正常观看比赛，被骂的比较惨。</li></ul><h3 id="无锡312国道发生跨桥侧翻事故">无锡312国道发生跨桥侧翻事故</h3><p>10月10日18时10分许，312国道K135处、锡港路上跨桥发生桥面侧翻事故。经现场搜救确认，桥下共有3辆小车被压，其中1辆系停放车辆（无人，驾驶员已找到），1辆车上共2人、已死亡，1辆车上只有1人、已死亡。侧翻桥面上共有5辆车，其中3辆小车、2辆卡车。事故共造成3人死亡，2人受伤。</p><p>故原因是限载65吨的车拉着187吨上了单柱高架，倾覆了。</p><p><img src="https://imgs.codewoody.com/uploads/big/edbaa284d83b0145ebb38b1a8962919e.jpg"></p><p><img src="https://imgs.codewoody.com/uploads/big/cf390e06e8a4e380cf10dd67abf986b7.jpg" style="width: 60%"></p><h3 id="其他新闻">其他新闻</h3><ul><li><a href="http://sputniknews.cn/economics/201910081029771025/" target="_blank" rel="noopener">港交所宣布放弃与伦交所的合并计划</a></li><li><a href="https://www.dw.com/zh/布拉格市政府同意解除与北京友好城市关系/a-50726630?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">布拉格市政府同意解除与北京的友好城市关系</a>: 布拉格现市长贺瑞普（Zdeněk Hřib）上任后，要求删除姊妹城市协定中承诺遵守“一个中国原则”的条款。作为“回应”，中方则在过去半年多次取消捷克乐团前往中国演出的行程。</li><li>全球多地发生极端环保主义者的示威活动：在纽约，几名气候变化环保主义者向纽约著名地标华尔街铜牛泼“假血”抗议，被警察逮捕。在伦敦，大量极端环保主义者封锁伦敦重要道路和桥梁，造成严重交通堵塞，至少280人被警方逮捕。</li><li><a href="http://sputniknews.cn/politics/201910091029782442/" target="_blank" rel="noopener">白宫拒绝配合参与弹劾调查</a>: 美国总统新闻秘书斯蒂芬妮∙格里沙姆称，白宫认为对美国总统特朗普的弹劾程序非法，并拒绝参与调查。</li><li><a href="https://www.dw.com/zh/德国林堡发生卡车冲撞事件-疑为恐袭/a-50734540?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">德国林堡发生卡车冲撞事件</a>: 德国黑森州林堡市一十字路口，一男子驾驶一辆劫来的载重车撞击多辆轿车。起初，这起事件被看作是一场交通事故。然而随着时间的推移，越来越人猜测，这可能是一起恐怖袭击。</li><li><a href="https://www.williamlong.info/archives/5851.html" target="_blank" rel="noopener">华人工程师因为实名抗议遭到Facebook解雇</a>: 因Facebook华人工程师跳楼事件，9月26日在Facebook门前悼念自杀华人工程师的活动中举工牌谴责Facebook的工程师尹伊，因此事被Facebook开除，开除的理由是“lack of judgement” （缺乏判断力）。</li><li><a href="https://www.williamlong.info/archives/5849.html" target="_blank" rel="noopener">Paypal退出虚拟货币组织Libra协会</a></li><li><a href="https://www.zhihu.com/question/349513003" target="_blank" rel="noopener">吴京成为中国首位150亿先生</a></li><li><a href="https://daily.zhihu.com/story/9715872" target="_blank" rel="noopener">宁夏推出夫妻共同育儿假</a>， 0至3岁子女父母每年可以休10天假期。</li><li><a href="https://www.zhihu.com/question/349045610" target="_blank" rel="noopener">10月1日 烟台氦气球事故导致一对母子遇难</a></li><li><a href="http://sputniknews.cn/politics/201910111029805670/" target="_blank" rel="noopener">习近平访问印度，为期两天</a></li><li><a href="http://sputniknews.cn/society/201910111029804561/" target="_blank" rel="noopener">10月10日 伊朗女性几十年来被首次允许现场观看球赛</a></li><li><a href="https://cn.reuters.com/article/iran-missile-tanker-1011fri-idCNKBS1WQ0QJ?feedType=RSS&amp;feedName=CNTopGenNews" target="_blank" rel="noopener">10月11日 伊朗油轮在沙特附近海域遭到两枚导弹袭击</a>。伊朗国家石油公司是这艘油轮的船主。</li><li>教育部发布关于深化本科教育教学改革全面提高人才培养质量的意见，文件要求，严把考试和毕业出口关。完善过程性考核与结果性考核有机结合的学业考评制度，综合应用笔试、口试、非标准答案考试等多种形式，科学确定课堂问答、学术论文、调研报告、作业测评、阶段性测试等过程考核比重。加强考试管理，严肃考试纪律，<strong>坚决取消毕业前补考等“清考”行为</strong>。</li><li><a href="http://sputniknews.cn/sport/201910121029820408/" target="_blank" rel="noopener">肯尼亚运动员埃鲁德·基普乔格成为史上首个在两小时之内跑42195米马拉松的田径运动员。</a></li><li>强台风海贝思12日晚登陆日本</li><li>美国新奥尔良兴建中酒店大楼倒塌，1死18伤。(<a href="https://www.zaobao.com.sg/realtime/world/story20191013-996696?themeId=2&amp;utm_expid=.GDliSVqsR_G-lVPCVeIVMg.1&amp;utm_referrer=https%3A%2F%2Fwww.google.com%2F" target="_blank" rel="noopener">来源</a>)</li></ul><h3 id="数码信息">数码信息</h3><ul><li><a href="https://sspai.com/post/56873" target="_blank" rel="noopener">10月8日 苹果推送了macOS Catalina正式版</a>: 新版 macOS 将 iTunes 拆分为三个独立应用、推出了支持 iPad 作为第二屏幕的 「随航」，macOS 版「屏幕使用时间」等多项新功能。</li><li>法国高级法院今日裁定 Steam 玩家有权转卖自己购买的数字版游戏，Valve 不但无权阻止还必须提供线上交易二手游戏的功能并删除禁止玩家交易游戏的条款。限期一个月执行。此裁定不仅限于法国而是在全欧盟生效。<a href="https://www.zhihu.com/question/346942214" target="_blank" rel="noopener">来源</a></li></ul><h2 id="文章与资源">文章与资源</h2><ul><li><a href="http://www.sheui.com/" target="_blank" rel="noopener">SheUi</a>: 一个设计素材网站。</li><li><a href="http://www.ruanyifeng.com/blog/2019/03/grid-layout-tutorial.html" target="_blank" rel="noopener">CSS Grid 网格布局教程</a>: 阮一峰写的教程</li><li><a href="https://zhuanlan.zhihu.com/p/27449990" target="_blank" rel="noopener">npm和yarn的区别</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://imgs.codewoody.com/uploads/big/f2de9a0bebb8a6cda7e60c434fb817cf.jpg&quot;&gt;
    
    </summary>
    
      <category term="Weekly" scheme="http://www.codewoody.com/categories/Weekly/"/>
    
    
      <category term="杂谈" scheme="http://www.codewoody.com/tags/%E6%9D%82%E8%B0%88/"/>
    
      <category term="科技新闻" scheme="http://www.codewoody.com/tags/%E7%A7%91%E6%8A%80%E6%96%B0%E9%97%BB/"/>
    
      <category term="转载" scheme="http://www.codewoody.com/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="Weekly" scheme="http://www.codewoody.com/tags/Weekly/"/>
    
  </entry>
  
  <entry>
    <title>Weekly-15</title>
    <link href="http://www.codewoody.com/posts/8941/"/>
    <id>http://www.codewoody.com/posts/8941/</id>
    <published>2019-10-03T06:46:36.000Z</published>
    <updated>2019-10-12T04:51:30.631Z</updated>
    
    <content type="html"><![CDATA[<h2 id="新闻">新闻</h2><h3 id="国庆大阅兵">国庆大阅兵</h3><iframe width="560" height="315" src="https://www.youtube.com/embed/TypEKtdYN6w" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><h3 id="facebook总部一名中国籍员工跳楼"><a href="https://www.williamlong.info/archives/5838.html" target="_blank" rel="noopener">Facebook总部一名中国籍员工跳楼</a></h3><p>Facebook一名中国籍员工从公司位于加州门洛帕克（Menlo Park）的总部大楼四楼跳楼身亡。据悉，该员工已经在美国工作8年，但他仍没有拿到绿卡，只有工作签证，又要养家糊口，不能和上司翻脸，只好忍气吞声，最终不堪重负结束了自己的生命。</p><p>据华商报报道，自杀者为38岁的华人男子陈勤（音译）。根据领英页面显示，陈勤今年38岁，浙江大学毕业，到美国后在南加州大学攻读硕士，去年3月入职Facebook公司。</p><h3 id="十一香港继续骚乱"><a href="https://www.dw.com/zh/香港十一多区衝突﹕警開六槍-一人中彈重伤/a-50656186?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">十一香港继续骚乱</a></h3><p>中国庆祝国庆70周年当天，香港多个地区发生民众游行示威活动，演變為激烈警民衝突。警方除了使用催泪弹和水炮車驱散示威者，更多次開真槍，導致一名示威青年中槍。當局公佈最少74人受伤送院，數人情況危殆及嚴重。</p><p>10月4日 香港特区政府行政长官林郑月娥周五称，政府决定引用《紧急情况规例条例》订立禁止蒙面规例，10月5日生效，但此举不等于香港进入紧急状态。</p><h3 id="thomas-cook宣布破产">Thomas Cook宣布破产</h3><p>9月23日，英国最大的旅游集团Thomas Cook突然发布声明，宣告公司即刻破产。Thomas Cook拥有178年历史，是世界上第一家旅行社，在英国拥有最大的旅游市场份额。破产之后Thomas Cook在全球范围内雇佣的2.2万员工（其中9000英国员工）将立刻面临失业。</p><p>百年老字号Thomas Cook轰然倒闭时，有超过60万游客仍在度假，其中15万是英国人。Thomas Cook宣告破产将直接导致这些游客的旅行计划告吹，甚至滞留海外。</p><p>对于Thomas cook的突然倒闭，英国交通大臣Grant Shapps表示，英国政府和民航管理局已租用数十架专机，准备免费把Thomas cook的旅客安全送回英国。这次代号为“马特洪峰”（Operation Matterhorn）的大规模撤侨已经启动，昨天（9月22日），空无一人的专机已经从英国出发，今天就会开始“救援”。英国交通部表示，所有此前通过Thomas cook预订在未来两周回国的英国旅客，将会在尽量接近原定返回日期的日子搭乘政府安排的航班。</p><p><img src="https://imgs.codewoody.com/uploads/big/cafb19f6ac0d0b2d4860d5b61686da8b.jpg"></p><p><img src="https://imgs.codewoody.com/uploads/big/7f13b09098bd86acff10e007f45ba8e2.jpg"></p><h3 id="台湾宜兰南方澳跨港大桥坍塌-10人受伤5人失踪"><a href="http://www.rfi.fr/cn/%E6%94%BF%E6%B2%BB/20191001-%E5%8F%B0%E6%B9%BE%E5%AE%9C%E5%85%B0%E5%8D%97%E6%96%B9%E6%BE%B3%E8%B7%A8%E6%B8%AF%E5%A4%A7%E6%A1%A5%E5%9D%8D%E5%A1%8C-10%E4%BA%BA%E5%8F%97%E4%BC%A45%E4%BA%BA%E5%A4%B1%E8%B8%AA" target="_blank" rel="noopener">台湾宜兰南方澳跨港大桥坍塌 10人受伤5人失踪</a></h3><p>台湾宜兰县的知名地标南方澳跨港大桥，10月1日当地时间上午9时发生坍塌意外，倒塌详细原因不明。事故发生时，一辆油罐车正要过桥，当车辆驶抵对岸时，大桥两端突然断裂崩塌，油罐车瞬间下坠，起火燃烧，目前该驾驶员已送医急救。</p><p>台湾媒体报导，根据当地警察和消防部门初步清查，至少有三艘渔船被压在桥下，已传出10多人受伤，其中多名是外籍渔工。</p><h3 id="甘地骨灰被盗"><a href="http://sputniknews.cn/society/201910041029740835/" target="_blank" rel="noopener">甘地骨灰被盗</a></h3><p>《今日印度》（India Today）援引当地政府的消息报道称，印度民族解放运动领导人莫罕达斯∙甘地的骨灰被从印度纪念馆中盗走。</p><p>在1948年1月被暗杀后甘地的遗体被火化，骨灰被分成几部分，其中一部分被保存在中央邦的纪念馆中。 骨灰被盗一事发生在庆祝甘地诞辰150周年之日。报纸报道称，前来向“印度国父“甘地表示敬意的当地国大党领袖古尔米特∙辛格发现了骨灰被盗。此外，在纪念馆的入口处还被写上了“国家的叛徒”的涂鸦。</p><p>辛格说：“好像，这件事是那些喜欢南度蓝姆∙高德西的人所为，而高德西是刺杀甘地的凶手。这种仇恨必须立刻停止，警方必须迅速采取行动，确定并抓住窃贼。”</p><h3 id="普京承认正在帮助中国打造导弹攻击预警系统"><a href="http://sputniknews.cn/opinion/201910041029742216/" target="_blank" rel="noopener">普京承认正在帮助中国打造导弹攻击预警系统</a></h3><p>10月3日，俄联邦总统普京在“瓦尔代”国际辩论俱乐部所做的最为主要的声明是，正式承认帮助中国打造导弹攻击预警系统。这是中俄在战略国防领域进行合作的首次正式确认。这种合作的事实本身，要比中俄关系中的任何政治声明都重要。出席“瓦尔代”俱乐部总结大会的俄罗斯军事专家瓦西里·卡申在接受卫星通讯社采访时这样指出。</p><h3 id="伊拉克局势紧张">伊拉克局势紧张</h3><p><img src="https://imgs.codewoody.com/uploads/big/117f1266f837ef35feec15e5ae36387e.jpg"></p><h3 id="科技新闻">科技新闻</h3><ul><li><a href="https://www.williamlong.info/archives/5843.html" target="_blank" rel="noopener">百度浏览器正式停止服务</a></li><li><a href="https://www.williamlong.info/archives/5842.html" target="_blank" rel="noopener">华为已生产出可绕过所有美国零部件的5G基站</a>，并早在今年的8月和9月对新基站进行了测试。</li><li><a href="https://www.zhihu.com/question/348872920" target="_blank" rel="noopener">10月2日 微软发布Surface Neo双屏电脑</a></li><li><a href="https://www.eastbaytimes.com/2019/09/24/fremont-police-tesla-runs-low-on-juice-during-high-speed-chase/" target="_blank" rel="noopener">美国加州弗里蒙特警察局一辆特斯拉在追击逃犯的过程中电量耗尽</a></li><li><a href="https://arstechnica.com/features/2019/09/after-starship-unveiling-mars-seems-a-little-closer/" target="_blank" rel="noopener">SpaceX 公司发布自己的宇宙飞船StartShip</a></li></ul><h3 id="其他新闻">其他新闻</h3><ul><li><a href="https://www.dw.com/zh/美国将对欧盟数十亿商品征收关税/a-50688175?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">美国将对欧盟数十亿美元的商品加征关税</a>: 10月2日，世贸组织裁决欧盟“未能采取合适措施撤销对空客的补贴”，允许美国向欧盟约75亿美元的商品及服务征税。现在，华盛顿将对这一裁决付诸实施。布鲁塞尔则威胁要采取报复行动。</li><li><a href="http://sputniknews.cn/society/201910041029740217/" target="_blank" rel="noopener">希腊最大的护卫舰在演习中搁浅</a></li><li><a href="https://www.guancha.cn/internation/2019_10_06_520380.shtml" target="_blank" rel="noopener">英国和美国政府于周四签订了「史上首份」双边数据分享协议</a>，允许执法部门直接向对方国家的科技公司要求数据。这意味着，英国当局不再需要向美国政府提出申请，即可直接要求美国脸书、谷歌、推特等公司提供用户数据，协助涉及恐怖主义、儿童侵害与其他严重犯罪的调查。</li></ul><figure><img src="https://imgs.codewoody.com/uploads/big/5fcb07e374cc99a160874d00b37135b4.jpg" alt="截图：英国政府官网"><figcaption>截图：英国政府官网</figcaption></figure><ul><li><a href="https://www.guancha.cn/internation/2019_10_05_520286.shtml" target="_blank" rel="noopener">新加坡「防网络假信息」法生效</a>: 恶意散播假信息，损害新加坡公共利益的个人最高可判10年有期徒刑和10万新加坡元（约合50万元人民币）的罚款，不愿配合的企业则会面临100万新加坡元（约合500万元人民币）的罚款。根据法令，新加坡内阁部长将有评断信息真假，并要求更正或撤下信息的绝对权力，当事方若有异议，可以上诉。</li></ul><figure><img src="https://imgs.codewoody.com/uploads/big/288b1ab7b3160106fbb70dd81abea8e5.jpg" alt="关于《防止网络假信息和网络操纵法案》生效的政府公报"><figcaption>关于《防止网络假信息和网络操纵法案》生效的政府公报</figcaption></figure><h2 id="文章与资源">文章与资源</h2><ul><li><a href="https://www.bbc.com/zhongwen/simp/world-49878585" target="_blank" rel="noopener">沙特王室蓝钻事件：卅年余波不息疑团至今未解</a>: 沙特皇宫30年前出了一起珠宝失窃案，引发了一连串凶杀命案和外交危机，余波持续至今。那个偷了沙特王子蓝钻石的人现在同意与媒体见面，讲出他的故事。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;figure&gt;
&lt;img src=&quot;https://imgs.codewoody.com/uploads/big/2a13a1f6e2fc5597d43f109d84c99528.jpg&quot; alt=&quot;大家国庆快乐。&quot;&gt;&lt;figcaption&gt;大家国庆快乐。&lt;/figcaption&gt;
&lt;/figure&gt;
    
    </summary>
    
      <category term="Weekly" scheme="http://www.codewoody.com/categories/Weekly/"/>
    
    
      <category term="杂谈" scheme="http://www.codewoody.com/tags/%E6%9D%82%E8%B0%88/"/>
    
      <category term="科技新闻" scheme="http://www.codewoody.com/tags/%E7%A7%91%E6%8A%80%E6%96%B0%E9%97%BB/"/>
    
      <category term="转载" scheme="http://www.codewoody.com/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="Weekly" scheme="http://www.codewoody.com/tags/Weekly/"/>
    
  </entry>
  
  <entry>
    <title>Weekly-14</title>
    <link href="http://www.codewoody.com/posts/57900/"/>
    <id>http://www.codewoody.com/posts/57900/</id>
    <published>2019-09-23T03:39:56.000Z</published>
    <updated>2019-10-08T05:57:22.681Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://imgs.codewoody.com/uploads/big/d05d886a3394d1e6e42509d6920141ef.jpeg"></p><a id="more"></a><p>临近国庆，GFW也是越来越高了，大量现有的梯子都挂了，我的梯子也不能直连了。不过好在我在国内有一台支持Ipv6的服务器。大概是因为Ipv6的普及率还不够高，因此Ipv6还没有被严格封禁，可以利用这台服务器作为跳板机跳出去。具体的方法可以参考我的这几篇博文：</p><ul><li><a href="/_posts/2019-02-21-Shadowsocks中继-从Ipv4到Ipv6.md">Shadowsocks中继-从Ipv4到Ipv6</a></li><li><a href="/_posts/2019-04-13-Haproxy支持Ipv6.md">Haproxy支持Ipv6</a></li></ul><h2 id="新闻">新闻</h2><h3 id="英国高院裁定首相让议会休会违法"><a href="https://cn.reuters.com/article/uk-court-johnson-suspending-parliament-0-idCNKBS1W916R?feedType=RSS&amp;feedName=CNTopGenNews" target="_blank" rel="noopener">英国高院裁定首相让议会休会违法</a></h3><p>英国最高法院周二裁定，首相约翰逊建议伊丽莎白女王让议会休会的行为违法，因此议会不算休会。</p><h3 id="中国第一艘两栖攻击舰下水"><a href="https://www.yicai.com/news/100343739.html" target="_blank" rel="noopener">中国第一艘两栖攻击舰下水</a></h3><figure><img src="https://imgs.codewoody.com/uploads/big/7cbac6b9a9761385633ce44e3bbd9f8f.jpg" alt="9月25日上午，中国海军首艘两栖攻击舰下水仪式在上海举行。"><figcaption>9月25日上午，中国海军首艘两栖攻击舰下水仪式在上海举行。</figcaption></figure><p><a href="https://zh.wikipedia.org/wiki/075%E5%9E%8B%E4%B8%A4%E6%A0%96%E6%94%BB%E5%87%BB%E8%88%B0" target="_blank" rel="noopener">075型两栖攻击舰</a>是中国人民解放军海军正在设计建造的一种大型两栖攻击舰，此舰为解放军海军最大的两栖战舰，设有机库，能搭载近30架各型直升机，拥有直通甲板，可同时起降多架直升机，同时设有坞舱，可作为两栖车辆和气垫登陆艇的母船，可以运送士兵、步兵战车、主战坦克等展开登陆作战，这将使中国海军能更顺利进行两栖作战，提升解放军的登陆力量。</p><p>预计明年3月该型号的两栖攻击舰还有一艘下水。</p><p><img src="https://imgs.codewoody.com/uploads/big/d5a7cea8e6abbe5b3a4cd8c82b185a3c.jpg"></p><h3 id="北京大兴机场投入运营"><a href="https://www.zhihu.com/question/48264362" target="_blank" rel="noopener">北京大兴机场投入运营</a></h3><p><img src="https://imgs.codewoody.com/uploads/big/cec234d0300527f7bf2de58a620b26ca.jpg"></p><p>北京大兴国际机场 9 月 25 日将迎来首航，届时，也标志着该机场正式投入运营。大兴机场被英国《卫报》评为「新世界七大奇迹」之首。2015 年，机场航站楼工程开工建设；2017 年 6 月，航站楼钢结构封顶；2018 年 12 月，机场跑道道面全面贯通；2019 年，主体工程全部竣工。</p><h3 id="美国众议院通过有关弹劾特朗普的一项决议"><a href="https://www.zhihu.com/question/345899888/answer/836097003" target="_blank" rel="noopener">美国众议院通过有关弹劾特朗普的一项决议</a></h3><p>美国国会众议院司法委员会当地时间12日表决通过一项决议，为弹劾总统相关调查确立准则。这也是该委员会就弹劾现任美国总统特朗普通过的第一项决议。</p><p>事件起因是有人匿名举报川普通乌克兰。。。举报者说7月25日川普打电话给新当选的乌克兰总统泽连斯基，以4亿美元军事援助款项为要挟，8次要求乌克兰调查拜登儿子在乌克兰的腐败案件。</p><p>作为反击，川普周三上午立刻公布了自己的<a href="https://www.nytimes.com/interactive/2019/09/25/us/politics/trump-ukraine-transcript.html" target="_blank" rel="noopener">电话录音文本</a>力证清白。30分钟的通话记录显示，川普只提了两次拜登的名字，只是请求泽连斯基继续调查拜登家族贪腐案，完全没有用军事援助来要挟。</p><p>另外，周一标普收盘2992点，周二佩洛西（众议院议长）宣布「通过弹劾相关决议」，标普下点0.8%，周三特朗普公开电话记录，标普上涨0.6%。</p><h3 id="其他新闻">其他新闻</h3><ul><li><a href="https://www.dw.com/zh/《香港人权与民主法案》过第一关-中批外国干预「险恶用心」/a-50587949?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">美国参众两院的外交委员会在周三这天，通过了多项涉及香港的法案</a>，包括《香港人权与民主法案》、《保护香港法案》以及支持港人自由权利的决议案。相关人士指出，预计在10月中这些法案就能获得全院通过，立法成功。</li><li><a href="https://www.nme.com/news/music/vinyl-set-outsell-cds-first-time-since-1986-2545781" target="_blank" rel="noopener">黑胶唱片的销售额自1986年以后第一次超过CD</a></li><li><a href="https://finance.sina.com.cn/stock/usstock/c/2019-09-01/doc-iicezueu2542877.shtml" target="_blank" rel="noopener">韩国2018年生育率降低至 0.98</a>，成为全球唯一一个生育率跌破1的国家。</li><li><a href="https://cn.reuters.com/article/pentagon-deployment-mideast-0926-thur-idCNKBS1WC00B?feedType=RSS&amp;feedName=CNTopGenNews" target="_blank" rel="noopener">美国五角大楼向沙特调派雷达和爱国者导弹电池，以加强沙特的防御</a>，本月沙特石油设施遭遇了有史以来规模最大的袭击，造成沙特石油产量缩减50%，占全球产量的5%。</li><li><a href="https://www.dw.com/zh/法国前总统希拉克逝世/a-50596161?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">法国前总统希拉克逝世</a></li><li><a href="https://www.zhihu.com/question/346910419/answer/835262623" target="_blank" rel="noopener">印度「维克兰特」号在建航母电脑内的硬盘、内存、CPU丢失</a>: 印度警方答复是，在船厂外是有监控的，但航母内部没有监控，所以追查十分困难。</li><li><a href="http://www.rfi.fr/cn/20191002-27000%E5%90%8D%E6%B3%95%E5%9B%BD%E8%AD%A6%E5%AF%9F%E8%B5%B0%E5%88%B0%E4%B8%8A%E5%B7%B4%E9%BB%8E%E8%A1%97%E5%A4%B4%E7%A4%BA%E5%A8%81%E6%B8%B8%E8%A1%8C" target="_blank" rel="noopener">法国警察上街游行</a></li><li><a href="http://www.bbc.com/zhongwen/simp/world-49906847" target="_blank" rel="noopener">突尼斯合法妓院将绝迹</a></li></ul><h2 id="资源">资源</h2><ul><li><a href="https://www.visual-paradigm.com/cn/guide/uml-unified-modeling-language/what-is-uml/" target="_blank" rel="noopener">中文 UML 教程</a></li><li><a href="https://javabrains.io/" target="_blank" rel="noopener">Java学习资源</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://imgs.codewoody.com/uploads/big/d05d886a3394d1e6e42509d6920141ef.jpeg&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Weekly" scheme="http://www.codewoody.com/categories/Weekly/"/>
    
    
      <category term="杂谈" scheme="http://www.codewoody.com/tags/%E6%9D%82%E8%B0%88/"/>
    
      <category term="科技新闻" scheme="http://www.codewoody.com/tags/%E7%A7%91%E6%8A%80%E6%96%B0%E9%97%BB/"/>
    
      <category term="转载" scheme="http://www.codewoody.com/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="Weekly" scheme="http://www.codewoody.com/tags/Weekly/"/>
    
  </entry>
  
  <entry>
    <title>Qt on Mac摸索记录 - 其四</title>
    <link href="http://www.codewoody.com/posts/41659/"/>
    <id>http://www.codewoody.com/posts/41659/</id>
    <published>2019-09-20T04:17:50.000Z</published>
    <updated>2019-09-23T03:34:52.389Z</updated>
    
    <content type="html"><![CDATA[<h2 id="事件与信号events-and-signals">事件与信号(Events and signals)</h2><p>事件系统在任何GUI框架中都是非常重要的，所有的GUI应用都是事件驱动的(Event-driven)。这些信号可以是用户产生，也可能是程序内部产生。在一个事件模型中，有如下三个重要的部分</p><ul><li>event source</li><li>event object</li><li>event target</li></ul><p>其中，event source是指产生事件的对象，一般在产生事件的同时，其内部状态也发生了变化。event object则是指描述事件本身的对象。event target则是需要响应这些事件的对象。</p><p>当我们调用<code>QApplication::exec</code>函数时，应用进入主循环中(main loop)。主循环负责获取事件并将事件发送给合适的响应对象。Qt实现了独特的signal and slot机制。这一机制是对C++变成语言的扩展。这里，信号(signal)和槽(slot)用于对象之间的通信，其中信号在事件发生时产生。槽一般是一个正常的C++函数，当指定信号触发时这个函数会被调用。信号和槽需要事先进行连接。</p><h3 id="鼠标点击">鼠标点击</h3><p>我们之前已经见过了在<code>QPushButton</code>上应用信号与槽的机制来处理点击事件。这里不再赘述，参考<a href="/posts/24435/#%E6%8C%89%E9%92%AE%E4%B8%8E%E6%95%B0%E6%8D%AE%E4%BA%A4%E4%BA%92">按钮与交互</a>这个部分。</p><h3 id="按键响应">按键响应</h3><p>下面的这个例子显示了按键响应的例子：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// keypress.h</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QWidget&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">KeyPress</span> :</span> <span class="keyword">public</span> QWidget &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span>:</span><br><span class="line">    KeyPress(QWidget *parent = <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">protected</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">keyPressEvent</span><span class="params">(QKeyEvent * e)</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// keypress.cpp</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QApplication&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QKeyEvent&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"keypress.h"</span></span></span><br><span class="line"></span><br><span class="line">KeyPress::KeyPress(QWidget *parent)</span><br><span class="line">    : QWidget(parent)</span><br><span class="line">&#123; &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> KeyPress::keyPressEvent(QKeyEvent *event) &#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> (event-&gt;key() == Qt::Key_Escape) &#123;  </span><br><span class="line">       qApp-&gt;quit();</span><br><span class="line">   &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QApplication&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"keypress.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="function">QApplication <span class="title">app</span><span class="params">(argc, argv)</span></span>;  </span><br><span class="line">    </span><br><span class="line">  KeyPress window;</span><br><span class="line">  </span><br><span class="line">  window.resize(<span class="number">250</span>, <span class="number">150</span>);</span><br><span class="line">  window.setWindowTitle(<span class="string">"Key press"</span>);</span><br><span class="line">  window.show();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> app.exec();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意<code>keyPressEvent</code>是父类<code>QWidget</code>的一个<a href="https://doc.qt.io/qt-5/qwidget.html#keyPressEvent" target="_blank" rel="noopener">虚函数</a>。故这里我们不直接使用到槽函数。</p><h3 id="qmoveevent"><code>QMoveEvent</code></h3><p>这个事件代表Widget移动的过程，同样是通过override父类的虚函数实现的。见下面的例子：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// move.h</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QMainWindow&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Move</span> :</span> <span class="keyword">public</span> QWidget &#123;</span><br><span class="line"></span><br><span class="line">  Q_OBJECT</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span>:</span><br><span class="line">    Move(QWidget *parent = <span class="number">0</span>);</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">protected</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">moveEvent</span><span class="params">(QMoveEvent *e)</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// move.cpp</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QMoveEvent&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"move.h"</span></span></span><br><span class="line"></span><br><span class="line">Move::Move(QWidget *parent)</span><br><span class="line">    : QWidget(parent)</span><br><span class="line">&#123; &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> Move::moveEvent(QMoveEvent *e) &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">int</span> x = e-&gt;pos().x();</span><br><span class="line">  <span class="keyword">int</span> y = e-&gt;pos().y();</span><br><span class="line">  </span><br><span class="line">  QString text = QString::number(x) + <span class="string">","</span> + QString::number(y);</span><br><span class="line"></span><br><span class="line">  setWindowTitle(text);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// main.cpp</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QApplication&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"move.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">  <span class="function">QApplication <span class="title">app</span><span class="params">(argc, argv)</span></span>;  </span><br><span class="line">    </span><br><span class="line">  Move window;</span><br><span class="line">  </span><br><span class="line">  window.resize(<span class="number">250</span>, <span class="number">150</span>);</span><br><span class="line">  window.setWindowTitle(<span class="string">"Move"</span>);</span><br><span class="line">  window.show();</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> app.exec();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="断开信号和槽的联系">断开信号和槽的联系</h3><p>信号和槽可以通过槽连接气力啊，也可以断开。断开通过<code>disconnect</code>函数来实现，其参数形式应当和connect时的参数一致。例如</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">connect(clickBtn, &amp;QPushButton::clicked, <span class="keyword">this</span>, &amp;Disconnect::onClick);</span><br><span class="line"><span class="comment">// ... </span></span><br><span class="line">disconnect(clickBtn, &amp;QPushButton::clicked, <span class="keyword">this</span>,</span><br><span class="line">    &amp;Disconnect::onClick);</span><br></pre></td></tr></table></figure><h3 id="timer">Timer</h3><p>Timer是周期性发出的事件（当然也可以用来做single shot）。Timer的典型例子就是用来实现一个时钟：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QWidget&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QLabel&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Timer</span> :</span> <span class="keyword">public</span> QWidget &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span>:</span><br><span class="line">    Timer(QWidget *parent = <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">protected</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">timerEvent</span><span class="params">(QTimerEvent *e)</span></span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span>:</span><br><span class="line">    QLabel *label;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"timer.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QHBoxLayout&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QTime&gt;</span></span></span><br><span class="line"></span><br><span class="line">Timer::Timer(QWidget *parent)</span><br><span class="line">    : QWidget(parent) &#123;</span><br><span class="line">        </span><br><span class="line">  QHBoxLayout *hbox = <span class="keyword">new</span> QHBoxLayout(<span class="keyword">this</span>);</span><br><span class="line">  hbox-&gt;setSpacing(<span class="number">5</span>);               </span><br><span class="line">           </span><br><span class="line">  label = <span class="keyword">new</span> QLabel(<span class="string">""</span>, <span class="keyword">this</span>);</span><br><span class="line">  hbox-&gt;addWidget(label, <span class="number">0</span>, Qt::AlignLeft | Qt::AlignTop);</span><br><span class="line"></span><br><span class="line">  QTime qtime = QTime::currentTime();</span><br><span class="line">  QString stime = qtime.toString();</span><br><span class="line">  label-&gt;setText(stime);</span><br><span class="line">   </span><br><span class="line">  startTimer(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> Timer::timerEvent(QTimerEvent *e) &#123;</span><br><span class="line">    </span><br><span class="line">  Q_UNUSED(e);</span><br><span class="line">  </span><br><span class="line">  QTime qtime = QTime::currentTime();</span><br><span class="line">  QString stime = qtime.toString();</span><br><span class="line">  label-&gt;setText(stime);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QApplication&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"timer.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">  <span class="function">QApplication <span class="title">app</span><span class="params">(argc, argv)</span></span>;  </span><br><span class="line">    </span><br><span class="line">  Timer window;</span><br><span class="line">  </span><br><span class="line">  window.resize(<span class="number">250</span>, <span class="number">150</span>);</span><br><span class="line">  window.setWindowTitle(<span class="string">"Timer"</span>);</span><br><span class="line">  window.show();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> app.exec();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的<code>startTimer</code>和<code>timerEvent</code>都是父类提供的函数。</p><h2 id="qwidget">QWidget</h2><p>这里梳理一下常用的基础控件类型。这些类都是<code>QWidget</code>的子类。</p><h3 id="qlabel"><code>QLabel</code></h3><p><code>QLabel</code>用来展示文字和<strong>图片</strong>，不涉及用户操作。</p><h3 id="qslider"><code>QSlider</code></h3><p><code>QSlider</code>提供了便捷的连续数字选择器。长这个样子：</p><p><img src="https://imgs.codewoody.com/uploads/big/eaea3516103f00b8a146e529ab5aa805.png" style="width: 202px; border: none"></p><h3 id="qcombobox"><code>QComboBox</code></h3><p><code>QComboBox</code>可以让我们从有限的下拉选项中选择。</p><p><img src="https://imgs.codewoody.com/uploads/big/aa45fd3c952bdd3f98fb8be349d789a9.png" style="width: 302px; border: none"></p><h3 id="qspinbox"><code>QSpinBox</code></h3><p>用来处理可以递增递减的离散数字</p><p><img src="https://imgs.codewoody.com/uploads/big/eb2b88936b46c8877b5c1b84746c0c85.png" style="width: 252px; border: none"></p><h3 id="qlineedit"><code>QLineEdit</code></h3><p>单行文字输入，这个我们之前已经接触过了。</p><h3 id="statusbar"><code>Statusbar</code></h3><p>状态栏，通过<code>statusBar()</code>函数来获取。</p><h3 id="其他">其他</h3><p>还有好多控件就不一一说明了，很多看名字就能知道是做什么用的：</p><ul><li><code>QCheckBox</code></li><li><code>QListWidget</code></li><li><code>QProgressBar</code></li><li><code>QPixmap</code></li><li><code>QSpliter</code></li><li><code>QTableWidget</code></li></ul><h2 id="绘图">绘图</h2><blockquote><p>这个部分也是我需要关注的重点，如何自由地绘图</p></blockquote><p><code>QPainter</code>是我们进行绘图操作的画板。绘图过程在<code>paintEvent</code>函数(<code>QWidget</code>的函数)中完成。</p><p>我们首先来看一个绘制直线的例子。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// lines.h</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QWidget&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Lines</span> :</span> <span class="keyword">public</span> QWidget &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span>:</span><br><span class="line">    Lines(QWidget *parent = <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">protected</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">paintEvent</span><span class="params">(QPaintEvent *event)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">drawLines</span><span class="params">(QPainter *qp)</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// lines.cpp</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QPainter&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"lines.h"</span></span></span><br><span class="line"></span><br><span class="line">Lines::Lines(QWidget *parent)</span><br><span class="line">    : QWidget(parent)</span><br><span class="line">&#123; &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> Lines::paintEvent(QPaintEvent *e) &#123;</span><br><span class="line">    </span><br><span class="line">  Q_UNUSED(e);</span><br><span class="line">  </span><br><span class="line">  <span class="function">QPainter <span class="title">qp</span><span class="params">(<span class="keyword">this</span>)</span></span>;</span><br><span class="line">  drawLines(&amp;qp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> Lines::drawLines(QPainter *qp) &#123;</span><br><span class="line">  </span><br><span class="line">  <span class="function">QPen <span class="title">pen</span><span class="params">(Qt::black, <span class="number">2</span>, Qt::SolidLine)</span></span>;  </span><br><span class="line">  qp-&gt;setPen(pen);</span><br><span class="line">  qp-&gt;drawLine(<span class="number">20</span>, <span class="number">40</span>, <span class="number">250</span>, <span class="number">40</span>);</span><br><span class="line"></span><br><span class="line">  pen.setStyle(Qt::DashLine);</span><br><span class="line">  qp-&gt;setPen(pen);</span><br><span class="line">  qp-&gt;drawLine(<span class="number">20</span>, <span class="number">80</span>, <span class="number">250</span>, <span class="number">80</span>);</span><br><span class="line"></span><br><span class="line">  pen.setStyle(Qt::DashDotLine);</span><br><span class="line">  qp-&gt;setPen(pen);</span><br><span class="line">  qp-&gt;drawLine(<span class="number">20</span>, <span class="number">120</span>, <span class="number">250</span>, <span class="number">120</span>);</span><br><span class="line"></span><br><span class="line">  pen.setStyle(Qt::DotLine);</span><br><span class="line">  qp-&gt;setPen(pen);</span><br><span class="line">  qp-&gt;drawLine(<span class="number">20</span>, <span class="number">160</span>, <span class="number">250</span>, <span class="number">160</span>);</span><br><span class="line"></span><br><span class="line">  pen.setStyle(Qt::DashDotDotLine);</span><br><span class="line">  qp-&gt;setPen(pen);</span><br><span class="line">  qp-&gt;drawLine(<span class="number">20</span>, <span class="number">200</span>, <span class="number">250</span>, <span class="number">200</span>);</span><br><span class="line"></span><br><span class="line">  QVector&lt;qreal&gt; dashes;</span><br><span class="line">  qreal space = <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line">  dashes &lt;&lt; <span class="number">1</span> &lt;&lt; space &lt;&lt; <span class="number">5</span> &lt;&lt; space;</span><br><span class="line"></span><br><span class="line">  pen.setStyle(Qt::CustomDashLine);</span><br><span class="line">  pen.setDashPattern(dashes);</span><br><span class="line">  </span><br><span class="line">  qp-&gt;setPen(pen);</span><br><span class="line">  qp-&gt;drawLine(<span class="number">20</span>, <span class="number">240</span>, <span class="number">250</span>, <span class="number">240</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><code>main.cpp</code>的文件内容很简单，我们之后就不放了。</p></blockquote><p>在这个例子中我们用六种不同的笔触画了六根线，如下图：</p><p><img src="https://imgs.codewoody.com/uploads/big/d6a80beb64a9a390c3ebd109f3900178.png" style="width: 50%; border: none"></p><blockquote><p>更高阶的绘图还是看原教程吧，内容太多了。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这篇文章主要介绍事件与信号，以及更多的常见控件。&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="http://www.codewoody.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程 - Qt - C++" scheme="http://www.codewoody.com/tags/%E6%95%99%E7%A8%8B-Qt-C/"/>
    
  </entry>
  
  <entry>
    <title>Qt on Mac摸索记录 - 其三</title>
    <link href="http://www.codewoody.com/posts/24435/"/>
    <id>http://www.codewoody.com/posts/24435/</id>
    <published>2019-09-19T05:01:46.000Z</published>
    <updated>2019-09-20T06:30:48.638Z</updated>
    
    <content type="html"><![CDATA[<p>这个系列的摸索是在研究<a href="http://zetcode.com/gui/qt5/" target="_blank" rel="noopener">Qt Tutorial</a>英文教程的基础上，克服在macOS上遇到的若干问题写下的记录。前面两篇我们还是在研究比较基础的模块，还没有涉及具体的GUI部分。从这篇开始我们来研究GUI开发。</p><a id="more"></a><h2 id="first-program-more">First program, more</h2><p>在第一篇文章里面我们写了一个简单的窗口程序：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QApplication&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QWidget&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">QApplication <span class="title">app</span><span class="params">(argc, argv)</span></span>;</span><br><span class="line"></span><br><span class="line">    QWidget window;</span><br><span class="line"></span><br><span class="line">    window.resize(<span class="number">250</span>, <span class="number">150</span>);</span><br><span class="line">    window.setWindowTitle(<span class="string">"Simple example"</span>);</span><br><span class="line">    window.show();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> app.exec();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里我们将其扩展一下。</p><h3 id="鼠标图标的例子">鼠标图标的例子</h3><p>这个例子将展示控件的组合方式</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// cursors</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QApplication&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QWidget&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QFrame&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QGridLayout&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cursors</span> :</span> <span class="keyword">public</span> QWidget</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  Cursors(QWidget *parent = <span class="number">0</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Cursors::Cursors (QWidget *parent)</span><br><span class="line">  : QWidget (parent)</span><br><span class="line">&#123;</span><br><span class="line">  QFrame* frame1 = <span class="keyword">new</span> QFrame(<span class="keyword">this</span>);</span><br><span class="line">  frame1-&gt;setFrameStyle(QFrame::Box);</span><br><span class="line">  frame1-&gt;setCursor(Qt::SizeAllCursor);</span><br><span class="line"></span><br><span class="line">  QFrame *frame2 = <span class="keyword">new</span> QFrame(<span class="keyword">this</span>);</span><br><span class="line">  frame2-&gt;setFrameStyle(QFrame::Box);</span><br><span class="line">  frame2-&gt;setCursor(Qt::WaitCursor) ;</span><br><span class="line"></span><br><span class="line">  QFrame *frame3 = <span class="keyword">new</span> QFrame(<span class="keyword">this</span>);</span><br><span class="line">  frame3-&gt;setFrameStyle(QFrame::Box);</span><br><span class="line">  frame3-&gt;setCursor(Qt::PointingHandCursor);</span><br><span class="line"></span><br><span class="line">  QGridLayout *grid = <span class="keyword">new</span> QGridLayout(<span class="keyword">this</span>);</span><br><span class="line">  grid-&gt;addWidget(frame1, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  grid-&gt;addWidget(frame2, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">  grid-&gt;addWidget(frame3, <span class="number">0</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">  setLayout(grid);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>*argv[])</span> </span>&#123;</span><br><span class="line">  <span class="function">QApplication <span class="title">app</span><span class="params">(argc, argv)</span></span>;</span><br><span class="line"></span><br><span class="line">  Cursors window;</span><br><span class="line">  window.resize(<span class="number">350</span>, <span class="number">150</span>);</span><br><span class="line">  window.setWindowTitle(<span class="string">"Cursors"</span>);</span><br><span class="line">  window.show();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> app.exec();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行界面如下：</p><p><img src="https://imgs.codewoody.com/uploads/big/1a14bb5978e2f4d7844b005ed289dbf6.png" style="width: 70%; border: none"></p><p>将鼠标放到不同的框里面，鼠标的图标形态会发生变化。</p><h3 id="按钮与数据交互">按钮与数据交互</h3><p>我们来写一个累加累减小工具。这次我们需要写三个文件：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// plusminus.h</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QWidget&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QApplication&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QPushButton&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QLabel&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PlusMinus</span> :</span> <span class="keyword">public</span> QWidget &#123;</span><br><span class="line"></span><br><span class="line">  Q_OBJECT</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span>:</span><br><span class="line">    PlusMinus(QWidget *parent = <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> slots:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">OnPlus</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">OnMinus</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span>:</span><br><span class="line">    QLabel *lbl;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// plusminus.cpp</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"plusminus.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QGridLayout&gt;</span></span></span><br><span class="line"></span><br><span class="line">PlusMinus::PlusMinus(QWidget *parent)</span><br><span class="line">    : QWidget(parent) &#123;</span><br><span class="line">  QPushButton *plsBtn = <span class="keyword">new</span> QPushButton(<span class="string">"+"</span>, <span class="keyword">this</span>);</span><br><span class="line">  QPushButton *minBtn = <span class="keyword">new</span> QPushButton(<span class="string">"-"</span>, <span class="keyword">this</span>);</span><br><span class="line">  lbl = <span class="keyword">new</span> QLabel(<span class="string">"0"</span>, <span class="keyword">this</span>);</span><br><span class="line">  </span><br><span class="line">  QGridLayout *grid = <span class="keyword">new</span> QGridLayout(<span class="keyword">this</span>);</span><br><span class="line">  grid-&gt;addWidget(plsBtn, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  grid-&gt;addWidget(minBtn, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">  grid-&gt;addWidget(lbl, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">  setLayout(grid);  </span><br><span class="line"></span><br><span class="line">  connect(plsBtn, &amp;QPushButton::clicked, <span class="keyword">this</span>, &amp;PlusMinus::OnPlus);</span><br><span class="line">  connect(minBtn, &amp;QPushButton::clicked, <span class="keyword">this</span>, &amp;PlusMinus::OnMinus);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> PlusMinus::OnPlus() &#123;</span><br><span class="line">  <span class="keyword">int</span> val = lbl-&gt;text().toInt();</span><br><span class="line">  val++;</span><br><span class="line">  lbl-&gt;setText(QString::number(val));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> PlusMinus::OnMinus() &#123;</span><br><span class="line">  <span class="keyword">int</span> val = lbl-&gt;text().toInt();</span><br><span class="line">  val--;</span><br><span class="line">  lbl-&gt;setText(QString::number(val));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// main.cpp</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"plusminus.h"</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">  <span class="function">QApplication <span class="title">app</span><span class="params">(argc, argv)</span></span>;  </span><br><span class="line">    </span><br><span class="line">  PlusMinus window;</span><br><span class="line"></span><br><span class="line">  window.resize(<span class="number">300</span>, <span class="number">190</span>);</span><br><span class="line">  window.setWindowTitle(<span class="string">"Plus minus"</span>);</span><br><span class="line">  window.show();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> app.exec();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在原版英文教程中没有给出编译方法<span class="foot-note-span">【即没有给出pro文件的内容】</span>，这里可能会有一些坑要踩。我们首先来看一下源文件中有什么不太一样的地方，然后给出编译的方法。</p><p>我们来看<code>plusminus.h</code>文件。首先我们要注意到<code>Q_OBJECT</code>这个宏。这个宏放在这里是我们使用Qt提供的信号与回调（槽）<span class="foot-note-span">【我也是刚开始学习，这里描述措辞后续可能需要更改】</span>的必要条件。宏的内容，实际上是定义了一些函数和属性，并且<code>qmake</code>编译系统在扫描到这个文件时，会自动生成实现这些函数的文件。另一需要注意的点是，在<code>OnPlus</code>和<code>OnMinus</code>声明的前面有<code>private slots</code>字段。这里的<code>slots</code>也是一个特殊的宏，起作用是将其后的函数标注为可供Qt事件响应系统的回调函数。</p><p>要编译这几个文件，在处理pro文件时需要注意这么几点：</p><ol type="1"><li>添加<code>Headers += plusminus.h</code>。如果没有这句话，编译系统就无法为<code>Q_OBJECT</code>标注的类创建需要的源文件，导致链接时出现<code>Undefined symbols for architecture XXX</code>类型的错误。</li><li>这里编译过程的中间临时文件比较多，建议在pro文件里面添加</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">OBJECTS_DIR=tmp</span><br><span class="line">MOC_DIR=tmp</span><br></pre></td></tr></table></figure><p>完整的pro文件如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">######################################################################</span><br><span class="line"># Automatically generated by qmake (3.1) Wed Sep 18 17:05:09 2019</span><br><span class="line">######################################################################</span><br><span class="line"></span><br><span class="line">TEMPLATE = app</span><br><span class="line">TARGET = learnQt</span><br><span class="line">INCLUDEPATH += .</span><br><span class="line"></span><br><span class="line"># You can make your code fail to compile if you use deprecated APIs.</span><br><span class="line"># In order to do so, uncomment the following line.</span><br><span class="line"># Please consult the documentation of the deprecated API in order to know</span><br><span class="line"># how to port your code away from it.</span><br><span class="line"># You can also select to disable deprecated APIs only up to a certain version of Qt.</span><br><span class="line">#DEFINES += QT_DISABLE_DEPRECATED_BEFORE=0x060000    # disables all the APIs deprecated before Qt 6.0.0</span><br><span class="line"></span><br><span class="line">OBJECTS_DIR=tmp</span><br><span class="line">MOC_DIR=tmp</span><br><span class="line"></span><br><span class="line"># Input</span><br><span class="line">SOURCES += main.cpp plusminus.cpp</span><br><span class="line">HEADERS += plusminus.h</span><br><span class="line"></span><br><span class="line">QT += widgets</span><br></pre></td></tr></table></figure><p>程序运行的界面如下：</p><p><img src="https://imgs.codewoody.com/uploads/big/d8119dbb52ad1289549bb8e29916dcba.png" style="width: 70%; border: none"></p><h2 id="menus-and-toobars"><a href="http://zetcode.com/gui/qt5/menusandtoolbars/" target="_blank" rel="noopener">Menus and toobars</a></h2><p>这里来介绍菜单和工具栏的使用。尽管在不同的操作系统下他们长的不一样，但是Qt提供了一致的接口。</p><h3 id="简单的例子">简单的例子</h3><p>下面的例子给出了最简单的Menu功能演示。我们分成三个文件：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// simplemenu.h</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QMainWindow&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QApplication&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SimpleMenu</span> :</span> <span class="keyword">public</span> QMainWindow &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span>:</span><br><span class="line">    SimpleMenu(QWidget *parent = <span class="number">0</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// simplemenu.cpp</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"simplemenu.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QMenu&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QMenuBar&gt;</span></span></span><br><span class="line"></span><br><span class="line">SimpleMenu::SimpleMenu(QWidget *parent)</span><br><span class="line">    : QMainWindow(parent) &#123;</span><br><span class="line">    </span><br><span class="line">  QAction *quit = <span class="keyword">new</span> QAction(<span class="string">"&amp;Quit"</span>, <span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">  QMenu *file;</span><br><span class="line">  file = menuBar()-&gt;addMenu(<span class="string">"&amp;File"</span>);</span><br><span class="line">  file-&gt;addAction(quit);</span><br><span class="line"></span><br><span class="line">  connect(quit, &amp;QAction::triggered, qApp, QApplication::quit);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// main.cpp</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"simplemenu.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="function">QApplication <span class="title">app</span><span class="params">(argc, argv)</span></span>;  </span><br><span class="line"></span><br><span class="line">  SimpleMenu window;</span><br><span class="line"></span><br><span class="line">  window.resize(<span class="number">250</span>, <span class="number">150</span>);</span><br><span class="line">  window.setWindowTitle(<span class="string">"Simple menu"</span>);</span><br><span class="line">  window.show();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> app.exec();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个例子在Mac上运行没法看到&quot;File&quot;这个菜单栏选项。为什么呢？这是因为在MAC中，名称为<code>Quit</code>的Action会被自动整合到名称为应用名的首个菜单项目里面去。要看到独立的<code>File</code>菜单选项，需要把<code>Quit</code>改成其他名字就好了。</p><img src="https://imgs.codewoody.com/uploads/big/4eafd4e6e49effd13e8b92370496204c.png" style="width: 70%"><figcaption>图片出处：https://forum.qt.io/topic/98908/menubar-in-macos-not-working/9</figcaption><p><br> Qt 的官方网文档在<a href="https://doc.qt.io/qt-5/qmenubar.html#details" target="_blank" rel="noopener">这里</a>说明了原因:</p><blockquote><p>Qt for macOS also provides a menu bar merging feature to make QMenuBar conform more closely to accepted macOS menu bar layout. The merging functionality is based on string matching the title of a QMenu entry. These strings are translated (using <code>QObject::tr()</code>) in the &quot;QMenuBar&quot; context. If an entry is moved its slots will still fire as if it was in the original place. The table below outlines the strings looked for and where the entry is placed if matched:</p></blockquote><p><img src="https://imgs.codewoody.com/uploads/big/9079590b1679702a8da8ca51be4c6573.png" style="border: none"></p><h3 id="toolbar">Toolbar</h3><blockquote><p>这部分最近应该用不到，先不实验，把教程内容搬过来</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#pragma once</span><br><span class="line"></span><br><span class="line">#include &lt;QMainWindow&gt;</span><br><span class="line">#include &lt;QApplication&gt;</span><br><span class="line"></span><br><span class="line">class Toolbar : public QMainWindow &#123;</span><br><span class="line">    </span><br><span class="line">  Q_OBJECT  </span><br><span class="line"></span><br><span class="line">  public:</span><br><span class="line">    Toolbar(QWidget *parent = 0);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#include &quot;toolbar.h&quot;</span><br><span class="line">#include &lt;QToolBar&gt;</span><br><span class="line">#include &lt;QIcon&gt;</span><br><span class="line">#include &lt;QAction&gt;</span><br><span class="line"></span><br><span class="line">Toolbar::Toolbar(QWidget *parent)</span><br><span class="line">    : QMainWindow(parent) &#123;</span><br><span class="line">    </span><br><span class="line">  QPixmap newpix(&quot;new.png&quot;);</span><br><span class="line">  QPixmap openpix(&quot;open.png&quot;);</span><br><span class="line">  QPixmap quitpix(&quot;quit.png&quot;);</span><br><span class="line">  </span><br><span class="line">  QToolBar *toolbar = addToolBar(&quot;main toolbar&quot;);</span><br><span class="line">  toolbar-&gt;addAction(QIcon(newpix), &quot;New File&quot;);</span><br><span class="line">  toolbar-&gt;addAction(QIcon(openpix), &quot;Open File&quot;);</span><br><span class="line">  toolbar-&gt;addSeparator();</span><br><span class="line">  QAction *quit = toolbar-&gt;addAction(QIcon(quitpix), </span><br><span class="line">      &quot;Quit Application&quot;);</span><br><span class="line">  </span><br><span class="line">  connect(quit, &amp;QAction::triggered, qApp, &amp;QApplication::quit);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// main.cpp</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"toolbar.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">  <span class="function">QApplication <span class="title">app</span><span class="params">(argc, argv)</span></span>;  </span><br><span class="line">    </span><br><span class="line">  Toolbar window;</span><br><span class="line"></span><br><span class="line">  window.resize(<span class="number">300</span>, <span class="number">200</span>);</span><br><span class="line">  window.setWindowTitle(<span class="string">"QToolBar"</span>);</span><br><span class="line">  window.show();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> app.exec();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="布局">布局</h2><p>这个部分开始我们来将布局方面的知识，这也是我最为关注的部分。布局有两种方式：</p><ul><li>absolute positioning</li><li>layout managers</li></ul><h3 id="绝对定位">绝对定位</h3><p>绝对定位要求显式指定各个Widget的位置和大小。关于绝对定位我们需要注意如下几点：</p><ul><li>Widget的位置和大小不会因为窗口resize而变化</li><li>使用绝对定位在不同平台上看起来可能不会不一样（通常会很糟糕）</li><li>改变字体会导致布局出错</li><li>如果我们试图修改布局，那那么需要进行大量的重构，这是非常费时的</li></ul><p>综合上面的原因，除了一些必须的场景以外，我们一般都是使用布局管理器。</p><p>下面是一个使用绝对布局的例子：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// absolute.cpp</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QApplication&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QDesktopWidget&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QTextEdit&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Absolute</span> :</span> <span class="keyword">public</span> QWidget &#123;</span><br><span class="line">    </span><br><span class="line"> <span class="keyword">public</span>:</span><br><span class="line">     Absolute(QWidget *parent = <span class="number">0</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Absolute::Absolute(QWidget *parent)</span><br><span class="line">    : QWidget(parent) &#123;</span><br><span class="line">        </span><br><span class="line">  QTextEdit *ledit = <span class="keyword">new</span> QTextEdit(<span class="keyword">this</span>);</span><br><span class="line">  ledit-&gt;setGeometry(<span class="number">5</span>, <span class="number">5</span>, <span class="number">200</span>, <span class="number">150</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">  <span class="function">QApplication <span class="title">app</span><span class="params">(argc, argv)</span></span>;  </span><br><span class="line">    </span><br><span class="line">  Absolute window;</span><br><span class="line"></span><br><span class="line">  window.setWindowTitle(<span class="string">"Absolute"</span>);</span><br><span class="line">  window.show();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> app.exec();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里<code>setGeometry()</code>函数用来设置绝对位置坐标和大小。</p><p>下面我们开始介绍典型的布局管理器。</p><h3 id="box布局">Box布局</h3><p><code>QVBoxLayout</code>这个类将Widget垂直放置。Widget通过<code>addWidget</code>函数添加。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// verticalbox.h</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QWidget&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">VerticalBox</span> :</span> <span class="keyword">public</span> QWidget &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span>:</span><br><span class="line">    VerticalBox(QWidget *parent = <span class="number">0</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// verticalbox.cpp</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"verticalbox.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QVBoxLayout&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QPushButton&gt;</span></span></span><br><span class="line"></span><br><span class="line">VerticalBox::VerticalBox(QWidget *parent)</span><br><span class="line">    : QWidget(parent) &#123;</span><br><span class="line"></span><br><span class="line">  QVBoxLayout *vbox = <span class="keyword">new</span> QVBoxLayout(<span class="keyword">this</span>);</span><br><span class="line">  vbox-&gt;setSpacing(<span class="number">1</span>);</span><br><span class="line">  </span><br><span class="line">  QPushButton *settings = <span class="keyword">new</span> QPushButton(<span class="string">"Settings"</span>, <span class="keyword">this</span>);</span><br><span class="line">  settings-&gt;setSizePolicy(QSizePolicy::Expanding, QSizePolicy::Expanding);</span><br><span class="line">  QPushButton *accounts = <span class="keyword">new</span> QPushButton(<span class="string">"Accounts"</span>, <span class="keyword">this</span>);</span><br><span class="line">  accounts-&gt;setSizePolicy(QSizePolicy::Expanding, QSizePolicy::Expanding);</span><br><span class="line">  QPushButton *loans = <span class="keyword">new</span> QPushButton(<span class="string">"Loans"</span>, <span class="keyword">this</span>);</span><br><span class="line">  loans-&gt;setSizePolicy(QSizePolicy::Expanding, QSizePolicy::Expanding);</span><br><span class="line">  QPushButton *cash = <span class="keyword">new</span> QPushButton(<span class="string">"Cash"</span>, <span class="keyword">this</span>);</span><br><span class="line">  cash-&gt;setSizePolicy(QSizePolicy::Expanding, QSizePolicy::Expanding);</span><br><span class="line">  QPushButton *debts = <span class="keyword">new</span> QPushButton(<span class="string">"Debts"</span>, <span class="keyword">this</span>);</span><br><span class="line">  debts-&gt;setSizePolicy(QSizePolicy::Expanding, QSizePolicy::Expanding);</span><br><span class="line"></span><br><span class="line">  vbox-&gt;addWidget(settings);</span><br><span class="line">  vbox-&gt;addWidget(accounts);</span><br><span class="line">  vbox-&gt;addWidget(loans);</span><br><span class="line">  vbox-&gt;addWidget(cash);</span><br><span class="line">  vbox-&gt;addWidget(debts);</span><br><span class="line"></span><br><span class="line">  setLayout(vbox);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里我们创建了五个垂直堆叠的按钮，并且让五个按钮再长、宽两个方向尽可能扩展(Expanding)。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// main.cpp</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"verticalbox.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QApplication&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">  <span class="function">QApplication <span class="title">app</span><span class="params">(argc, argv)</span></span>;  </span><br><span class="line">    </span><br><span class="line">  VerticalBox window;</span><br><span class="line"></span><br><span class="line">  window.resize(<span class="number">240</span>, <span class="number">230</span>);</span><br><span class="line">  window.setWindowTitle(<span class="string">"VerticalBox"</span>);</span><br><span class="line">  window.show();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> app.exec();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行之后长这个样子:</p><p><img src="https://imgs.codewoody.com/uploads/big/55d090d11407c6ee692f29a525f97e0c.png" style="width: 50%; border: none"></p><p>类似于<code>QVboxLayout</code>, <code>QHBoxLayout</code>提供了水平排列的布局。垂直布局和水平布局可以联合起来使用。在下面这个例子中我们在窗口右下角添加两个水平分布的按钮。这就是通过混合使用垂直于水平分布实现的。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// buttons.h</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QWidget&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QPushButton&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Buttons</span> :</span> <span class="keyword">public</span> QWidget &#123;</span><br><span class="line">    </span><br><span class="line">  <span class="keyword">public</span>:</span><br><span class="line">    Buttons(QWidget *parent = <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span>:</span><br><span class="line">    QPushButton *okBtn;</span><br><span class="line">    QPushButton *applyBtn;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"buttons.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QVBoxLayout&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QHBoxLayout&gt;</span></span></span><br><span class="line"></span><br><span class="line">Buttons::Buttons(QWidget *parent)</span><br><span class="line">    : QWidget(parent) &#123;</span><br><span class="line"></span><br><span class="line">  QVBoxLayout *vbox = <span class="keyword">new</span> QVBoxLayout(<span class="keyword">this</span>);</span><br><span class="line">  QHBoxLayout *hbox = <span class="keyword">new</span> QHBoxLayout();</span><br><span class="line"></span><br><span class="line">  okBtn = <span class="keyword">new</span> QPushButton(<span class="string">"OK"</span>, <span class="keyword">this</span>);</span><br><span class="line">  applyBtn = <span class="keyword">new</span> QPushButton(<span class="string">"Apply"</span>, <span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">  hbox-&gt;addWidget(okBtn, <span class="number">1</span>, Qt::AlignRight);</span><br><span class="line">  hbox-&gt;addWidget(applyBtn, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">  vbox-&gt;addStretch(<span class="number">1</span>);</span><br><span class="line">  vbox-&gt;addLayout(hbox);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QApplication&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"buttons.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">  <span class="function">QApplication <span class="title">app</span><span class="params">(argc, argv)</span></span>;  </span><br><span class="line"></span><br><span class="line">  Buttons window;</span><br><span class="line"></span><br><span class="line">  window.resize(<span class="number">290</span>, <span class="number">170</span>);</span><br><span class="line">  window.setWindowTitle(<span class="string">"Buttons"</span>);</span><br><span class="line">  window.show();</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> app.exec();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面是一个更加复杂的布局嵌套的例子:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// nesting.h</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QWidget&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Layouts</span> :</span> <span class="keyword">public</span> QWidget &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span>:</span><br><span class="line">    Layouts(QWidget *parent = <span class="number">0</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// nesting.cpp</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QVBoxLayout&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QPushButton&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QListWidget&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"nesting.h"</span></span></span><br><span class="line"></span><br><span class="line">Layouts::Layouts(QWidget *parent)</span><br><span class="line">  : QWidget (parent)</span><br><span class="line">&#123;</span><br><span class="line">  QVBoxLayout *vbox = <span class="keyword">new</span> QVBoxLayout();</span><br><span class="line">  QHBoxLayout *hbox = <span class="keyword">new</span> QHBoxLayout(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">  QListWidget *lw = <span class="keyword">new</span> QListWidget(<span class="keyword">this</span>);</span><br><span class="line">  lw-&gt;addItem(<span class="string">"The Omen"</span>); </span><br><span class="line">  lw-&gt;addItem(<span class="string">"The Exorcist"</span>);</span><br><span class="line">  lw-&gt;addItem(<span class="string">"Notes on a scandal"</span>);</span><br><span class="line">  lw-&gt;addItem(<span class="string">"Fargo"</span>);</span><br><span class="line">  lw-&gt;addItem(<span class="string">"Capote"</span>);</span><br><span class="line"></span><br><span class="line">  QPushButton *add = <span class="keyword">new</span> QPushButton(<span class="string">"Add"</span>, <span class="keyword">this</span>);</span><br><span class="line">  QPushButton *rename = <span class="keyword">new</span> QPushButton(<span class="string">"Rename"</span>, <span class="keyword">this</span>);</span><br><span class="line">  QPushButton *remove = <span class="keyword">new</span> QPushButton(<span class="string">"Remove"</span>, <span class="keyword">this</span>);</span><br><span class="line">  QPushButton *removeall = <span class="keyword">new</span> QPushButton(<span class="string">"Remove All"</span>, <span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">  vbox-&gt;setSpacing(<span class="number">3</span>);</span><br><span class="line">  vbox-&gt;addStretch(<span class="number">1</span>);</span><br><span class="line">  vbox-&gt;addWidget(add);</span><br><span class="line">  vbox-&gt;addWidget(rename);</span><br><span class="line">  vbox-&gt;addWidget(remove);</span><br><span class="line">  vbox-&gt;addWidget(removeall);</span><br><span class="line">  vbox-&gt;addStretch(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">  hbox-&gt;addWidget(lw);</span><br><span class="line">  hbox-&gt;addSpacing(<span class="number">15</span>);</span><br><span class="line">  hbox-&gt;addLayout(vbox);</span><br><span class="line"></span><br><span class="line">  setLayout(hbox);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// main.cpp</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QApplication&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"nesting.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">  <span class="function">QApplication <span class="title">app</span><span class="params">(argc, argv)</span></span>;  </span><br><span class="line">    </span><br><span class="line">  Layouts window;</span><br><span class="line">  </span><br><span class="line">  window.setWindowTitle(<span class="string">"Layouts"</span>);</span><br><span class="line">  window.show();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> app.exec();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述程序运行得到的界面如下图：</p><p><img src="https://imgs.codewoody.com/uploads/big/101a9aba9e4ecc35c723622cc32e2bc3.png" style="width: 70%; border: none"></p><h3 id="form布局">Form布局</h3><p><code>QFormLayout</code>可以处理典型的表格输入的布局。其子Widgets被分为两列，分别是Label和输入控件（例如<code>QLineEdit</code>或者<code>QSpinBox</code>)。 Form布局的使用见下面的例子：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// form.h</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QWidget&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FormEx</span> :</span> <span class="keyword">public</span> QWidget &#123;</span><br><span class="line">    </span><br><span class="line">  <span class="keyword">public</span>:</span><br><span class="line">    FormEx(QWidget *parent = <span class="number">0</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// form.cpp</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QFormLayout&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QLabel&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QLineEdit&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"form.h"</span></span></span><br><span class="line"></span><br><span class="line">FormEx::FormEx(QWidget *parent)</span><br><span class="line">    : QWidget(parent) &#123;</span><br><span class="line">        </span><br><span class="line">  QLineEdit *nameEdit = <span class="keyword">new</span> QLineEdit(<span class="keyword">this</span>);</span><br><span class="line">  QLineEdit *addrEdit = <span class="keyword">new</span> QLineEdit(<span class="keyword">this</span>);</span><br><span class="line">  QLineEdit *occpEdit = <span class="keyword">new</span> QLineEdit(<span class="keyword">this</span>);</span><br><span class="line">  </span><br><span class="line">  QFormLayout *formLayout = <span class="keyword">new</span> QFormLayout;</span><br><span class="line">  <span class="comment">// 调整Label的对齐规则为水平右对齐，垂直居中</span></span><br><span class="line">  formLayout-&gt;setLabelAlignment(Qt::AlignRight | Qt::AlignVCenter);</span><br><span class="line">  formLayout-&gt;addRow(<span class="string">"Name:"</span>, nameEdit);</span><br><span class="line">  formLayout-&gt;addRow(<span class="string">"Email:"</span>, addrEdit);</span><br><span class="line">  formLayout-&gt;addRow(<span class="string">"Age:"</span>, occpEdit);</span><br><span class="line">  </span><br><span class="line">  setLayout(formLayout);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// main.cpp</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QApplication&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"form.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">  <span class="function">QApplication <span class="title">app</span><span class="params">(argc, argv)</span></span>;  </span><br><span class="line"></span><br><span class="line">  FormEx window;</span><br><span class="line"></span><br><span class="line">  window.setWindowTitle(<span class="string">"Form example"</span>);</span><br><span class="line">  window.show();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> app.exec();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>程序运行得到的界面如下：</p><p><img src="https://imgs.codewoody.com/uploads/big/1f92dfbe6c1b7bd1cdc16b7e56902b5a.png" style="width: 50%; border: none"></p><h3 id="网格布局">网格布局</h3><p>网格布局使用<code>QGridLayout</code>这个类，我们已经在前面的例子中见过了。这是一个强大的布局工具。英文教程中给了两个例子，其中Review那个例子要更加复杂一些，我们使用那个来说明：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// review.h</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QWidget&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Review</span> :</span> <span class="keyword">public</span> QWidget &#123;</span><br><span class="line">    </span><br><span class="line">  <span class="keyword">public</span>:</span><br><span class="line">    Review(QWidget *parent = <span class="number">0</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// review.cpp</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QGridLayout&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QLabel&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QLineEdit&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QTextEdit&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"review.h"</span></span></span><br><span class="line"></span><br><span class="line">Review::Review(QWidget *parent)</span><br><span class="line">    : QWidget(parent) &#123;</span><br><span class="line"></span><br><span class="line">  QGridLayout *grid = <span class="keyword">new</span> QGridLayout(<span class="keyword">this</span>);</span><br><span class="line">  grid-&gt;setVerticalSpacing(<span class="number">15</span>);</span><br><span class="line">  grid-&gt;setHorizontalSpacing(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">  QLabel *title = <span class="keyword">new</span> QLabel(<span class="string">"Title:"</span>, <span class="keyword">this</span>);</span><br><span class="line">  grid-&gt;addWidget(title, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">  title-&gt;setAlignment(Qt::AlignRight | Qt::AlignVCenter);</span><br><span class="line"></span><br><span class="line">  QLineEdit *edt1 = <span class="keyword">new</span> QLineEdit(<span class="keyword">this</span>);</span><br><span class="line">  grid-&gt;addWidget(edt1, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">  QLabel *author = <span class="keyword">new</span> QLabel(<span class="string">"Author:"</span>, <span class="keyword">this</span>);</span><br><span class="line">  grid-&gt;addWidget(author, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">  author-&gt;setAlignment(Qt::AlignRight | Qt::AlignVCenter);</span><br><span class="line"></span><br><span class="line">  QLineEdit *edt2 = <span class="keyword">new</span> QLineEdit(<span class="keyword">this</span>);</span><br><span class="line">  grid-&gt;addWidget(edt2, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">  QLabel *review = <span class="keyword">new</span> QLabel(<span class="string">"Review:"</span>, <span class="keyword">this</span>);</span><br><span class="line">  grid-&gt;addWidget(review, <span class="number">2</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">  review-&gt;setAlignment(Qt::AlignRight | Qt::AlignTop);</span><br><span class="line"></span><br><span class="line">  QTextEdit *te = <span class="keyword">new</span> QTextEdit(<span class="keyword">this</span>);</span><br><span class="line">  grid-&gt;addWidget(te, <span class="number">2</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">  setLayout(grid);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QApplication&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"review.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">  <span class="function">QApplication <span class="title">app</span><span class="params">(argc, argv)</span></span>;  </span><br><span class="line"></span><br><span class="line">  Review window;</span><br><span class="line"></span><br><span class="line">  window.setWindowTitle(<span class="string">"Review"</span>);</span><br><span class="line">  window.show();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> app.exec();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里使用<code>QGridLayout::addWidget</code>参数的时候，除了行列号以外，剩下两个数字分别表示行列的Span。函数定义：</p><p><img src="https://imgs.codewoody.com/uploads/big/5c99b1d0a4824c8cd573cdff321a926b.png"></p><p>程序运行得到的界面是</p><p><img src="https://imgs.codewoody.com/uploads/big/8bfeb8877347930a9b2cab06e963a7af.png" style="width: 70%; border: none"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这个系列的摸索是在研究&lt;a href=&quot;http://zetcode.com/gui/qt5/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Qt Tutorial&lt;/a&gt;英文教程的基础上，克服在macOS上遇到的若干问题写下的记录。前面两篇我们还是在研究比较基础的模块，还没有涉及具体的GUI部分。从这篇开始我们来研究GUI开发。&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="http://www.codewoody.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="http://www.codewoody.com/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="C++" scheme="http://www.codewoody.com/tags/C/"/>
    
      <category term="Qt" scheme="http://www.codewoody.com/tags/Qt/"/>
    
  </entry>
  
  <entry>
    <title>【转载】5G大战,美国败像已露</title>
    <link href="http://www.codewoody.com/posts/58026/"/>
    <id>http://www.codewoody.com/posts/58026/</id>
    <published>2019-09-19T02:29:08.000Z</published>
    <updated>2019-09-19T02:30:54.676Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.williamlong.info/archives/5822.html" target="_blank" rel="noopener">来源</a></p><p>为了将中国企业排除在新一代通信标准5G之外，美国发动高科技战已过去1年有余。世界的数据网将不断分裂为相互隔绝的2个，一个美国主导，另一个中国主导——当初这样的担忧出现扩大。</p><p>　　美国谷歌前董事长施密特也是敲响这一警钟的人之一。但是，美国、日本今后面对的情况也许比这个警钟更严厉，不仅是世界5G基础设施的一半，中国企业有掌握更多份额的可能性。在对亚洲各国采访的过程中，我禁不住这样想。</p><p>　　传输庞大信息的5G网可以看作是人类身体上的大动脉。只要将其控制，在政治和军事方面，中国的影响力便可能进一步加强。</p><p>　　但是，如果仅观察华盛顿大张旗鼓采取的对华强硬举措，容易令人感到正在加强攻势的是美方。</p><p>　　美国2018年8月通过《国防授权法》，决定将华为技术和中兴通讯（ZTE）排除出美国。点燃了高科技战争的导火索。</p><p>　　经过1年的宽限期，美国政府自今年8月13日起，禁止美国政府机构采购华为和中兴通讯的产品。1年后起，对于采用两家公司等产品的民营企业，也将被禁止与美国政府交易。</p><p>　　美国担心如果让两家中国企业进入本国5G领域，重要信息可能被窃取。虽然中国否认这种危险，但美国正在敦促同盟国和友好国家也将两家企业排除出5G网。</p><p>　　美国政府计划在事实上禁止向华为出口美国造零部件和软件。这将对于无法使用美国谷歌软件的华为智能手机终端构成打击。</p><p>　　但是，要问能在多大程度上将2家中国企业排除出5G基础设施，局势对美国极为不利。与美国统一步调、决定排除华为的国家目前只有日本和澳大利亚。英国和法国都表示“正在讨论”，而德国则坚持“难以排除”的立场。</p><p>　　在英德的通信基础设施中，华为已在4G领域浸透。德国政府内部有声音表示，“事到如今，让我们在5G中排除（中国企业），也是难为人的要求”。</p><p>　　在这样背景下，左右中美5G战争形势的是亚洲的走向。8月下旬，在曼谷举行的“日本-东盟媒体合作论坛”（主办方为日本的国际交流基金）的讨论非常耐人寻味。在亚洲记者讨论世界局势的情况下，成为主要话题的是中美的5G战争。东南亚的大部分与会者都断言，美国难以战胜中国。</p><p>　　的确，这种迹象很明显。柬埔寨采用华为的技术，将于年内启动5G服务。马来西亚和泰国也在5月底宣布不抵制华为。</p><p>　　在菲律宾、印度尼西亚和缅甸，当地的通信大型企业与华为和中兴通讯签署合同，显示出在5G领域展开合作的趋势。</p><p>　　原因何在？第一，能替代华为和中兴通讯的选项过度缺乏。从移动通信基础设施来看，这2家企业占到世界市场的近4成份额。虽然欧洲的爱立信（29％）和诺基亚（23.4％）也拥有较高份额，但在价格竞争中无法与中国企业相匹敌。</p><p>　　东南亚的经济专家表示，与中国2家企业相比，爱立信和诺基亚的价格高出2——3成。对东南亚和印度来说不合算。</p><p>　　另外一个原因在于美国自身。在批评中国的同时，美国自身也参与情报间谍活动——这种不信任感在亚洲内部不断增强。</p><p>　　知道可能存在被中国获取信息的危险，但是，美国或许也在利用先进的高科技，大肆监视外国的通信，获取信息——东南亚的当局者和安全专家透露出这样的不满。</p><p>　　东南亚冷眼旁观的是美国的间谍活动。美国国家安全局（NSA）前雇员斯诺登爆料称，美国政府侵入各国政府和企业的网络，暗中获取信息。</p><p>　　也就是说，在信息被拿走的风险方面，中国和美国没有什么区别。在伊斯兰人口众多的印度尼西亚、马来西亚、巴基斯坦和文莱等国，甚至有看法认为，与中国相比，信息被美国窃取更为可怕。</p><p>　　受长达20年的阿富汗和中东战争的影响，在亚洲的伊斯兰圈，对美国的感情芥蒂沉淀下来。一位前外交官的话很有代表性。</p><p>　　他说：“正如萨达姆·侯赛因领导的伊拉克那样，美国将向不听话的国家投下炸弹。但是，中国将向看不顺眼的国家投下金钱（投资），还是中国更好。”</p><p>　　要想抗衡华为和中兴通讯，欧洲和日韩的通信企业必须提高价格竞争力，建立能扩大市场份额的体制。美国或许有必要进一步共享所谓依赖中国企业的风险，在此基础上，为了在6G领域掌握主导权加快投资。日本通信商NTT最近成功开发出着眼于6G的新技术。中美数字主导权的竞争不会止步于5G，下一场战争已经打响。</p><p>　　稿源：日经中文网，作者：秋田浩之</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.williamlong.info/archives/5822.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;来源&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;为了将中国企业排除在新一代通信标准5G之外，美国发动高科技战已过去1
      
    
    </summary>
    
      <category term="杂谈" scheme="http://www.codewoody.com/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="杂谈" scheme="http://www.codewoody.com/tags/%E6%9D%82%E8%B0%88/"/>
    
      <category term="转载" scheme="http://www.codewoody.com/tags/%E8%BD%AC%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>Qt on Mac摸索记录 - 其二</title>
    <link href="http://www.codewoody.com/posts/54018/"/>
    <id>http://www.codewoody.com/posts/54018/</id>
    <published>2019-09-18T17:11:03.000Z</published>
    <updated>2019-09-19T04:58:02.047Z</updated>
    
    <content type="html"><![CDATA[<p>跟着<a href="./posts/46595/">上一篇</a>继续。本篇介绍Qt重新造的轮子：容器系统和文件操作系统。</p><a id="more"></a><h2 id="容器">容器</h2><p>按理说标准库里面就有各种容器的实现了，这里重新造轮子了？</p><p>容器分为了两类：序列容器 和 关联容器。</p><h3 id="qvector">QVector</h3><p>动态数组容器，内部本质就是内存连续的数组，从而使得随机存取的效率非常高。但是对于元素的删除插入操作性能会比较差。对于长度很大的序列，推荐采用链表实现的的<code>QList</code>。</p><p><code>QVector</code>的例子如下。使用非常简单，不再赘述。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QVector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QTextStream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">QTextStream <span class="title">out</span><span class="params">(<span class="built_in">stdout</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    QVector&lt;<span class="keyword">int</span>&gt; vals = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;</span><br><span class="line"></span><br><span class="line">    out &lt;&lt; <span class="string">"The size of the vector is: "</span> &lt;&lt; vals.size() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    out &lt;&lt; <span class="string">"The first item is: "</span> &lt;&lt; vals.first() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    out &lt;&lt; <span class="string">"The last item is: "</span> &lt;&lt; vals.last() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    vals.append(<span class="number">6</span>);</span><br><span class="line">    vals.prepend(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    out &lt;&lt; <span class="string">"Elements: "</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> val : vals) &#123;</span><br><span class="line">        out &lt;&lt; val &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    out &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="qlist"><code>QList</code></h3><p><code>QList</code> 也是序列容器，内部是链表实现。其随机访问、删除、插入操作效率都比较高。因此是 Qt 中最常用的容器。参考下面👇这个例子。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QTextStream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QList&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">QTextStream <span class="title">out</span><span class="params">(<span class="built_in">stdout</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    QList&lt;QString&gt; authors = &#123;<span class="string">"Balzac"</span>, <span class="string">"Tolstoy"</span>, </span><br><span class="line">        <span class="string">"Gulbranssen"</span>, <span class="string">"London"</span>&#125;;</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i &lt; authors.size(); ++i) &#123;</span><br><span class="line">  </span><br><span class="line">        out &lt;&lt; authors.at(i) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    authors &lt;&lt; <span class="string">"Galsworthy"</span> &lt;&lt; <span class="string">"Sienkiewicz"</span>;</span><br><span class="line"></span><br><span class="line">    out &lt;&lt; <span class="string">"***********************"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">std</span>::sort(authors.begin(), authors.end());</span><br><span class="line"></span><br><span class="line">    out &lt;&lt; <span class="string">"Sorted:"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span> (QString author : authors) &#123;</span><br><span class="line">  </span><br><span class="line">        out &lt;&lt; author &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="qstringlist"><code>QStringList</code></h3><p>为字符串做了优化的列表。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QTextStream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QList&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">QTextStream <span class="title">out</span><span class="params">(<span class="built_in">stdout</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    QString <span class="built_in">string</span> = <span class="string">"coin, book, cup, pencil, clock, bookmark"</span>;</span><br><span class="line">    QStringList items = <span class="built_in">string</span>.split(<span class="string">","</span>);</span><br><span class="line">    <span class="function">QStringListIterator <span class="title">it</span><span class="params">(items)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (it.hasNext()) &#123;</span><br><span class="line">        out &lt;&lt; it.next().trimmed() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="qset"><code>QSet</code></h3><p>集合可以确保其中存储的值是唯一的。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QSet&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QList&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QTextStream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">QTextStream <span class="title">out</span><span class="params">(<span class="built_in">stdout</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    QSet&lt;QString&gt; cols1 = &#123;<span class="string">"yellow"</span>, <span class="string">"red"</span>, <span class="string">"blue"</span>&#125;;</span><br><span class="line">    QSet&lt;QString&gt; cols2 = &#123;<span class="string">"blue"</span>, <span class="string">"pink"</span>, <span class="string">"orange"</span>&#125;;</span><br><span class="line"></span><br><span class="line">    out &lt;&lt; <span class="string">"There are "</span> &lt;&lt; cols1.size() &lt;&lt; <span class="string">" values in the set"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    cols1.insert(<span class="string">"brown"</span>);</span><br><span class="line"></span><br><span class="line">    out &lt;&lt; <span class="string">"There are "</span> &lt;&lt; cols1.size() &lt;&lt; <span class="string">" values in the set"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    cols1.unite(cols2);</span><br><span class="line"></span><br><span class="line">    out &lt;&lt; <span class="string">"There are "</span> &lt;&lt; cols1.size() &lt;&lt; <span class="string">" values in the set"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (QString val : cols1) &#123;</span><br><span class="line">        out &lt;&lt; val &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    QList&lt;QString&gt; lcols = cols1.values();</span><br><span class="line">    <span class="built_in">std</span>::sort(lcols.begin(), lcols.end());</span><br><span class="line"></span><br><span class="line">    out &lt;&lt; <span class="string">"*********************"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    out &lt;&lt; <span class="string">"Sorted:"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (QString val : lcols) &#123;</span><br><span class="line">        out &lt;&lt; val &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到合并(<code>unite()</code>)后重复元素被移除了，只留下一份。</p><h3 id="qmap"><code>QMap</code></h3><p><code>QMap</code>是关联式容器，存储key-value对。下面是<code>QMap</code>使用的例子：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QTextStream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QMap&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">QTextStream <span class="title">out</span><span class="params">(<span class="built_in">stdout</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    QMap&lt;QString, <span class="keyword">int</span>&gt; items = &#123; &#123;<span class="string">"coins"</span>, <span class="number">5</span>&#125;, &#123;<span class="string">"books"</span>, <span class="number">3</span>&#125; &#125;;</span><br><span class="line"></span><br><span class="line">    items.insert(<span class="string">"bottles"</span>, <span class="number">7</span>);</span><br><span class="line"></span><br><span class="line">    QList&lt;<span class="keyword">int</span>&gt; values = items.values();</span><br><span class="line"></span><br><span class="line">    out &lt;&lt; <span class="string">"Values:"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> val : values) &#123;</span><br><span class="line">        out &lt;&lt; val &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    QList&lt;QString&gt; keys = items.keys();</span><br><span class="line"></span><br><span class="line">    out &lt;&lt; <span class="string">"Keys:"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span> (QString key : keys) &#123;</span><br><span class="line">        out &lt;&lt; key &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    QMapIterator&lt;QString, <span class="keyword">int</span>&gt; it(items);</span><br><span class="line"></span><br><span class="line">    out &lt;&lt; <span class="string">"Pairs:"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (it.hasNext()) &#123;</span><br><span class="line">        it.next();</span><br><span class="line">        out &lt;&lt; it.key() &lt;&lt; <span class="string">": "</span> &lt;&lt; it.value() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="自定义排序">自定义排序</h3><p>自定义排序其实就是要自定义比较函数。以下面的类为例：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// book.h</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Book</span> &#123;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        Book(QString, QString);</span><br><span class="line">        <span class="function">QString <span class="title">getAuthor</span><span class="params">()</span> <span class="keyword">const</span></span>;</span><br><span class="line">        <span class="function">QString <span class="title">getTitle</span><span class="params">()</span> <span class="keyword">const</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span>:</span><br><span class="line">        QString author;</span><br><span class="line">        QString title;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// book.cpp</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QString&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"book.h"</span></span></span><br><span class="line"></span><br><span class="line">Book::Book(QString auth, QString tit) &#123;</span><br><span class="line">    author = auth;</span><br><span class="line">    title = tit;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">QString Book::getAuthor() <span class="keyword">const</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> author;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">QString Book::getTitle() <span class="keyword">const</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> title;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用自定义的方式排序如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QTextStream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QList&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"book.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">compareByTitle</span><span class="params">(<span class="keyword">const</span> Book &amp;b1, <span class="keyword">const</span> Book &amp;b2)</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">  <span class="keyword">return</span> b1.getTitle() &lt; b2.getTitle();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">QTextStream <span class="title">out</span><span class="params">(<span class="built_in">stdout</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    QList&lt;Book&gt; books = &#123;</span><br><span class="line">        Book(<span class="string">"Jack London"</span>, <span class="string">"The Call of the Wild"</span>),</span><br><span class="line">        Book(<span class="string">"Honoré de Balzac"</span>, <span class="string">"Father Goriot"</span>),</span><br><span class="line">        Book(<span class="string">"Leo Tolstoy"</span>, <span class="string">"War and Peace"</span>),</span><br><span class="line">        Book(<span class="string">"Gustave Flaubert"</span>, <span class="string">"Sentimental education"</span>),</span><br><span class="line">        Book(<span class="string">"Guy de Maupassant"</span>, <span class="string">"Une vie"</span>),</span><br><span class="line">        Book(<span class="string">"William Shakespeare"</span>, <span class="string">"Hamlet"</span>)</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">std</span>::sort(books.begin(), books.end(), compareByTitle);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (Book book : books) &#123;</span><br><span class="line">        out &lt;&lt; book.getAuthor() &lt;&lt; <span class="string">": "</span> &lt;&lt; book.getTitle() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="文件系统">文件系统</h2><p>这里涉及<code>QFile</code>, <code>QDir</code>, <code>QFileInfo</code>三个类。其中<code>QFile</code>负责操作文件（读取和写入），<code>QDir</code>提供了访问路径结构及其内容的接口，<code>QFileInfo</code>提供了与独立于操作系统的文件信息，包括文件名、文件存储的路径，访问时间，修改时间，权限，文件所有权信息。</p><h3 id="文件大小">文件大小</h3><p>文件的大小通过<code>QFileInfo::size()</code>函数来获取。见下面的完整例子:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QTextStream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QFileInfo&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="function">QTextStream <span class="title">out</span><span class="params">(<span class="built_in">stdout</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (argc != <span class="number">2</span>) &#123;</span><br><span class="line">    qWarning(<span class="string">"Usage: file_size file"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  QString filename = argv[<span class="number">1</span>];</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> (!QFile(filename).exists()) &#123;</span><br><span class="line">    qWarning(<span class="string">"The file does not exist"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125;  </span><br><span class="line">  </span><br><span class="line">  <span class="function">QFileInfo <span class="title">fileinfo</span><span class="params">(filename)</span></span>;</span><br><span class="line">  </span><br><span class="line">  qint64 size = fileinfo.size();</span><br><span class="line">  </span><br><span class="line">  QString str = <span class="string">"The size is: %1 bytes"</span>;</span><br><span class="line">  </span><br><span class="line">  out &lt;&lt; str.arg(size) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="读取文件内容">读取文件内容</h3><p>读取文件之前需要打开文件，并基于这个文件创建流。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QTextStream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QFile&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">  <span class="function">QTextStream <span class="title">out</span><span class="params">(<span class="built_in">stdout</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">  <span class="function">QFile <span class="title">file</span><span class="params">(<span class="string">"colours"</span>)</span></span>;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> (!file.open(QIODevice::ReadOnly)) &#123;</span><br><span class="line">    qWarning(<span class="string">"Cannot open file for reading"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function">QTextStream <span class="title">in</span><span class="params">(&amp;file)</span></span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> (!in.atEnd()) &#123;</span><br><span class="line">    QString line = in.readLine();</span><br><span class="line">    out &lt;&lt; line &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  file.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="写入文件内容">写入文件内容</h3><p>要写入文件需要文件以写入模式打开。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QTextStream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QFile&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">  <span class="function">QTextStream <span class="title">out</span><span class="params">(<span class="built_in">stdout</span>)</span></span>;</span><br><span class="line">    </span><br><span class="line">  QString filename = <span class="string">"distros"</span>;</span><br><span class="line">  <span class="function">QFile <span class="title">file</span><span class="params">(filename)</span></span>;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> (file.open(QIODevice::WriteOnly)) &#123;</span><br><span class="line">      </span><br><span class="line">    <span class="function">QTextStream <span class="title">out</span><span class="params">(&amp;file)</span></span>;</span><br><span class="line">    out &lt;&lt; <span class="string">"Xubuntu"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    out &lt;&lt; <span class="string">"Arch"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    out &lt;&lt; <span class="string">"Debian"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    out &lt;&lt; <span class="string">"Redhat"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    out &lt;&lt; <span class="string">"Slackware"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      </span><br><span class="line">    qWarning(<span class="string">"Could not open file"</span>);</span><br><span class="line">  &#125;  </span><br><span class="line">  </span><br><span class="line">  file.close(); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="复制文件">复制文件</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QTextStream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QFile&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">  <span class="function">QTextStream <span class="title">out</span><span class="params">(<span class="built_in">stdout</span>)</span></span>;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> (argc != <span class="number">3</span>) &#123;</span><br><span class="line">      qWarning(<span class="string">"Usage: copyfile source destination"</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  QString source = argv[<span class="number">1</span>];</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> (!QFile(source).exists()) &#123;</span><br><span class="line">      qWarning(<span class="string">"The source file does not exist"</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="function">QString <span class="title">destin</span><span class="params">(argv[<span class="number">2</span>])</span></span>;</span><br><span class="line"></span><br><span class="line">  QFile::copy(source, destin);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="文件信息的获取">文件信息的获取</h3><ul><li>文件所有者：<code>QFileInfo::group()</code>和<code>QFileInfo::owner()</code>，返回的都是<code>QString</code>;</li><li>修改时间: <code>QFileInfo::lastRead()</code>和<code>QFileInfo::lastModified()</code>，返回的是<code>QDateTime</code>;</li><li>文件路径：参见下面的例子</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// filepath.cpp</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QTextStream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QFileInfo&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">  <span class="function">QTextStream <span class="title">out</span><span class="params">(<span class="built_in">stdout</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (argc != <span class="number">2</span>) &#123;</span><br><span class="line">      out &lt;&lt; <span class="string">"Usage: file_times file"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">      <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  QString filename = argv[<span class="number">1</span>];</span><br><span class="line">  </span><br><span class="line">  <span class="function">QFileInfo <span class="title">fileinfo</span><span class="params">(filename)</span></span>;</span><br><span class="line">  </span><br><span class="line">  QString absPath = fileinfo.absoluteFilePath();</span><br><span class="line">  QString baseName = fileinfo.baseName();</span><br><span class="line">  QString compBaseName = fileinfo.completeBaseName();</span><br><span class="line">  QString fileName = fileinfo.fileName();</span><br><span class="line">  QString suffix = fileinfo.suffix();</span><br><span class="line">  QString compSuffix = fileinfo.completeSuffix();</span><br><span class="line">  </span><br><span class="line">  out &lt;&lt; <span class="string">"Absolute file path: "</span> &lt;&lt; absPath &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  out &lt;&lt; <span class="string">"Base name: "</span> &lt;&lt; baseName &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  out &lt;&lt; <span class="string">"Complete base name: "</span> &lt;&lt; compBaseName &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  out &lt;&lt; <span class="string">"File name: "</span> &lt;&lt; fileName &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  out &lt;&lt; <span class="string">"Suffix: "</span> &lt;&lt; suffix &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  out &lt;&lt; <span class="string">"Whole suffix: "</span> &lt;&lt; compSuffix &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ ./file_path ~/Downloads/qt-everywhere-opensource-src-5.5.1.tar.gz </span><br><span class="line">Absolute file path: /home/janbodnar/Downloads/qt-everywhere-opensource-src-5.5.1.tar.gz</span><br><span class="line">Base name: qt-everywhere-opensource-src-5</span><br><span class="line">Complete base name: qt-everywhere-opensource-src-5.5.1.tar</span><br><span class="line">File name: qt-everywhere-opensource-src-5.5.1.tar.gz</span><br><span class="line">Suffix: gz</span><br><span class="line">Whole suffix: 5.1.tar.gz</span><br></pre></td></tr></table></figure><ul><li>权限信息：通过<code>QFile::permissions</code>方法可以权限信息，具体的例子如下：</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QTextStream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QFile&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">  <span class="function">QTextStream <span class="title">out</span><span class="params">(<span class="built_in">stdout</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (argc != <span class="number">2</span>) &#123;</span><br><span class="line">      out &lt;&lt; <span class="string">"Usage: permissions file"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">      <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  QString filename = argv[<span class="number">1</span>];</span><br><span class="line">  </span><br><span class="line">  QFile::Permissions ps = QFile::permissions(filename);</span><br><span class="line">  </span><br><span class="line">  QString fper;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> (ps &amp; QFile::ReadOwner) &#123;</span><br><span class="line">      fper.append(<span class="string">'r'</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      fper.append(<span class="string">'-'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> (ps &amp; QFile::WriteOwner) &#123;</span><br><span class="line">      fper.append(<span class="string">'w'</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      fper.append(<span class="string">'-'</span>);</span><br><span class="line">  &#125;  </span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> (ps &amp; QFile::ExeOwner) &#123;</span><br><span class="line">      fper.append(<span class="string">'x'</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      fper.append(<span class="string">'-'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> (ps &amp; QFile::ReadGroup) &#123;</span><br><span class="line">      fper.append(<span class="string">'r'</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      fper.append(<span class="string">'-'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> (ps &amp; QFile::WriteGroup) &#123;</span><br><span class="line">      fper.append(<span class="string">'w'</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      fper.append(<span class="string">'-'</span>);</span><br><span class="line">  &#125;  </span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> (ps &amp; QFile::ExeGroup) &#123;</span><br><span class="line">      fper.append(<span class="string">'x'</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      fper.append(<span class="string">'-'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> (ps &amp; QFile::ReadOther) &#123;</span><br><span class="line">      fper.append(<span class="string">'r'</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      fper.append(<span class="string">'-'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> (ps &amp; QFile::WriteOther) &#123;</span><br><span class="line">      fper.append(<span class="string">'w'</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      fper.append(<span class="string">'-'</span>);</span><br><span class="line">  &#125;  </span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> (ps &amp; QFile::ExeOther) &#123;</span><br><span class="line">      fper.append(<span class="string">'x'</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      fper.append(<span class="string">'-'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  out &lt;&lt; fper &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="操作路径directories">操作路径(directories)</h3><ul><li>创建文件夹: <code>QDir::mkdir()</code>，返回布尔值表明创建是否成功。<code>QDir::mkpath()</code>也是创建文件夹 ，其区别在于<code>mkpath()</code>函数会同时创建缺少的父文件夹。</li><li>重命名: <code>QDir::exists()</code>, 文件是否存在。</li><li>获取 一些特殊的文件夹的位置：<ul><li><code>QDir::currentPath()</code></li><li><code>QDir::homePath()</code></li><li><code>QDir::tempPath()</code></li><li><code>QDir::rootPath()</code></li></ul></li><li>输出文件夹内的内容</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QTextStream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QFileInfo&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QDir&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">  <span class="function">QTextStream <span class="title">out</span><span class="params">(<span class="built_in">stdout</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (argc != <span class="number">2</span>) &#123;</span><br><span class="line">      qWarning(<span class="string">"Usage: list_dir directory"</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  QString directory = argv[<span class="number">1</span>];</span><br><span class="line">  </span><br><span class="line">  <span class="function">QDir <span class="title">dir</span><span class="params">(directory)</span></span>;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> (!dir.exists()) &#123;</span><br><span class="line">      qWarning(<span class="string">"The directory does not exist"</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125;  </span><br><span class="line">  </span><br><span class="line">  dir.setFilter(QDir::Files | QDir::AllDirs);</span><br><span class="line">  dir.setSorting(QDir::Size | QDir::Reversed);</span><br><span class="line"></span><br><span class="line">  QFileInfoList <span class="built_in">list</span> = dir.entryInfoList();</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">int</span> max_size = <span class="number">0</span>;</span><br><span class="line">  </span><br><span class="line">  foreach (QFileInfo finfo, <span class="built_in">list</span>) &#123;</span><br><span class="line">      QString name = finfo.fileName();</span><br><span class="line">      <span class="keyword">int</span> size = name.size();</span><br><span class="line">      <span class="keyword">if</span> (size &gt; max_size) &#123;</span><br><span class="line">          max_size = size;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">int</span> len = max_size + <span class="number">2</span>;</span><br><span class="line">  </span><br><span class="line">  out &lt;&lt; QString(<span class="string">"Filename"</span>).leftJustified(len).append(<span class="string">"Bytes"</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">list</span>.size(); ++i) &#123;</span><br><span class="line">    QFileInfo fileInfo = <span class="built_in">list</span>.at(i);</span><br><span class="line">    QString str = fileInfo.fileName().leftJustified(len);</span><br><span class="line">    str.append(QString(<span class="string">"%1"</span>).arg(fileInfo.size()));</span><br><span class="line">    out &lt;&lt; str &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;跟着&lt;a href=&quot;./posts/46595/&quot;&gt;上一篇&lt;/a&gt;继续。本篇介绍Qt重新造的轮子：容器系统和文件操作系统。&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="http://www.codewoody.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="http://www.codewoody.com/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="C++" scheme="http://www.codewoody.com/tags/C/"/>
    
      <category term="Qt" scheme="http://www.codewoody.com/tags/Qt/"/>
    
  </entry>
  
  <entry>
    <title>Qt on Mac摸索记录 - 其一</title>
    <link href="http://www.codewoody.com/posts/46595/"/>
    <id>http://www.codewoody.com/posts/46595/</id>
    <published>2019-09-18T09:18:25.000Z</published>
    <updated>2019-09-18T17:10:35.116Z</updated>
    
    <content type="html"><![CDATA[<p>我参考<a href="http://zetcode.com/gui/qt5/introduction/" target="_blank" rel="noopener">http://zetcode.com/gui/qt5/introduction/</a>这个链接入坑，使用macOS。网上看起来是Windows和Linux的教程居多，这个链接里的教程初看起来应该也是基于Linux的。谁让Mac的市场占有率低呢。</p><a id="more"></a><h2 id="first-try">First Try</h2><h3 id="show-version">Show version</h3><p>首先是从官网下载了GUI形式的安装器安装的Qt，Qt的默认安装位置是<code>~/Qt</code>。安装的Qt版本是5.13.1。首先参照教程熟悉一下编译过程。教程链接里给出的例子是：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// version.cpp</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QtCore&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"Qt version: "</span> &lt;&lt; qVersion() &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译的命令是</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g++ -o version version.cpp -I/usr/local/qt5/include/QtCore -I/usr/local/qt5/include -L/usr/local/qt5/lib -lQt5Core -fPIC</span><br></pre></td></tr></table></figure><p>不过这个编译命令在Mac上无法成功。我使用的是如下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">g++ -o version version.cpp \</span><br><span class="line"><span class="meta">#</span><span class="bash"> Include path，需要指向包含QtCore的头文件的位置</span></span><br><span class="line">-Ipath/to/qt/5.13.1/clang_64/lib/QtCore.framework/Headers \</span><br><span class="line"><span class="meta">#</span><span class="bash"> -F指定framework的路径，-framework则用来指明使用的framework的名字</span></span><br><span class="line">-F/Users/lena/qt/5.13.1/clang_64/lib -framework QtCore</span><br><span class="line"><span class="meta">#</span><span class="bash"> 在mac上g++其实也是调用的clang，这里加上这个避免一些warning</span></span><br><span class="line">-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX10.13.sdk \</span><br><span class="line">-mmacosx-version-min=10.12 \</span><br><span class="line"><span class="meta">#</span><span class="bash"> rpath是程序在运行的时候载入动态库（即QtCore.framework）的位置</span></span><br><span class="line">-Wl,-rpath,/path/to/5.13.1/clang_64/lib</span><br><span class="line">-pipe -stdlib=libc++ -O2 -std=gnu++11  -Wall -W -fPIC</span><br></pre></td></tr></table></figure><p>编译成功后调用<code>./version</code>就可以看到运行成功并输出Qt版本了。</p><h3 id="first-gui">First GUI</h3><p>下面我们来测试一个简单的GUI例子。首先新建一个文件如下</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// simple.cpp</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QApplication&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QWidget&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">QApplication <span class="title">app</span><span class="params">(argc, argv)</span></span>;</span><br><span class="line"></span><br><span class="line">    QWidget window;</span><br><span class="line"></span><br><span class="line">    window.resize(<span class="number">250</span>, <span class="number">150</span>);</span><br><span class="line">    window.setWindowTitle(<span class="string">"Simple example"</span>);</span><br><span class="line">    window.show();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> app.exec();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后使用<code>qmake</code>工具，运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qmake -project</span><br></pre></td></tr></table></figure><p>这个命令会创建一个项目文件<code>simple.pro</code><span class="foot-note-span">【文件的名字与根目录文件夹的名字相同】</span>。文件的内容应该类似于：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">######################################################################</span><br><span class="line"># Automatically generated by qmake (3.0) Fri Oct 30 17:11:00 2015</span><br><span class="line">######################################################################</span><br><span class="line"></span><br><span class="line">TEMPLATE = app</span><br><span class="line">TARGET = simple</span><br><span class="line">INCLUDEPATH += .</span><br><span class="line"></span><br><span class="line"># Input</span><br><span class="line">SOURCES += simple.cpp</span><br><span class="line"></span><br><span class="line">QT += widgets</span><br></pre></td></tr></table></figure><p>注意最后一行，需要我们手动添加QtWidget模块。然后运行<code>qmake</code>命令，生成编译使用的Makefile。然后就可以编译了：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make</span><br></pre></td></tr></table></figure><p>程序运行后会弹出一个空的窗口。</p><p><img src="https://imgs.codewoody.com/uploads/big/a9f573fd0cf4761bfac223bce02a0560.png" style="width: 50%; border: none"></p><h2 id="strings">Strings</h2><p>Qt 引入了<code>QString</code>来加强字符串处理的能力。</p><p><code>QtString</code>表示一个Unicode字符串，其存储字符串为16比特的<code>QChars</code>。每个<code>QChar</code>代表一个Unicode 4.0字符。不同于很多其他的变成语言，<code>QtString</code>可以被修改<span class="foot-note-span">【如Python的字符串就是静态的，“修改”字符串实际是生成新的字符串】</span>。</p><p>这里主要是了解<code>QtString</code>的能力，汇总记录就可以了，没有必要编译运行。</p><h3 id="初始化">初始化</h3><p>有多种初始化方法，如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QTextStream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">   <span class="function">QTextStream <span class="title">out</span><span class="params">(<span class="built_in">stdout</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">   QString str1 = <span class="string">"The night train"</span>;</span><br><span class="line">   out &lt;&lt; str1 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">   <span class="function">QString <span class="title">str2</span><span class="params">(<span class="string">"A yellow rose"</span>)</span></span>;</span><br><span class="line">   out &lt;&lt; str2 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">std</span>::<span class="built_in">string</span> s1 = <span class="string">"A blue sky"</span>;</span><br><span class="line">   QString str3 = s1.c_str(); </span><br><span class="line">   out &lt;&lt; str3 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">std</span>::<span class="built_in">string</span> s2 = <span class="string">"A thick fog"</span>;</span><br><span class="line">   QString str4 = QString::fromLatin1(s2.data(), s2.size());</span><br><span class="line">   out &lt;&lt; str4 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">char</span> s3[] = <span class="string">"A deep forest"</span>;</span><br><span class="line">   <span class="function">QString <span class="title">str5</span><span class="params">(s3)</span></span>;</span><br><span class="line">   out &lt;&lt; str5 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="访问字符串元素">访问字符串元素</h3><p>如前文所述，<code>QString</code>由<code>QChar</code>组成，我们可以使用<code>[]</code>操作符或者<code>at()</code>函数来访问元素：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QTextStream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="function">QTextStream <span class="title">out</span><span class="params">(<span class="built_in">stdout</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">   QString a = <span class="string">"Eagle"</span>;</span><br><span class="line"></span><br><span class="line">   out &lt;&lt; a[<span class="number">0</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">   out &lt;&lt; a[<span class="number">4</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">   out &lt;&lt; a.at(<span class="number">0</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> (a.at(<span class="number">5</span>).isNull()) &#123;</span><br><span class="line">     out &lt;&lt; <span class="string">"Outside the range of the string"</span> &lt;&lt; <span class="built_in">endl</span>;  </span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="字符串长度">字符串长度</h3><p>与字符串长度相关的函数有三个： <code>size()</code>, <code>count()</code>和<code>length</code>。三个函数的作用是一样的。</p><h3 id="字符串构建">字符串构建</h3><p>参考如下的例子：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QTextStream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="function">QTextStream <span class="title">out</span> <span class="params">(<span class="built_in">stdout</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">  QString s1 = <span class="string">"There are %1 white roses"</span>;</span><br><span class="line">  <span class="keyword">int</span> n = <span class="number">12</span>;</span><br><span class="line"></span><br><span class="line">  out &lt;&lt; s1.args(n) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">  QString s2 = <span class="string">"The tree is %1 m high"</span>;</span><br><span class="line">  <span class="keyword">double</span> h = <span class="number">5.65</span>;</span><br><span class="line"></span><br><span class="line">  out &lt;&lt; s2.args(h) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">  QString s3 = <span class="string">"We have %1 lemons and %2 oranges"</span>;</span><br><span class="line">  <span class="keyword">int</span> ln = <span class="number">12</span>;</span><br><span class="line">  <span class="keyword">int</span> on = <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line">  out &lt;&lt; s3.arg(ln).arg(on) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>待被替换的占位符用<code>%</code>开头，后面借数字。需要注意的是多个占位符需要替换时，需要多次调用<code>args()</code>函数，而非为<code>args()</code>函数传递多个参数。</p><h3 id="子字符串substring">子字符串(Substring)</h3><p>这里涉及<code>left()</code>，<code>mid()</code>，<code>right()</code>三个函数，分别代表从左侧开始的Substring，中间一段的Substring，右侧开始的Substring。见下面的例子：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QTextStream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="function">QTextStream <span class="title">out</span><span class="params">(<span class="built_in">stdout</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">   QString str = <span class="string">"The night train"</span>;</span><br><span class="line"></span><br><span class="line">   out &lt;&lt; str.right(<span class="number">5</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">   out &lt;&lt; str.left(<span class="number">9</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">   out &lt;&lt; str.mid(<span class="number">4</span>, <span class="number">5</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">   <span class="function">QString <span class="title">str2</span><span class="params">(<span class="string">"The big apple"</span>)</span></span>;</span><br><span class="line">   <span class="function">QStringRef <span class="title">sub</span><span class="params">(&amp;str2, <span class="number">0</span>, <span class="number">7</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">   out &lt;&lt; sub.toString() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="遍历字符串">遍历字符串</h3><p><code>QString</code>遵循了C++的通常做法：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QTextStream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="function">QTextStream <span class="title">out</span><span class="params">(<span class="built_in">stdout</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">  QString str = <span class="string">"There are many stars."</span>;</span><br><span class="line">  </span><br><span class="line">  foreach (QChar qc, str) &#123;</span><br><span class="line">    out &lt;&lt; qc &lt;&lt; <span class="string">" "</span>;  </span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  out &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span> (QChar *it=str.begin(); it!=str.end(); ++it) &#123;</span><br><span class="line">    out &lt;&lt; *it &lt;&lt; <span class="string">" "</span> ;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  out &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.size(); ++i) &#123;</span><br><span class="line">    out &lt;&lt; str.at(i) &lt;&lt; <span class="string">" "</span>;    </span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  out &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="字符串比较">字符串比较</h3><p><code>QString::compare()</code>函数用来比较两个字符串。该函数返回一个整型数。如果返回值小于0，那么第一个字符串小于第二个字符串；如果返回0，两个字符串相等；如果返回值大于0，那么第一个字符串大于第二个字符串。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QTextStream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STR_EQUAL 0</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="function">QTextStream <span class="title">out</span><span class="params">(<span class="built_in">stdout</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">   QString a = <span class="string">"Rain"</span>;</span><br><span class="line">   QString b = <span class="string">"rain"</span>;</span><br><span class="line">   QString c = <span class="string">"rain\n"</span>;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> (QString::compare(a, b) == STR_EQUAL) &#123;</span><br><span class="line">     out &lt;&lt; <span class="string">"a, b are equal"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">     out &lt;&lt; <span class="string">"a, b are not equal"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   out &lt;&lt; <span class="string">"In case insensitive comparison:"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> (QString::compare(a, b, Qt::CaseInsensitive) == STR_EQUAL) &#123;</span><br><span class="line">     out &lt;&lt; <span class="string">"a, b are equal"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">     out &lt;&lt; <span class="string">"a, b are not equal"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> (QString::compare(b, c) == STR_EQUAL) &#123;</span><br><span class="line">     out &lt;&lt; <span class="string">"b, c are equal"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">     out &lt;&lt; <span class="string">"b, c are not equal"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   c.chop(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">   out &lt;&lt; <span class="string">"After removing the new line character"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> (QString::compare(b, c) == STR_EQUAL) &#123;</span><br><span class="line">     out &lt;&lt; <span class="string">"b, c are equal"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">     out &lt;&lt; <span class="string">"b, c are not equal"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中<code>Qt::CaseInsensitive</code>表示无视大小写的比较。</p><h3 id="字符串解析">字符串解析</h3><p>这里指将字符串解析为数字类型。这里涉及<code>toInt()</code>, <code>toFloat()</code>, <code>toLong()</code>等函数。反过来，<code>setNum()</code>函数可以将数字类型转化成字符串。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QTextStream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="function">QTextStream <span class="title">out</span><span class="params">(<span class="built_in">stdout</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">  QString s1 = <span class="string">"12"</span>;</span><br><span class="line">  QString s2 = <span class="string">"15"</span>;</span><br><span class="line">  QString s3, s4;</span><br><span class="line">  </span><br><span class="line">  out &lt;&lt; s1.toInt() + s2.toInt() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">int</span> n1 = <span class="number">30</span>;</span><br><span class="line">  <span class="keyword">int</span> n2 = <span class="number">40</span>;</span><br><span class="line">  </span><br><span class="line">  out &lt;&lt; s3.setNum(n1) + s4.setNum(n2) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="字符类型">字符类型</h3><p><code>QChar</code>类型可以肥尾数字，祖母，空格以及标点符号，<code>QChar</code>提供了识别这些类型的函数：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QTextStream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">  <span class="function">QTextStream <span class="title">out</span><span class="params">(<span class="built_in">stdout</span>)</span></span>;</span><br><span class="line">  <span class="keyword">int</span> digits  = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> letters = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> spaces  = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> puncts  = <span class="number">0</span>;</span><br><span class="line">  </span><br><span class="line">  QString str = <span class="string">"7 white, 3 red roses."</span>;</span><br><span class="line">  </span><br><span class="line">  foreach(QChar s, str) &#123;</span><br><span class="line">    <span class="keyword">if</span> (s.isDigit()) &#123;</span><br><span class="line">      digits++;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (s.isLetter()) &#123;</span><br><span class="line">      letters++;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (s.isSpace()) &#123;</span><br><span class="line">      spaces++;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (s.isPunct()) &#123;</span><br><span class="line">      puncts++;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  out &lt;&lt; QString(<span class="string">"There are %1 characters"</span>).arg(str.count()) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  out &lt;&lt; QString(<span class="string">"There are %1 letters"</span>).arg(letters) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  out &lt;&lt; QString(<span class="string">"There are %1 digits"</span>).arg(digits) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  out &lt;&lt; QString(<span class="string">"There are %1 spaces"</span>).arg(spaces) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  out &lt;&lt; QString(<span class="string">"There are %1 punctuation characters"</span>).arg(puncts) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="修改字符串">修改字符串</h3><p>修改字符串的函数可以分为两类，一类返回一个修改后的副本，原字符串保持不变(如<code>toLower()</code>)；另一类是直接原地修改原字符串。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QTextStream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="function">QTextStream <span class="title">out</span><span class="params">(<span class="built_in">stdout</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">   QString str = <span class="string">"Lovely"</span>;</span><br><span class="line">   str.append(<span class="string">" season"</span>);</span><br><span class="line"></span><br><span class="line">   out &lt;&lt; str &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">   str.remove(<span class="number">10</span>, <span class="number">3</span>);</span><br><span class="line">   out &lt;&lt; str &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">   str.replace(<span class="number">7</span>, <span class="number">3</span>, <span class="string">"girl"</span>);</span><br><span class="line">   out &lt;&lt; str &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">   str.clear();</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> (str.isEmpty()) &#123;</span><br><span class="line">     out &lt;&lt; <span class="string">"The string is empty"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="字符串对齐">字符串对齐</h3><p>这里指输出格式调整，将输出的内容左对齐(<code>leftJustified()</code>)或者右对齐(<code>rightJustified()</code>)。如下面的例子：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QTextStream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="function">QTextStream <span class="title">out</span><span class="params">(<span class="built_in">stdout</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">   QString field1 = <span class="string">"Name: "</span>;</span><br><span class="line">   QString field2 = <span class="string">"Occupation: "</span>;</span><br><span class="line">   QString field3 = <span class="string">"Residence: "</span>;</span><br><span class="line">   QString field4 = <span class="string">"Marital status: "</span>;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">int</span> width = field4.size();</span><br><span class="line"></span><br><span class="line">   out &lt;&lt; field1.rightJustified(width, <span class="string">' '</span>) &lt;&lt; <span class="string">"Robert\n"</span>;</span><br><span class="line">   out &lt;&lt; field2.rightJustified(width, <span class="string">' '</span>) &lt;&lt; <span class="string">"programmer\n"</span>;</span><br><span class="line">   out &lt;&lt; field3.rightJustified(width, <span class="string">' '</span>) &lt;&lt; <span class="string">"New York\n"</span>;</span><br><span class="line">   out &lt;&lt; field4.rightJustified(width, <span class="string">' '</span>) &lt;&lt; <span class="string">"single\n"</span>;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">          Name: Robert</span><br><span class="line">    Occupation: programmer</span><br><span class="line">     Residence: New York</span><br><span class="line">Marital status: single</span><br></pre></td></tr></table></figure><h3 id="escaping">Escaping</h3><p>Qt5 提供了 <code>toHtmlEscapted()</code> 方法，将字符串中涉及的html下特殊的字符，如<code>&lt;, &gt;, &amp;, &quot;</code>等，替换成HTML下的编码。如</p><p>处理文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">int main(void) &#123;</span><br><span class="line"></span><br><span class="line">    for (int i=1; i&lt;=10; i++) &#123;</span><br><span class="line">        printf(&quot;Bottle %d\n&quot;, i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用如下</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// html_escape.cpp</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QTextStream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QFile&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">QTextStream <span class="title">out</span><span class="params">(<span class="built_in">stdout</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">QFile <span class="title">file</span><span class="params">(<span class="string">"cprog.c"</span>)</span></span>;</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span> (!file.open(QIODevice::ReadOnly)) &#123;</span><br><span class="line">        qWarning(<span class="string">"Cannot open file for reading"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">QTextStream <span class="title">in</span><span class="params">(&amp;file)</span></span>;</span><br><span class="line"></span><br><span class="line">    QString allText = in.readAll();</span><br><span class="line">    out &lt;&lt; allText.toHtmlEscaped() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    file.close();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出内容如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ./html_escape</span></span><br><span class="line"><span class="meta">#</span><span class="bash">include &amp;lt;stdio.h&amp;gt;</span></span><br><span class="line"></span><br><span class="line">int main(void) &#123;</span><br><span class="line"></span><br><span class="line">    for (int i=1; i&amp;lt;=10; i++) &#123;</span><br><span class="line">        printf(&amp;quot;Bottle %d\n&amp;quot;, i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="date-and-time">Date and Time</h2><p>这个部分还是继续讲 Qt 扩展的数据类型。本次涉及<code>QDate</code>，<code>QTime</code> 和 <code>QDateTime</code> 三个类。</p><p><code>QDate</code> 用于管理格里高利历的日历。<code>QTime</code>处理时钟，<code>QDateTime</code>则是二者的结合。</p><h3 id="初始化-日期时间对象">初始化 日期&amp;时间对象</h3><p>日期和时间对象的初始化有两种基本方法：要么用构造函数直接复制，要么构造一个空的对象后续赋值。参见下面的粒子：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QTextStream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QDate&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QTime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="function">QTextStream <span class="title">out</span><span class="params">(<span class="built_in">stdout</span>)</span></span>;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 年 - 月 - 日</span></span><br><span class="line">  <span class="function">QDate <span class="title">dt1</span><span class="params">(<span class="number">2015</span>, <span class="number">4</span>, <span class="number">12</span>)</span></span>;</span><br><span class="line">  out &lt;&lt; <span class="string">"The date is "</span> &lt;&lt; dt1.toString() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">  QDate dt2;</span><br><span class="line">  dt2.setDate(<span class="number">2015</span>, <span class="number">3</span>, <span class="number">3</span>);</span><br><span class="line">  out &lt;&lt; <span class="string">"The date is "</span> &lt;&lt; dt2.toString() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 时 - 分 - 秒 - 毫秒</span></span><br><span class="line">  <span class="function">QTime <span class="title">tm1</span><span class="params">(<span class="number">17</span>, <span class="number">30</span>, <span class="number">12</span>, <span class="number">55</span>)</span></span>;</span><br><span class="line">  out &lt;&lt; <span class="string">"The time is "</span> &lt;&lt; tm1.toString(<span class="string">"hh:mm:ss.zzz"</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">  QTime tm2;</span><br><span class="line">  tm2.setHMS(<span class="number">13</span>, <span class="number">52</span>, <span class="number">45</span>, <span class="number">155</span>);</span><br><span class="line">  out &lt;&lt; <span class="string">"The time is "</span> &lt;&lt; tm2.toString(<span class="string">"hh:mm:ss.zzz"</span>) &lt;&lt; <span class="built_in">endl</span>;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="当前时间">当前时间</h3><p>见下面的例子：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QTextStream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QTime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QDate&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="function">QTextStream <span class="title">out</span><span class="params">(<span class="built_in">stdout</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">   QDate cd = QDate::currentDate();</span><br><span class="line">   QTime ct = QTime::currentTime();</span><br><span class="line"></span><br><span class="line">   out &lt;&lt; <span class="string">"Current date is: "</span> &lt;&lt; cd.toString() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">   out &lt;&lt; <span class="string">"Current time is: "</span> &lt;&lt; ct.toString() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意，源文件不能叫<code>time.cpp</code>。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QDate cd = QDate::currentDate();</span><br></pre></td></tr></table></figure><p>返回的当前的日期。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QTime ct = QTime::currentTime();</span><br></pre></td></tr></table></figure><p>返回当前的时间。<code>toString()</code>函数则将的日期和时间对象转化成字符串。</p><h3 id="比较日期">比较日期</h3><p>关系操作符和用来比较日期（在日历上的位置）。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QTextStream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QDate&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="function">QTextStream <span class="title">out</span><span class="params">(<span class="built_in">stdout</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">  <span class="function">QDate <span class="title">dt1</span><span class="params">(<span class="number">2015</span>, <span class="number">4</span>, <span class="number">5</span>)</span></span>;</span><br><span class="line">  <span class="function">QDate <span class="title">dt2</span><span class="params">(<span class="number">2014</span>, <span class="number">4</span>, <span class="number">5</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (dt1 &lt; dt2) &#123;</span><br><span class="line">    out &lt;&lt; dt1.toString() &lt;&lt; <span class="string">" comes before "</span></span><br><span class="line">      &lt;&lt; dt2.toString() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    out &lt;&lt; dt1.toString() &lt;&lt; <span class="string">" comes after "</span></span><br><span class="line">      &lt;&lt; dt2.toString() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="闰年">闰年</h3><p>使用<code>QDate::isLeapYear()</code>函数来判断</p><h3 id="日期时间-格式">日期/时间 格式</h3><h4 id="预定义日期格式">预定义日期格式</h4><p>Qt 有一些内建的日期格式。<code>QDate</code> 的 <code>toString()</code>函数可以接收一个日期格式描述对象作为参数。默认的参数是<code>Qt::TextDate</code>。一些其他的格式见下面的粒子：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// dateformats.cpp</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QTextStream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QDate&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="function">QTextStream <span class="title">out</span><span class="params">(<span class="built_in">stdout</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">   QDate cd = QDate::currentDate();</span><br><span class="line"></span><br><span class="line">   out &lt;&lt; <span class="string">"Today is "</span> &lt;&lt; cd.toString(Qt::TextDate) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">   out &lt;&lt; <span class="string">"Today is "</span> &lt;&lt; cd.toString(Qt::ISODate) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">   out &lt;&lt; <span class="string">"Today is "</span> &lt;&lt; cd.toString(Qt::SystemLocaleShortDate) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">   out &lt;&lt; <span class="string">"Today is "</span> &lt;&lt; cd.toString(Qt::SystemLocaleLongDate) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">   out &lt;&lt; <span class="string">"Today is "</span> &lt;&lt; cd.toString(Qt::DefaultLocaleShortDate) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">   out &lt;&lt; <span class="string">"Today is "</span> &lt;&lt; cd.toString(Qt::DefaultLocaleLongDate) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">   out &lt;&lt; <span class="string">"Today is "</span> &lt;&lt; cd.toString(Qt::SystemLocaleDate) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">   out &lt;&lt; <span class="string">"Today is "</span> &lt;&lt; cd.toString(Qt::LocaleDate) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Today is Sat Oct 31 2015</span><br><span class="line">Today is 2015-10-31</span><br><span class="line">Today is 10/31/15</span><br><span class="line">Today is Saturday, October 31, 2015</span><br><span class="line">Today is 10/31/15</span><br><span class="line">Today is Saturday, October 31, 2015</span><br><span class="line">Today is 10/31/15</span><br><span class="line">Today is 10/31/15</span><br></pre></td></tr></table></figure><h4 id="自定义日期格式">自定义日期格式</h4><p>如下表：</p><p><img src="https://imgs.codewoody.com/uploads/big/ea0c02b56040b78459362caf3e6b191d.png"></p><h4 id="预定义时间格式">预定义时间格式</h4><p>和日期的类似，时钟对象的<code>toString()</code>也接收格式描述对象参数。默认的是<code>Qt::TextDate</code>。其他格式如下例子</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QTextStream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QTime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="function">QTextStream <span class="title">out</span><span class="params">(<span class="built_in">stdout</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">   QTime ct = QTime::currentTime();</span><br><span class="line"></span><br><span class="line">   out &lt;&lt; <span class="string">"The time is "</span> &lt;&lt; ct.toString(Qt::TextDate) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">   out &lt;&lt; <span class="string">"The time is "</span> &lt;&lt; ct.toString(Qt::ISODate) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">   out &lt;&lt; <span class="string">"The time is "</span> &lt;&lt; ct.toString(Qt::SystemLocaleShortDate) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">   out &lt;&lt; <span class="string">"The time is "</span> &lt;&lt; ct.toString(Qt::SystemLocaleLongDate) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">   out &lt;&lt; <span class="string">"The time is "</span> &lt;&lt; ct.toString(Qt::DefaultLocaleShortDate) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">   out &lt;&lt; <span class="string">"The time is "</span> &lt;&lt; ct.toString(Qt::DefaultLocaleLongDate) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">   out &lt;&lt; <span class="string">"The time is "</span> &lt;&lt; ct.toString(Qt::SystemLocaleDate) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">   out &lt;&lt; <span class="string">"The time is "</span> &lt;&lt; ct.toString(Qt::LocaleDate) &lt;&lt; <span class="built_in">endl</span>;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">The time is 15:58:26</span><br><span class="line">The time is 15:58:26</span><br><span class="line">The time is 3:58 PM</span><br><span class="line">The time is 3:58:26 PM CET</span><br><span class="line">The time is 3:58 PM</span><br><span class="line">The time is 3:58:26 PM CET</span><br><span class="line">The time is 3:58 PM</span><br><span class="line">The time is 3:58 PM</span><br></pre></td></tr></table></figure><h4 id="自定义时间格式">自定义时间格式</h4><p><img src="https://imgs.codewoody.com/uploads/big/cd840ad4822bc2779c19877df931bcf5.png"></p><h3 id="其他工具函数">其他工具函数</h3><ul><li><code>daysOfWeek()</code>: 周几，1表示周一，7表示周日；</li><li><code>daysInMonth()</code>: 在月中的第几天；</li><li><code>daysInYear():</code>: 在年中的第几天；</li><li><code>isValid()</code>: 验证日期是否有效；</li><li><code>daysTo()</code>，<code>daysFrom</code>：计算日期的间距；</li></ul><h3 id="qdatetime类"><code>QDateTime</code>类</h3><p><code>QDateTime</code>类是日期和时间的组合，其接口也非常类似。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我参考&lt;a href=&quot;http://zetcode.com/gui/qt5/introduction/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://zetcode.com/gui/qt5/introduction/&lt;/a&gt;这个链接入坑，使用macOS。网上看起来是Windows和Linux的教程居多，这个链接里的教程初看起来应该也是基于Linux的。谁让Mac的市场占有率低呢。&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="http://www.codewoody.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="http://www.codewoody.com/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="C++" scheme="http://www.codewoody.com/tags/C/"/>
    
      <category term="Qt" scheme="http://www.codewoody.com/tags/Qt/"/>
    
  </entry>
  
  <entry>
    <title>Shadowsocks 完全手册</title>
    <link href="http://www.codewoody.com/posts/36409/"/>
    <id>http://www.codewoody.com/posts/36409/</id>
    <published>2019-09-16T05:07:02.000Z</published>
    <updated>2019-09-16T05:49:01.289Z</updated>
    
    <content type="html"><![CDATA[<p>目前我的博客里面还是Shadowsocks相关的文章看的人最多，所以我这里干脆汇总整理一下。</p><h2 id="什么是shadowsocks">什么是Shadowsocks</h2><p>Shadowsocks 据传早期是由一名知乎员工(clowwwindy)开发，从一开始就是不属于任何公司的开源软件。不过在Shadowsocks广为流行之后，这名员工被有关部门请去喝茶，其本人Github名下的Shadowsocks代码仓库也被清空，只留下内容为「Removed due to regulations」。不过 Shadowsocks 的代码被很多人Fork，所以Shadowsocks的活力并未受到影响。</p><p>后来Shadowsocks又被开发者（breakwa11）发展成ShadowsocksR，加了很多加密、流量混淆插件，比原版更安全、更稳定、更快速。不过这名作者随后被人肉，代码被迫删除。</p><p>Shadowsocks 为一种<strong>代理</strong>软件。对于软件工程不熟悉的人，通常会混淆<strong>代理</strong>与<strong>VPN</strong>二者的概念，网络上有很多文章来讲解这二者的区别。按照「<a href="https://www.howtogeek.com/247190/whats-the-difference-between-a-vpn-and-a-proxy/" target="_blank" rel="noopener">What’s the Difference Between a VPN and a Proxy?</a>」这篇文章的说法，代理的作用为隐藏你的真实IP，让你以服务器的IP的身份来访问站点。不过代理的链接并不一定保证加密。另外，代理的实现层级比较高，一般的应用程序需要主动连接代理才会进行访问。而VPN的核心特点链接加密。且VPN的实现层级比较低，可以全局起效果。</p><h2 id="shadowsocks部署">Shadowsocks部署</h2><h3 id="海外服务器">海外服务器</h3><p>任何翻墙技术的本质都是将网络流量发送给一台位于中国大陆防火墙之外的服务器，由服务器访问目标网站再把响应数据发送给客户端。因此，一台海外服务器是必须的。目前云计算技术成熟，租赁一台海外的虚拟服务器的唯一困难，基本就是你需要一张VISA信用卡来支付美元。没有VISA，PayPal应该也是可以的，PayPal可以绑定借记卡。</p><p>有非常多的厂商提供虚拟服务器租赁服务，这个可以按照价格和服务器的地理位置，根据自己的需要选择。我自己选择的是DigitalOcean位于洛杉矶的机房。Ping的延时大概在200ms以内。另外还需要补充的是，对于校园网用户，国内的校园网大多支持Ipv6且Ipv6部分的流量是不计费的。因此在租赁服务器时选择支持Ipv6的机器就非常重要了。</p><p>Shadowsocks服务对于服务器的性能要求不高，因此一般选择最便宜的一档就可以了，例如DigitalOcean最便宜的一档是1GB内存，单核CPU，25GB SSD磁盘，1 TB流量，价格5美元/月，并且支持Ipv6。</p><h3 id="shadowsocks服务端安装">Shadowsocks服务端安装</h3><p>Shadowsocks 发展到今日已经是相当成熟的大众产品了，有众多安装方法可供选择。这里我选择了<a href="https://teddysun.com/" target="_blank" rel="noopener">teddysun</a>开发的一键安装脚本系列。</p><blockquote><p>teddysun 的脚本在广为流行之后，也开始面临了当局的压力，放弃了更新，并且删除了教程文章。Shadowsocks发展到今天，真是有很多人付出心血的结果。</p></blockquote><p>teddysun本人的Github项目仓库的代码在master分支上还有保留，故方便使用。</p><p>一般情况下，我们使用<code>shadowsocks-all.sh</code>脚本就可以了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;目前我的博客里面还是Shadowsocks相关的文章看的人最多，所以我这里干脆汇总整理一下。&lt;/p&gt;
&lt;h2 id=&quot;什么是shadowsocks&quot;&gt;什么是Shadowsocks&lt;/h2&gt;
&lt;p&gt;Shadowsocks 据传早期是由一名知乎员工(clowwwindy)开发，
      
    
    </summary>
    
      <category term="教程" scheme="http://www.codewoody.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="http://www.codewoody.com/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Shadowsocks" scheme="http://www.codewoody.com/tags/Shadowsocks/"/>
    
  </entry>
  
  <entry>
    <title>Weekly-13</title>
    <link href="http://www.codewoody.com/posts/8301/"/>
    <id>http://www.codewoody.com/posts/8301/</id>
    <published>2019-09-16T03:25:59.000Z</published>
    <updated>2019-10-04T13:24:22.415Z</updated>
    
    <content type="html"><![CDATA[<h2 id="新闻">新闻</h2><h3 id="格力集团欲400亿卖掉格力电器"><a href="https://www.zhihu.com/question/319348233" target="_blank" rel="noopener">格力集团欲400亿卖掉格力电器</a></h3><p>观察者网【格力集团欲400亿“卖掉”格力电器 富士康或接盘】 格力电器控股权从1991年成立以来一直属于珠海市国资委旗下格力集团。但在4月8日，格力集团拟通过公开征集受让方的方式协议转让格力集团持有的格力电器总股本15%的股票。本次转让完成后，公司控股股东和实际控制人可能将发生变更。</p><p>一名珠海国资人士透露，近来富士康科技集团在珠海进行了大规模投资，有可能成为潜在的接盘方。</p><h3 id="电影杀人回忆的故事原型真凶疑似被发现"><a href="https://www.zhihu.com/question/346644375" target="_blank" rel="noopener">电影《杀人回忆》的故事原型真凶疑似被发现</a></h3><p><img src="https://imgs.codewoody.com/uploads/big/86cfe07d183298dcca59d16a7ba3de63.jpeg" style="width: 50%"></p><p>不过按键已经超过了韩国刑法规定的追诉时效，嫌疑人无法被提起公诉并定罪。</p><blockquote><p>按照韩国的法律规定，2007年之前发生的案件的公诉时效是15年，因为这是同一个犯罪嫌疑人连续杀人，公诉期按照最后一个案件的发生日期来计算 -- 可惜最后一个杀人案是在1991年4月23日发生的，到现在已经28年，已经过了公诉时效，也就是说从法律上不能再对犯罪人处以刑罚了。</p></blockquote><h3 id="中美关系">中美关系</h3><ul><li>中央财办副主任、财政部副部长廖岷拟于<a href="https://news.ifeng.com/c/7q2LkwSwKvo" target="_blank" rel="noopener">本周三率团访美</a>，与美方就中美经贸问题进行磋商，为10月份在华盛顿举行的第十三轮中美经贸高级别磋商做准备。</li></ul><h3 id="香港后续">香港后续</h3><ul><li><a href="https://www.dw.com/zh/时局动荡-穆迪将香港信用评级展望调至-负面/a-50449907?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">穆迪调低香港信用评级展望至负面</a>。</li><li>美国众议院院长佩洛西 (Nancy Pelosi) 9月18日在华府<a href="https://www.dw.com/zh/佩洛西见香港倡议人士%20中前官员对港发出警告/a-50489299?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">接见黄之锋与何韵诗等数名香港倡议人士</a>，并藉此向中国政府喊话，表示美国国会基于人权，支持香港「反送中」示威的运动者。</li></ul><h3 id="关于台湾的若干消息">关于台湾的若干消息</h3><h4 id="大陆20个城市恢复金马澎个人游"><a href="https://news.ifeng.com/c/7q1RRCtC4YW" target="_blank" rel="noopener">大陆20个城市恢复金马澎个人游</a></h4><p>金门县政府稍早宣布，大陆出入境管理部门公告，自本月20日起恢复受理金门、马祖、澎湖“小三通”个人旅游签注申请，“对长期仰赖‘小三通’的金门观光产业，无疑是一剂强心针，昔日陆客穿梭大街小巷的荣景，将可望再现。”相当于福建省、浙江省、江西省与广东省等20个城市，自20日起可循“小三通”到金门、马祖与澎湖个人游。</p><p>在台湾这几个地方也是归于中华民国福建省管辖的。</p><h4 id="所罗门群岛和台湾断交">所罗门群岛和台湾断交</h4><p><img src="https://imgs.codewoody.com/uploads/big/743a97d06c038821e0c7c1691a0d400b.png"></p><p>台湾“中央社”16日下午发布消息称，所罗门群岛总理梅纳西·索加瓦雷16日召开内阁会议，决定中断与台湾的关系，与中国大陆建交。随后，台外事部门召开记者会证实这一消息，并称台当局与所罗门群岛“断交”。</p><p>目前台湾所谓“友邦”数量降至16个。</p><p><img src="https://imgs.codewoody.com/uploads/big/a861e850f77376cdf288f69586949cf0.jpg"></p><h4 id="基里巴斯和台湾断交"><a href="http://www.chinaqw.com/hqhr/2019/09-20/232095.shtml" target="_blank" rel="noopener">基里巴斯和台湾断交</a></h4><p>20日的消息，太平洋岛国基里巴斯与台湾断交</p><h4 id="郭台铭与柯文哲相继宣布不参加2020选举"><a href="https://news.ifeng.com/c/7q2MGfzEpzk" target="_blank" rel="noopener">郭台铭与柯文哲相继宣布不参加2020选举</a></h4><p>鸿海集团前董事长郭台铭16日深夜宣布不参加2020年台湾地区领导人连署登记，先前与郭台铭达成参选默契的台北市长柯文哲将如何回应？会不会自己跳出来参选？今早近九点，柯文哲在市政会议前接受媒体联访，导报驻台记者获悉，柯文哲也宣布不选2020。</p><p>于此同时，民进党前副总统<a href="https://www.dw.com/zh/郭台铭不选总统-韩国瑜盼见面/a-50453416?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">吕秀莲宣布参选</a>。</p><h3 id="其他新闻">其他新闻</h3><ul><li><a href="https://cn.reuters.com/article/sa-drone-iran-attack-evidence-0919-idCNKBS1W403H?feedType=RSS&amp;feedName=CNTopGenNews" target="_blank" rel="noopener">沙特展示油田袭击为伊朗所为的证据</a></li><li><a href="https://www.zhihu.com/question/346762535/answer/829159422" target="_blank" rel="noopener">9月19日 华为在德国发布Mate 30系列</a></li><li><a href="https://www.zhihu.com/question/346772743" target="_blank" rel="noopener">9月19日 李荣浩和杨丞琳宣布结婚</a></li></ul><h2 id="资源">资源</h2><ul><li><a href="http://zetcode.com/gui/pyqt5/" target="_blank" rel="noopener">PyQt5 tutorial</a></li><li><a href="http://www.todayonhistory.com" target="_blank" rel="noopener">历史上的今天</a></li><li><a href="https://www.appinn.com/100000-ai-faces/" target="_blank" rel="noopener">10万张不哟啊肖像权的人脸照片</a></li><li><a href="https://fullstackopen.com/en/" target="_blank" rel="noopener">现代web开发</a></li><li><a href="https://www.wiz.cn/zh-cn/docker" target="_blank" rel="noopener">为知笔记发布Docker服务端</a></li></ul><h2 id="言论">言论</h2><ul><li><p>信息的商业模式，不应该是收费，而是应该鼓励更多的人消费它。</p></li><li><p>当你遇到需要同时获取多个子组件数据，或者两个组件之间需要相互通讯的情况时，需要把子组件的 state 数据提升至其共同的父组件当中保存。之后父组件可以通过 props 将状态数据传递到子组件当中。这样应用当中所有组件的状态数据就能够更方便地同步共享了。 -- <a href="https://zh-hans.reactjs.org/tutorial/tutorial.html#lifting-state-up" target="_blank" rel="noopener">React 官方教程</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://imgs.codewoody.com/uploads/big/9accee2f5e4d12ebbf9ca17cf289bf96.png&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Weekly" scheme="http://www.codewoody.com/categories/Weekly/"/>
    
    
      <category term="杂谈" scheme="http://www.codewoody.com/tags/%E6%9D%82%E8%B0%88/"/>
    
      <category term="科技新闻" scheme="http://www.codewoody.com/tags/%E7%A7%91%E6%8A%80%E6%96%B0%E9%97%BB/"/>
    
      <category term="转载" scheme="http://www.codewoody.com/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="Weekly" scheme="http://www.codewoody.com/tags/Weekly/"/>
    
  </entry>
  
  <entry>
    <title>Weekly-12</title>
    <link href="http://www.codewoody.com/posts/57516/"/>
    <id>http://www.codewoody.com/posts/57516/</id>
    <published>2019-09-09T02:09:30.000Z</published>
    <updated>2019-09-21T06:21:49.440Z</updated>
    
    <content type="html"><![CDATA[<h2 id="新闻">新闻</h2><h3 id="brexit与欧盟atad法案">Brexit与欧盟ATAD法案</h3><p>读王孟源的文章，总是能让人获得新的观察问题的视角。在他最新的<a href="http://blog.udn.com/MengyuanWang/129262086" target="_blank" rel="noopener">《【英國】談Brexit》</a>一文中，王孟源就提到了英国脱欧同欧盟将要实施的反避税指令ATAD(Anti Tax Avoidance Directive)有关。简而言之，应该这种老牌资本主义国家的土豪有着各种各样的避税法门，这在英国尤其「严重」。英国历代议会收到这些土豪的掣肘严重，一直无法解决这一问题。不过欧盟内福利国家多，避税传统没有英国强，且各国地方土豪，对于布鲁塞尔的欧盟官僚影响力要更弱。因此欧盟得以整合力量来解决这些土豪避税的问题。但是ATAD无疑是动了英国土豪的命根子。一个端倪是前几年ATAD刚刚开始立法过程，Brexit忽然就成为英国政坛的主流。由于ATAD预定在2020年1月1日正式生效<span class="foot-note-span">【Member States will have until 1 January 2020 to transpose the Directive into national laws and regulations(<a href="https://www.ey.com/gl/en/services/tax/international-tax/alert--eu-council-adopts-directive-atad-2-to-address-hybrid-mismatches-with-third-countries" target="_blank" rel="noopener">来源</a>)】</span>，预计脱欧势力必然会在这个时间节点之前尽一切努力达成无协议脱欧。</p><p>相反，如果无法在2020年1月1日ATAD开始实施之前完成脱欧，脱欧派的立场可能会软化，转而追求软脱欧甚至是重新公投。</p><h3 id="苹果发布新iphone及其他新品"><a href="https://www.zhihu.com/pin/1154851195238612992" target="_blank" rel="noopener">苹果发布新iPhone及其他新品</a></h3><p><img src="https://imgs.codewoody.com/uploads/big/cc90e51a3b1e9d909761ac9d2b51e171.png"></p><p>今天(11日)凌晨，苹果在 Steve Jobs Theater 召开了一年一度的秋季发布会，发布了 iPhone 11、iPhone 11 Pro、iPhone 11 Pro Max、新一代 Apple Watch 以及全新的 10.2 英寸入门款 iPad。</p><iframe width="560" height="315" src="https://www.youtube.com/embed/eEJJt5PoLhY" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><h3 id="马云正式宣布不再担任阿里巴巴董事局主席"><a href="https://www.zhihu.com/question/345303992" target="_blank" rel="noopener">马云正式宣布不再担任阿里巴巴董事局主席</a></h3><p>9月10日教师节，阿里巴巴创办人、「乡村教师」马云将正式卸任董事局主席一职，而今日也正是阿里巴巴集团创办20周年整，马云昨日亲身到访阿里巴巴位于杭州的总部滨江园区，向同事道别。根据内地媒体报道，马云所到之处人山人海、水泄不通，而他最后一日工作因提早下班，故此没有本月全勤奖。</p><p><img src="https://imgs.codewoody.com/uploads/big/dfe2f570ff16c40f8cd777a62edbace3.jpeg"></p><h3 id="沙特两处石油设施遭到无人机袭击"><a href="https://www.bbc.com/zhongwen/simp/world-49691790" target="_blank" rel="noopener">沙特两处石油设施遭到无人机袭击</a></h3><p>也门胡赛武装宣布对此次事件负责，称其动用10架无人机进行袭击。不过美国国务卿蓬佩奥指责伊朗在幕后主使。而伊朗则指责美国说谎。沙特没有透露石油设施遭到攻击的细节，只说没有人员伤亡，但表示石油产能受到影响。沙特能源部长阿卜杜勒阿齐兹亲王表示，受影响减少的产能(约500万桶，约占全球产能5%)，其中一部分将有庞大的石油储备替代。</p><blockquote class="twitter-tweet"><p lang="en" dir="ltr">....sufficient to keep the markets well-supplied. I have also informed all appropriate agencies to expedite approvals of the oil pipelines currently in the permitting process in Texas and various other States.</p>— Donald J. Trump (@realDonaldTrump) <a href="https://twitter.com/realDonaldTrump/status/1173354645642764289?ref_src=twsrc%5Etfw" target="_blank" rel="noopener">September 15, 2019</a></blockquote><script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script><p>对于原油市场而言，这是有史以来最严重的供应突然中断，规模超过了1990年8月萨达姆突然入侵科威特时的水平。根据美国能源部数据，此次供应减量规模也超出了1979年伊朗伊斯兰革命时的水平。周六针对沙特的袭击致使原油市场周一开盘出现了剧烈震荡，9月16日，受沙特油田事故影响，美原油开盘跳涨约15%，达5月以来的最高点，布伦特原油开盘暴涨，涨幅一度扩大至19%，为1988年期货开始交易以来美元计价最大涨幅。</p><p><img src="https://imgs.codewoody.com/uploads/big/1b0a1abdf7808058932d26e76dacee47.png"></p><h3 id="香港后续">香港后续</h3><p>本周香港的暴力冲突仍然在继续。不过，除了陆续警民冲突之外，民众之间的互相攻击开始增加。</p><ul><li><a href="https://www.dw.com/zh/黄之锋飞抵柏林-将香港比作「冷战时的德国」/a-50345270?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">黄之锋到达德国</a>，周一顺利如期出席德国媒体于首都柏林举办的活动。</li><li><a href="https://www.dw.com/zh/德国外长会见黄之锋-引发中德口水仗/a-50345270?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">德国外长会见黄之锋</a></li><li><a href="https://www.dw.com/zh/出价近300亿-香港证交所向伦敦提出-世纪婚约/a-50387535?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">港交所发布公告，已经正式向伦敦交易所提出合并要约。</a>，不过伦敦交易所<a href="https://www.dw.com/zh/伦敦拒绝香港证交所的-世纪婚约/a-50387535?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">拒绝了</a>。</li></ul><h3 id="其他新闻">其他新闻</h3><ul><li><a href="https://www.zhihu.com/question/344732424" target="_blank" rel="noopener">迪士尼宣布允许游客带自用食品进入园区</a></li><li><a href="https://www.thepaper.cn/newsDetail_forward_4367227" target="_blank" rel="noopener">印度「月船 2 号」登陆月球失败</a>，在距离月球表面2.1公里处失联。</li><li><a href="http://www.customs.gov.cn/customs/xwfb34/302425/2586202/index.html" target="_blank" rel="noopener">8月 中国出口同步减少1%</a></li><li><a href="https://www.theguardian.com/business/2019/sep/08/boeing-777x-test-halted-after-reports-of-cargo-door-failure" target="_blank" rel="noopener">波音暂停新机型 777X测试</a>: 在进行地面高压应力测试时，波音 777X 的测试机的一扇货舱门向外爆炸，目前，777X 的联邦航空管理局（FAA）认证测试已被暂停。</li><li><a href="https://www.dw.com/zh/英国国会-关门-强制休会期启动/a-50356111?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">9月9日 英国国会强制休会期启动</a>，此论休会将延续到10月14日。</li><li><a href="https://cn.reuters.com/article/britain-scotland-court-boris-johnson-091-idCNKCS1VW199?feedType=RSS&amp;feedName=CNTopGenNews" target="_blank" rel="noopener">9月11日 苏格兰法院裁定首相约翰逊让议会休会五周不合法</a></li><li><a href="http://world.huanqiu.com/photo/2019-09/2945219.html?agt=15422" target="_blank" rel="noopener">特朗普开除国家安全事务助理博尔顿</a></li><li><a href="https://www.dw.com/zh/媒体：所罗门政府讨论与台湾断交/a-50420457?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">所罗门群岛可能与台湾断交，赶在十一前和大陆建交</a></li><li><a href="https://cn.reuters.com/article/taiwan-politics-0912-thur-idCNKCS1VX07M?feedType=RSS&amp;feedName=CNTopGenNews" target="_blank" rel="noopener">郭台铭退出国民党，参选在即</a></li><li><a href="https://www.zhihu.com/question/346155012" target="_blank" rel="noopener">西班牙 95:75 战胜阿根廷夺得男篮世界杯冠军</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://imgs.codewoody.com/uploads/big/7dddde33ffaa44d9cd474e774983497c.jpg&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Weekly" scheme="http://www.codewoody.com/categories/Weekly/"/>
    
    
      <category term="杂谈" scheme="http://www.codewoody.com/tags/%E6%9D%82%E8%B0%88/"/>
    
      <category term="科技新闻" scheme="http://www.codewoody.com/tags/%E7%A7%91%E6%8A%80%E6%96%B0%E9%97%BB/"/>
    
      <category term="转载" scheme="http://www.codewoody.com/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="Weekly" scheme="http://www.codewoody.com/tags/Weekly/"/>
    
  </entry>
  
  <entry>
    <title>正则匹配的一些研究</title>
    <link href="http://www.codewoody.com/posts/30513/"/>
    <id>http://www.codewoody.com/posts/30513/</id>
    <published>2019-09-03T03:50:50.000Z</published>
    <updated>2019-09-03T04:05:06.650Z</updated>
    
    <content type="html"><![CDATA[<h2 id="元字符和语法">元字符和语法</h2><figure><img src="https://imgs.codewoody.com/uploads/big/dccd456ebd9bc0d9f05205583de18634.png" alt="Python支持正则表达式元字符和语法"><figcaption>Python支持正则表达式元字符和语法</figcaption></figure><h2 id="模式研究">模式研究</h2><h3 id="浮点数匹配">浮点数匹配</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">r'-?(\d+(?:\.\d+)?(?:e-?\d+)?)'</span></span><br></pre></td></tr></table></figure><p>这个模式能够匹配所有的数字模式，包括正负数，科学计数法模式。这里注意一下<code>(?:)</code>这个模式，代表这个括号标出的元组不参与编号，在输 输出的结果中也不会单列出来。</p><h3 id="汉字">汉字</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">r'^[\u4e00-\u9fa5]&#123;0,&#125;$ '</span></span><br></pre></td></tr></table></figure><h3 id="邮箱">邮箱</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">r'^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$ '</span></span><br></pre></td></tr></table></figure><h3 id="手机号码">手机号码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">r'^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\d&#123;8&#125;$'</span></span><br></pre></td></tr></table></figure><h2 id="更多阅读">更多阅读</h2><ul><li><a href="https://blog.csdn.net/dengjianqiang2011/article/details/78726570" target="_blank" rel="noopener">常用的正则表达式知识点与常见的正则匹配模式</a></li><li><a href="https://www.cnblogs.com/huxi/archive/2010/07/04/1771073.html" target="_blank" rel="noopener">Python正则表达式指南</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;元字符和语法&quot;&gt;元字符和语法&lt;/h2&gt;
&lt;figure&gt;
&lt;img src=&quot;https://imgs.codewoody.com/uploads/big/dccd456ebd9bc0d9f05205583de18634.png&quot; alt=&quot;Python支持正则表
      
    
    </summary>
    
      <category term="编程研究" scheme="http://www.codewoody.com/categories/%E7%BC%96%E7%A8%8B%E7%A0%94%E7%A9%B6/"/>
    
    
      <category term="教程" scheme="http://www.codewoody.com/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="折腾" scheme="http://www.codewoody.com/tags/%E6%8A%98%E8%85%BE/"/>
    
  </entry>
  
  <entry>
    <title>Weekly-11</title>
    <link href="http://www.codewoody.com/posts/57836/"/>
    <id>http://www.codewoody.com/posts/57836/</id>
    <published>2019-09-02T04:49:31.000Z</published>
    <updated>2019-09-16T03:16:39.666Z</updated>
    
    <content type="html"><![CDATA[<h2 id="新闻">新闻</h2><h3 id="林郑月娥宣布正式撤回逃犯条例草案"><a href="https://www.dw.com/zh/林郑月娥：正式撤回《逃犯条例》草案/a-50280633?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">林郑月娥宣布正式撤回《逃犯条例》草案</a></h3><p>9月4日当地时间下午，香港特首林郑月娥发表电视讲话：“宣布正式撤回逃犯修订条列草案，“以完全释除市民的疑虑”。</p><p>她在讲话中承诺保安局局长会在立法会复会后，按《议事规则》动议撤回条例草案。</p><p>这位香港特首还表示：这两个多月发生的事，令每一个香港人都感到震惊和伤心，亦令大家对香港感到焦虑和痛心，大家都希望可以尽快走出目前的困局。她作为行政长官，有责任尽一切努力，在种种局限下寻找社会向前行的机会。</p><p>...</p><p>她表示，经过两个多月因修例工作引起的冲突，大家都意识到，眼前的矛盾是反映了长期积压的政治、经济和社会问题，例如房屋和土地供应、贫富悬殊、社会公义、青年人的机遇，以至公众参与决策等。她指，持续出现的暴力正动摇香港法治的根基，极少数人挑战“一国两制”，冲击中央政府驻港机构，污损国旗、国徽，将香港推向危险的境地。无论市民对政府或对社会现况有多大不满，暴力绝对不是解决问题的方法。目前，最迫切的就是要遏止暴力、捍卫法治、重建社会秩序。<strong>政府会对所有违法及暴力行为，严正执法</strong>。</p><iframe width="560" height="315" src="https://www.youtube.com/embed/tNvzooU-wr0" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><p>讲话伊始，这位香港特首表示，逃犯条例修订引起的示威冲突持续两个多月，对很多香港人来说，这城市变得很陌生：&quot;道路和隧道突然被堵塞，旅客担心香港还是否安全，不愿来港旅游和经商……大家都很焦急，希望可以尽快走出目前的困局。&quot;</p><p>接着她逐一回应了&quot;五大诉求&quot;：&quot;有关撤回条例草案，我在5月15日已经宣布暂缓条例草案，之后亦表明，修例工作已经完全停止，修例草案明年7月便会自动失效。&quot;</p><p>她接着提到第二点，成立独立调查委员，表示香港政府认为有关警方执法行动，应该按既定机制，交由专责的独立监警会处理，而不应该另设独立调查委员会。监警会除了处理有关警方的投诉，亦正按照其法定职权，详细审视6月9日开始发生的一连串大型公众活动，评估警方的处理。元朗袭击事件就是重点之一。调查报告的内容和建议都会公开。</p><p>关于第三点示威活动定性，这位香港特首强调已多次重申：法律程序上不存在&quot;暴动定性&quot;：&quot;律政司指出，每宗案件的刑事检控决定，都是按照证据、法律、按照《检控守则》作出。&quot;至于第四点，要求释放所有被捕人士，不检控、不追究违法的人：&quot;这些要求是法治社会所不能接受。&quot;林郑接着补充说：&quot;根据《基本法》，律政司的刑事检控决定，必须不受任何干涉，否则有违香港的法治精神。&quot;</p><p>最后有关双普选，她指出，这是《基本法》订下的最终目标：&quot;要实现这个目标，社会需要在法理的基础上，在平和及互信的氛围下，以务实的态度进行讨论，否则只会令社会更加撕裂。&quot;</p><blockquote><p>当日晚大陆这边的媒体风平浪静，新浪的网站倒是有报道，但是很快就404了。</p><p>5日各个大陆各个主流媒体开始报道</p></blockquote><p>本周香港的一些其他新闻：</p><ul><li><a href="https://www.dw.com/zh/立陶宛外交部召见中国大使-指责干扰示威/a-50261568?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">本周一，立陶宛外交部召见了中国驻立陶宛大使。</a>立陶宛方面指责中国使馆工作人员干涉了8月23日在首都维尔纽斯举行的支持香港民主的示威集会。</li><li><a href="https://www.dw.com/zh/學子罢课各界罢工-限港府兩週回應/a-50255049?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">香港示威者在9月2日發起第二回「三罷」行動，並且會持續更久</a>。</li><li><a href="https://www.rfa.org/cantonese/news/htm/hk-lam-09022019131527.html" target="_blank" rel="noopener">路透社流出一段林郑月娥在非公开场合的录音，包含“如果有选择，我第一件事就是辞职，并深刻道歉”这样的内容</a>。林郑后续回应：<a href="https://news.ifeng.com/c/7pfAOrKymxs" target="_blank" rel="noopener">我从未向中央提过辞职</a>。</li><li><a href="https://news.ifeng.com/c/7pf4ElgFwDg" target="_blank" rel="noopener">黄之锋活保释，今明赴台</a>。</li><li><a href="https://cn.reuters.com/article/xinhua-fedex-hk-knife-0903-idCNKCS1VO15Z?feedType=RSS&amp;feedName=CNTopGenNews" target="_blank" rel="noopener">联邦快递涉嫌非法收寄寄往香港的管制刀具</a>，涉案物品已被中国有关部门暂扣，相关调查正在进行之中。之前联邦快递分别在<a href="https://cn.reuters.com/article/us-fedex-china-fujian-gun-package-0818-idCNKCS1V80CP?feedType=RSS&amp;feedName=CNTopGenNews" target="_blank" rel="noopener">中国大陆</a>和<a href="http://news.dwnews.com/hongkong/news/2019-08-20/60145944.html" target="_blank" rel="noopener">香港</a>都被发现寄送强制。</li><li><a href="https://www.dw.com/zh/林郑月娥传将撤回《逃犯条例》草案/a-50280633?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">传言林郑将撤回《逃犯条例》</a></li><li><a href="https://www.dw.com/zh/国泰-地震-再有高层离职/a-50284567?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">国泰航空董事局主席史乐山辞任。</a></li><li><a href="https://news.ifeng.com/c/7piIiQQ1oG0" target="_blank" rel="noopener">9月5日，黎智英寓所被投掷汽油弹</a></li><li><a href="https://www.youtube.com/watch?v=RAKuP3SgXIs" target="_blank" rel="noopener">香港部分警员受邀参加国庆庆典</a></li><li><a href="https://www.dw.com/zh/惠誉降低香港评级-金融重镇前景堪忧/a-50326868?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">惠誉(Fitch Ratings)降低香港评级</a>，理由是机构认为，尽管“一国两制”框架预计保持完好，但香港进一步融入中国治理体系将带来更大挑战。</li><li><a href="https://news.ifeng.com/c/7pleNWqpHEn" target="_blank" rel="noopener">在林郑宣布撤回《逃犯条例》以后，香港的示威运动仍未停止。9月6日晚有示威者强闯港铁太子站，破坏站内设施；另有一批示威者围堵警署、阻碍交通，期间有示威者破坏交通设施，甚至在街头多处纵火。</a></li></ul><h3 id="国泰航空发现飞机氧气瓶被排气"><a href="http://m.ce.cn/sh/sgg/201908/31/t20190831_33058881.shtml" target="_blank" rel="noopener">国泰航空发现飞机氧气瓶被排气</a></h3><p><img src="https://imgs.codewoody.com/uploads/big/b16e5756f50f1d2b2f013498f1f594eb.png"></p><p>据香港《南华早报》消息，30日，又有一架香港国泰航空客机的氧气瓶遭排气放空，这是继27日后第三架陷入“氧气被排空”风波客机。处在舆风口浪尖的国泰航空再曝丑闻，引发外界广泛质疑。</p><p>香港《南华早报》31日报道称，30日，国泰航空A330 B-LBI客机在起飞前例行检查时发现氧气瓶遭排空。该客机前一天晚上由巴厘岛飞抵香港，航空检查显示所有氧气瓶均正常，但第二天起飞前往吉隆坡前检查时发现，其中一个氧气瓶遭排空。A330客机上共有16个氧气瓶，被排气放空的是左手边第一个门上的氧气瓶。</p><p>事发后，国泰航空发言人表示非常重视该事件，已成立内部调查委员会，并向香港民航处和警方通报了事件，强调事关安全不容妥协。“在任何情况下，机组人员和乘客的安全都不会受到影响。</p><blockquote><p>国泰在本轮香港运动浪潮中由于支持示威者一边，早到大陆方面的打压。继之前两名高管辞职之后，本周<a href="https://www.dw.com/zh/%E5%9B%BD%E6%B3%B0-%E5%9C%B0%E9%9C%87-%E5%86%8D%E6%9C%89%E9%AB%98%E5%B1%82%E7%A6%BB%E8%81%8C/a-50284567?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">国泰航空董事局主席史乐山辞任</a>。</p></blockquote><h3 id="猪肉价格大涨"><a href="https://news.ifeng.com/c/7peWq3UGCFq" target="_blank" rel="noopener">猪肉价格大涨</a></h3><p>8月的第二周，猪肉价格同比上涨了46.8%，部分地区出厂价格就达到32.61元/每公斤高位；生猪存栏量却同比下降32%，创下20年来的最低水平。</p><p><img src="https://imgs.codewoody.com/uploads/big/d785574de154a3db84cc6e7d441806e1.jpeg"></p><p>8月30日，国务院副总理胡春华召开了全国稳定生猪生产和猪肉保供稳价电视电话会议，要求采取切实措施解决群众吃肉问题。 可以说，这次猪价波动，直接原因和非洲猪瘟影响有关，但深层次的原因可能更为复杂，它涉及到农业生产经营方式、环保、土地等综合因素。</p><h3 id="北洋舰队旗舰定远舰找到了"><a href="https://news.ifeng.com/c/7pe610pt2Yq" target="_blank" rel="noopener">北洋舰队旗舰定远舰找到了</a></h3><p>9月2日报道，“威海湾一号甲午沉舰遗址保护区域划定论证会”当天在山东威海刘公岛上举行。经专家论证，历经两个月的水下考古调查，现已基本确认清代北洋海军旗舰“定远舰”的沉灭位置，并出水一批沉舰遗物，这是2014年以来北洋甲午沉舰系列调查与研究工作的又一重大成果。</p><p><img src="https://imgs.codewoody.com/uploads/big/644a6711cbad08a02c08be1424cc96e9.jpeg"></p><h3 id="弄丢共享单车被告企业索赔2.55万"><a href="https://www.williamlong.info/archives/5816.html" target="_blank" rel="noopener">弄丢共享单车被告，企业索赔2.55万</a></h3><p>2018年5月18日，福建泉州的刘先生借了一辆共享单车，因未正确归还导致车辆丢失。2019年7月31日，共享单车运营公司起诉刘先生，要求支付2.55万元租车费。8月24日，刘先生主动赔偿车辆遗失费用1800元后，双方和解，公司已向法院申请撤诉。</p><h3 id="北斗卫星的数量超过gps"><a href="http://www.sohu.com/a/335544302_759851" target="_blank" rel="noopener">北斗卫星的数量超过GPS</a></h3><p><img src="https://imgs.codewoody.com/uploads/big/21c9fec9eb982e0619a5279f5d3667fd.jpg"></p><p>2018年，中国发射了18颗北斗导航卫星。目前，一共有35颗北斗卫星在运行，而美国的 GPS 卫星只有31颗，欧盟的伽利略系统22颗，俄罗斯的 GLONASS 系统24颗。另外，日本（4颗）和印度（6颗）的系统只限于本国可用。</p><p>全世界195个国家和地区中的130个（多是一带一路沿线国家），接收到的北斗卫星要多于 GPS 卫星。这使得在这些国家，使用北斗定位会信号更强，定位更快速。上图中，深蓝的区域是北斗占优，红色的区域是 GPS 占优。下图是主要国家的北斗和 GPS 的对比。</p><p><img src="https://imgs.codewoody.com/uploads/big/38014c790c19edf9f546c2ae1109a41b.jpg"></p><h3 id="执政37年的津巴布韦前总统穆加贝去世"><a href="https://www.dw.com/zh/执政37年-津巴布韦前总统穆加贝去世/a-50323460?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">执政37年的津巴布韦前总统穆加贝去世</a></h3><p>前津巴布韦长年总统罗伯特·穆加贝（Robert Mugabe）逝世，终年95岁。这是该国现总统埃默森·姆南加古瓦（Emmerson Mnangagwa）通过推特宣布的。今年4月起，穆加贝一直在新加坡一家医院接受治疗。</p><figure><img src="https://imgs.codewoody.com/uploads/big/a684b2467f7c50d76469a21dde6bbaf6.jpg" alt="穆加贝"><figcaption>穆加贝</figcaption></figure><h3 id="中美关系">中美关系</h3><ul><li><a href="https://www.dw.com/zh/美国波兰签5g合作协议/a-50261559?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">美国和波兰周一签署了5G技术合作的协议</a>。</li><li><a href="https://news.ifeng.com/c/7pe67ONumO0" target="_blank" rel="noopener">美对3000亿美元中国产品加税 中国向WTO起诉</a>: 9月1日，美国对华3000亿美元输美产品中第一批加征15%关税措施正式实施，我就此在世贸组织争端解决机制下提起诉讼。美方的征税措施严重违背中美两国元首大阪会晤共识，中方强烈不满和坚决反对。中方将根据世贸组织相关规则，坚定维护自身合法权益，坚决捍卫多边贸易体系和国际贸易秩序。</li><li><a href="https://www.dw.com/zh/中国、墨西哥倾销预制结构钢-美将加征新关税/a-50293411?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">美国初步认定中国有补贴与倾销嫌疑，宣布将对其出口的「预制结构钢」课征关税。</a></li><li><a href="https://news.ifeng.com/c/7piQewRc3Zw" target="_blank" rel="noopener">中美经贸高级别磋商双方牵头人通话：10月初举行第十三轮磋商</a>: 9月5日上午，中共中央政治局委员、国务院副总理、中美全面经济对话中方牵头人刘鹤应约与美国贸易代表莱特希泽、财政部长姆努钦通话。商务部部长钟山、中国人民银行行长易纲、国家发改委副主任宁吉喆等参加通话。</li></ul><h3 id="科技新闻">科技新闻</h3><h4 id="罗技推出-mx-master-3-鼠标和-mx-keys-无线键盘"><a href="https://blog.logitech.com/2019/09/03/logitech-re-invents-its-wheel-to-deliver-the-ultimate-experience-for-productivity/" target="_blank" rel="noopener">罗技推出 MX Master 3 鼠标和 MX Keys 无线键盘</a></h4><p><img src="https://imgs.codewoody.com/uploads/big/4b6164584080f6f297a3bf08eff3d928.png"></p><p>9 月 4 日，罗技推出了 MX Master 系列的最新一代产品 MX Master 3。新款采用 USB-C 接口，并使用新的电磁系统取代了机械滚轮，滑动更加顺滑静音。罗技微调了拇指按键和第二滚轮的设计，前进 / 后退按钮从轮后移到了下方。MX Master 3 沿用了 4000 DPI 的传感器，支持蓝牙或罗技 Unifying USB 接收器，电池续航约为 70 天。</p><p>另外罗技还同步推出了新款 MX Keys 无线键盘，功能类似 Craft Keyboard，支持背光，但取消了滚轮设计。MX Keys 支持通过 USB-C、蓝牙和罗技 Unifying 接收器连接，兼容 Windows、macOS、iOS、Android 平台。MX Master 3 和 MX Keys 售价均为 899 元，暂未公布国行具体上市时间。</p><h4 id="新浪推出的绿洲app图标涉嫌抄袭">新浪推出的「绿洲」APP图标涉嫌抄袭</h4><p><img src="https://imgs.codewoody.com/uploads/big/e634bcc99aacb65fced7030d4a5102a0.png"></p><h4 id="usb-4-发布">USB 4 发布</h4><p><img src="https://imgs.codewoody.com/uploads/big/1716f23699f23a17b811af1398156fb3.jpg"></p><p>AppleInsider 消息，在 3 月份 USB Promoter Group 首次发布了 USB 4 规范后，昨天最终的 USB 4 规范标准正式发布。</p><p>USB4 将支持 40Gb/s 数据传输，是 USB 3 最新版本速度的两倍，同时向后兼容 USB 3.2、USB 2.0、雷雳 3 接口。USB4 将使用与 USB 3 相同的 USB-C 连接器，这意味着厂商不需要推出新的 USB4 接口类型。它还可以提供最高达 100W 的电源功率，还可以外接显卡、两台 4K 显示器或 1 台 5K 显示器等。</p><p>USB4 标准已经完成，预计搭载 USB4 规范的零售产品最早将会在 2020 年底上市。</p><h4 id="其他">其他</h4><ul><li><a href="https://www.engadget.com/2019/08/23/disney-plus-first-look-user-profiles-d23-expo/" target="_blank" rel="noopener">迪斯尼公司定于11月12日，推出自己的视频订阅服务</a></li><li><a href="http://www.huxiu.com/article/316858.html?f=wangzhan" target="_blank" rel="noopener">阿里投资网易云音乐</a></li><li><a href="https://www.zhihu.com/question/280402448/answer/814992592" target="_blank" rel="noopener">保时捷推出旗下第一款全电动汽车Taycan</a>这个名字的寓意为“年轻活泼的骏马”，也代表了保时捷的企业文化。之前这款Taycan的开发代号名叫MissionE，拥有482公里行驶里程，动力超过600马力，百公里加速时间仅为3.5秒。Taycan被视作是特斯拉ModelS最直接的竞争对手，两款电动汽车都具有非常顶级的性能。特斯拉ModelS的续航距离为540公里，百公里加速时间为2.5秒。<a href="https://www.zhihu.com/question/280402448/answer/783052501" target="_blank" rel="noopener">这篇文章有不错的介绍</a>。</li></ul><h3 id="其他新闻">其他新闻</h3><ul><li><a href="https://www.zhihu.com/question/344072428" target="_blank" rel="noopener">男篮世界杯，中国男篮加时76:79不敌波兰</a>，周琦各种失误，被网友骂惨了</li><li><a href="https://www.zhihu.com/pin/1152699749277736960" target="_blank" rel="noopener">男篮世界杯中国不敌委内瑞拉遭淘汰</a></li><li><a href="https://mp.weixin.qq.com/s/r8hAC_92IviEdu43Wv4V0g" target="_blank" rel="noopener">天安门广场9月7日18时至8日10时暂停对外开放</a>: 记者从天安门地区管理委员会获悉，根据北京市庆祝中华人民共和国成立70周年活动筹备工作统一部署安排，天安门广场于2019年9月7日18时至9月8日10时暂停对外开放（届时，将根据广场实际情况适时恢复对外开放）。</li><li><a href="https://www.zhihu.com/question/343594485/answer/808486907" target="_blank" rel="noopener">8月30日 特斯拉进入免购置税车辆名单</a>。</li><li><a href="https://www.ifanr.com/1255546?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=" target="_blank" rel="noopener">三大运营商开始陆续停售4G无限流量套餐</a></li><li><a href="https://www.dw.com/zh/约翰逊威胁提前大选/a-50273487?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">英国首相威胁提前进行大选</a></li><li><a href="https://cn.reuters.com/article/britain-eu-bill-result-0904-wedn-idCNKCS1VQ026?feedType=RSS&amp;feedName=CNTopGenNews" target="_blank" rel="noopener">英国议员周三批准了一项旨在防止英国首相约翰逊政府在没有达成协议的情况下带领英国退出欧盟的法案。</a></li><li><a href="http://world.huanqiu.com/article/2019-09/15401002.html?agt=15422" target="_blank" rel="noopener">韩国决定尽快收回26处驻韩美军极地</a></li><li><a href="https://www.zhihu.com/question/344416928" target="_blank" rel="noopener">《黑猫警长》导演戴铁郎先生去世</a></li><li><a href="https://www.dw.com/zh/加拿大任命新驻华大使-商界很高兴/a-50306699?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">加拿大任命新的驻华大使</a>: 在中加关系紧张的背景下，渥太华任命曾多年在麦肯锡咨询公司工作的商界人士巴顿为新的驻华大使，填补了这个自今年1月以来一直空缺的职位。</li><li><a href="https://www.williamlong.info/archives/5818.html" target="_blank" rel="noopener">Facebook数亿用户电话号码曝光</a></li><li><a href="https://www.dw.com/zh/特朗普中断与塔利班和谈/a-50343895?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">特朗普中断和塔利班的和谈</a>，作为对喀布尔最新爆炸袭击事件的反应。</li><li><a href="https://www.zhihu.com/question/344952992" target="_blank" rel="noopener">DC漫改电影《小丑》获得金狮奖</a>，这是影史首个三大最高奖给漫改电影。</li></ul><h2 id="言论与文章">言论与文章</h2><ul><li>虽然很政治不正确，但是很高级黑：</li></ul><p><img src="https://imgs.codewoody.com/uploads/big/953d6e7f0b44fe0a830a540029dd117d.png"></p><ul><li><a href="https://itsfoss.com/apt-vs-apt-get-difference/" target="_blank" rel="noopener">apt和apt-get的区别</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/tNvzooU-wr0&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;
&lt;/iframe&gt;
    
    </summary>
    
      <category term="Weekly" scheme="http://www.codewoody.com/categories/Weekly/"/>
    
    
      <category term="杂谈" scheme="http://www.codewoody.com/tags/%E6%9D%82%E8%B0%88/"/>
    
      <category term="科技新闻" scheme="http://www.codewoody.com/tags/%E7%A7%91%E6%8A%80%E6%96%B0%E9%97%BB/"/>
    
      <category term="转载" scheme="http://www.codewoody.com/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="Weekly" scheme="http://www.codewoody.com/tags/Weekly/"/>
    
  </entry>
  
  <entry>
    <title>旧文迁移|Django部署:Nginx+Gunicorn+virtualenv+supervisor+PostgreSQL</title>
    <link href="http://www.codewoody.com/posts/34441/"/>
    <id>http://www.codewoody.com/posts/34441/</id>
    <published>2019-08-30T03:06:37.000Z</published>
    <updated>2019-09-01T14:33:01.587Z</updated>
    
    <content type="html"><![CDATA[<p>Django是最受欢迎的基于Python的web框架之一，也非常适合新手入门。虽然Django为我们提供了一个用于测试的轻量级server，但这个server不能用于实际生产环境的部署。最早的Django的部署方法推荐的是Apache+mod_wsgi。演化到现在，django的部署方法也变得越来越弹性、有效，也更加的复杂了。在下面的教程中我们需要使用下面的这些工具：</p><ul><li>Nginx</li><li>Gunicorn</li><li>virtualenv</li><li>supervisor</li><li>PostgreSQL</li></ul><a id="more"></a><h4 id="前期准备">前期准备</h4><p>你需要一个你拥有root权限的server。下面的教程是基于Debian 7，所有相同的步骤对于Ubuntu和其他的基于Debian的发行版都是适用的。</p><h4 id="更新系统">更新系统</h4><p>首先确保系统处于最新的状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo aptitude update</span><br><span class="line">$ sudo aptitude upgrade</span><br></pre></td></tr></table></figure><h4 id="postgresql">PostgreSQL</h4><p>为基于Debian的系统安装PostgreSQL，你只需要运行下面这个命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo aptitude install postgresql postgresql-contrib</span><br></pre></td></tr></table></figure><p>完成安装以后为我们的django应用创建一个用户和一个数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ sudo su - postgres </span><br><span class="line">postgres@django:~$ createuser --interactive -P </span><br><span class="line">Enter name of role to add: hello_django </span><br><span class="line">Enter password <span class="keyword">for</span> new role: </span><br><span class="line">Enter it again: Shall the new role be a superuser? (y/n) n </span><br><span class="line">Shall the new role be allowed to create databases? (y/n) n </span><br><span class="line">Shall the new role be allowed to create more new roles? (y/n) n postgres@django:~$ </span><br><span class="line"></span><br><span class="line">postgres@django:~$ createdb --owner hello_django hello </span><br><span class="line">postgres@django:~$ <span class="built_in">logout</span> $</span><br></pre></td></tr></table></figure><h4 id="创建一个运行账户">创建一个运行账户</h4><p>为了避免万一web应用被攻击以后带来不受控制的后果，我们一般会单独为web应用创建一个权限受限的用户来运行这个web应用。例如我们这里为我们的django应用创建一个名为<code>hello</code>的用户，并将其归入<code>webapps</code>这个组。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo groupadd --system webapps</span><br><span class="line">$ sudo useradd --system --gid webapps --shell /bin/bash --home /webapps/hello_django hello</span><br></pre></td></tr></table></figure><h4 id="virtualenv">virtualenv</h4><p>Virtualenv是一个Python虚拟环境管理的工具，所谓虚拟环境就是讲你Web应用所需要的python环境从系统的python环境中独立出来，这使得你可以在不同的应用中使用不同版本的第三方库。</p><p>用下面的命令来在Debian上安装Virtualenv</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo aptitude install python-virtualenv</span><br></pre></td></tr></table></figure><h5 id="为你的django应用创建一个python环境">为你的Django应用创建一个python环境</h5><p>这里我将django应用放在了<code>/webapps</code>这个路径下面，如果你偏好<code>/var/www</code>, <code>srv</code>或者其他的路径也可以。首先在这个目录下面创建<code>/webapps/hello_django/</code>文件夹来存储应用，并将这个文件夹的owner设置为上面我们创建的运行账户<code>hello</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo mkdir -p /webapps/hello_django/</span><br><span class="line">$ sudo chown hello /webapps/hello_django/</span><br></pre></td></tr></table></figure><p>切换到<code>hello</code>用户并创建虚拟环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ sudo su - hello</span><br><span class="line">hello@django:~$ <span class="built_in">cd</span> /webapps/hello_django/</span><br><span class="line">hello@django:~$ virtualenv .</span><br><span class="line"></span><br><span class="line">New python executable <span class="keyword">in</span> hello_django/bin/python</span><br><span class="line">Installing distribute..............done.</span><br><span class="line">Installing pip.....................done. </span><br><span class="line">hello@django:~$ <span class="built_in">source</span> bin/activate </span><br><span class="line">(hello_django)hello@django:~$</span><br></pre></td></tr></table></figure><p>现在虚拟环境就被激活了，我们可以将django安装到这个虚拟环境里面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Downloading/unpacking django </span><br><span class="line">(...) </span><br><span class="line">Installing collected packages: django </span><br><span class="line">(...)</span><br><span class="line">Successfully installed django </span><br><span class="line">Cleaning up...</span><br></pre></td></tr></table></figure><p>完成django的安装以后我们来创建一个空的django项目</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(hello_django)hello@django:~$ django-admin.py startproject hello</span><br></pre></td></tr></table></figure><p>你可以通过启动测试服务器来测试是否一切正常</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(hello_django)hello@django:~$ <span class="built_in">cd</span> hello </span><br><span class="line">(hello_django)hello@django:~$ python manage.py runserver example.com:8000 </span><br><span class="line">Validating models... </span><br><span class="line"></span><br><span class="line">0 errors found </span><br><span class="line">June 09, 2013 - 06:12:00 Django version 1.5.1, using settings <span class="string">'hello.settings'</span> </span><br><span class="line">Development server is running at http://example.com:8000/ </span><br><span class="line">Quit the server with CONTROL-C.</span><br></pre></td></tr></table></figure><p>现在你可以通过<a href="http://example.com:8000" target="_blank" rel="noopener">http://example.com:8000</a>来访问了。</p><h4 id="为django配置postgresql">为Django配置PostgreSQL</h4><p>Django默认的新工程使用的是SQLite3作为数据库的，这个数据库的性能不足以支持生产环境下的数据库应用。我们这里采用PostgreSQL来做为我们的Django项目的数据库。为了让Django能够使用PostgreSQL，我们需要将<code>psycopg2</code>安装到虚拟环境。首先安装这个包的依赖项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">libpq-dev</span><br></pre></td></tr></table></figure><p>然后通过pip来安装的<code>psycopg2</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(hello_django)hello@django:~$ pip install psycopg2</span><br></pre></td></tr></table></figure><p>现在可以将Django的数据库设置修改为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">DATABASES = &#123; </span><br><span class="line">    <span class="string">'default'</span>: &#123; </span><br><span class="line">        <span class="string">'ENGINE'</span>: <span class="string">'django.db.backends.postgresql_psycopg2'</span>, </span><br><span class="line">        <span class="string">'NAME'</span>: <span class="string">'hello'</span>, </span><br><span class="line">        <span class="string">'USER'</span>: <span class="string">'hello_django'</span>, </span><br><span class="line">        <span class="string">'PASSWORD'</span>: <span class="string">'Your password'</span>, </span><br><span class="line">        <span class="string">'HOST'</span>: <span class="string">'localhost'</span>, </span><br><span class="line">        <span class="string">'PORT'</span>: <span class="string">''</span>, <span class="comment"># Set to empty string for default. </span></span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后向向Postgres应用你的Django设置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(hello_django)hello@django:~$ python manage.py migrate</span><br></pre></td></tr></table></figure><h4 id="gunicorn">Gunicorn</h4><p>在实际生产环境中我们不会使用Django的单线程开发服务器。这里我们使用<a href="http://gunicorn.org/" target="_blank" rel="noopener">Gunicorn</a>.</p><p>通过pip来安装Gunicorn</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(hello_django)hello@django:~$ pip install gunicorn</span><br></pre></td></tr></table></figure><p>安装好以后你可以尝试用Gunicorn来运行Django了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(hello_django)hello@django:~$ gunicorn hello.wsgi:application --<span class="built_in">bind</span> example.com:8001</span><br></pre></td></tr></table></figure><p>上面的命令是一个简单的测试，为了真正在生产环境下使用Gunicorn，我们还需要增加一些配置。我们把这些配置文件写成一个bash脚本，保存为bin/gunicorn_start</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"> </span><br><span class="line">NAME=<span class="string">"hello_app"</span> <span class="comment"># Name of the application</span></span><br><span class="line">DJANGODIR=/webapps/hello_django/hello <span class="comment"># Django project directory</span></span><br><span class="line">SOCKFILE=/webapps/hello_django/run/gunicorn.sock <span class="comment"># we will communicte using this unix socket</span></span><br><span class="line">USER=hello <span class="comment"># the user to run as</span></span><br><span class="line">GROUP=webapps <span class="comment"># the group to run as</span></span><br><span class="line">NUM_WORKERS=3 <span class="comment"># how many worker processes should Gunicorn spawn</span></span><br><span class="line">DJANGO_SETTINGS_MODULE=hello.settings <span class="comment"># which settings file should Django use</span></span><br><span class="line">DJANGO_WSGI_MODULE=hello.wsgi <span class="comment"># WSGI module name</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Starting <span class="variable">$NAME</span> as `whoami`"</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Activate the virtual environment</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$DJANGODIR</span></span><br><span class="line"><span class="built_in">source</span> ../bin/activate</span><br><span class="line"><span class="built_in">export</span> DJANGO_SETTINGS_MODULE=<span class="variable">$DJANGO_SETTINGS_MODULE</span></span><br><span class="line"><span class="built_in">export</span> PYTHONPATH=<span class="variable">$DJANGODIR</span>:<span class="variable">$PYTHONPATH</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Create the run directory if it doesn't exist</span></span><br><span class="line">RUNDIR=$(dirname <span class="variable">$SOCKFILE</span>)</span><br><span class="line"><span class="built_in">test</span> -d <span class="variable">$RUNDIR</span> || mkdir -p <span class="variable">$RUNDIR</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Start your Django Unicorn</span></span><br><span class="line"><span class="comment"># Programs meant to be run under supervisor should not daemonize themselves (do not use --daemon)</span></span><br><span class="line"><span class="built_in">exec</span> ../bin/gunicorn <span class="variable">$&#123;DJANGO_WSGI_MODULE&#125;</span>:application \</span><br><span class="line">--name <span class="variable">$NAME</span> \</span><br><span class="line">--workers <span class="variable">$NUM_WORKERS</span> \</span><br><span class="line">--user=<span class="variable">$USER</span> --group=<span class="variable">$GROUP</span> \</span><br><span class="line">--<span class="built_in">bind</span>=unix:<span class="variable">$SOCKFILE</span> \</span><br><span class="line">--<span class="built_in">log</span>-level=debug \</span><br><span class="line">--<span class="built_in">log</span>-file=-</span><br></pre></td></tr></table></figure><p>将这个文件改成可执行模式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo chmod u+x bin/gunicorn_start</span><br></pre></td></tr></table></figure><p>下面你可以尝试运行这个脚本了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo su - hello hello@django:~$ bin/gunicorn_start Starting hello_app as hello 2013-06-09 14:21:45 [10724] [INFO] Starting gunicorn 18.0 2013-06-09 14:21:45 [10724] [DEBUG] Arbiter booted 2013-06-09 14:21:45 [10724] [INFO] Listening at: unix:/webapps/hello_django/run/gunicorn.sock (10724) 2013-06-09 14:21:45 [10724] [INFO] Using worker: sync 2013-06-09 14:21:45 [10735] [INFO] Booting worker with pid: 10735 2013-06-09 14:21:45 [10736] [INFO] Booting worker with pid: 10736 2013-06-09 14:21:45 [10737] [INFO] Booting worker with pid: 10737 ^C (CONTROL-C to <span class="built_in">kill</span> Gunicorn) 2013-06-09 14:21:48 [10736] [INFO] Worker exiting (pid: 10736) 2013-06-09 14:21:48 [10735] [INFO] Worker exiting (pid: 10735) 2013-06-09 14:21:48 [10724] [INFO] Handling signal: int 2013-06-09 14:21:48 [10737] [INFO] Worker exiting (pid: 10737) 2013-06-09 14:21:48 [10724] [INFO] Shutting down: Master $ <span class="built_in">exit</span></span><br></pre></td></tr></table></figure><p>注意，如果你在上面的过程中设置了自定义的参数的话，需要将<code>gunicorn_start</code>脚本中对应的参数改过来。其中，worker的数量推荐设置为2 * CPUs + 1，这样的话，在任何时候都有一半的worker在做IO。</p><h4 id="supervisor">Supervisor</h4><p>Superviosr是一个进程监管的工具。简而言之，Superviosr可以保证你的程序在服务器开机时自动启动以及程序意外终止时重新启动。通过下面的命令即可安装:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo aptitude install supervisor</span><br></pre></td></tr></table></figure><p>Superviosr通过配置文件来设置被监管的程序。一般配置文件都放置在<code>/etc/supervisor/conf.d</code>路径下面。此处我们创建一个名为<code>hello.conf</code>的配置文件，内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[program:hello]</span><br><span class="line"><span class="built_in">command</span> = /webapps/hello_django/bin/gunicorn_start ; Command to start app</span><br><span class="line">user = hello ; User to run as</span><br><span class="line">stdout_logfile = /webapps/hello_django/logs/gunicorn_supervisor.log ; Where to write <span class="built_in">log</span> messages</span><br><span class="line">redirect_stderr = <span class="literal">true</span> ; Save stderr <span class="keyword">in</span> the same <span class="built_in">log</span></span><br><span class="line">environment=LANG=en_US.UTF-8,LC_ALL=en_US.UTF-8 ; Set UTF-8 as default encoding</span><br></pre></td></tr></table></figure><p>你可以参考<a href="http://supervisord.org/configuration.html#program-x-section-settings" target="_blank" rel="noopener">其他设置</a>，不过上面的设置一般情况下应该足够了。</p><p>日志文件需要我们手动创建一下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hello@django:~$ mkdir -p /webapps/hello_django/logs/ hello@django:~$ touch /webapps/hello_django/logs/gunicorn_supervisor.log</span><br></pre></td></tr></table></figure><p>设置好上面的文件以后，我们可以通过<code>supervisorctl</code>工具来启用这些设置了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ sudo supervisorctl reread </span><br><span class="line">hello: available </span><br><span class="line">$ sudo supervisorctl update </span><br><span class="line">hello: added process group</span><br></pre></td></tr></table></figure><p>现在你可以start，stop或者restart你的进程了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ sudo supervisorctl status hello hello RUNNING pid 18020, uptime 0:00:50 </span><br><span class="line">$ sudo supervisorctl stop hello </span><br><span class="line">hello: stopped </span><br><span class="line">$ sudo supervisorctl start hello </span><br><span class="line">hello: started </span><br><span class="line">$ sudo supervisorctl restart hello </span><br><span class="line">hello: stopped </span><br><span class="line">hello: started</span><br></pre></td></tr></table></figure><h4 id="nginx">Nginx</h4><p>安装Nginx同样非常简单：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo aptitude install nginx </span><br><span class="line">$ sudo service nginx start</span><br></pre></td></tr></table></figure><p>此时你访问server(<a href="http://example.com" target="_blank" rel="noopener">http://example.com</a>)就应该可以看见Nginx的欢迎页面了(&quot;Welcome to nginx&quot;)</p><h5 id="为django创建一个虚拟server配置">为Django创建一个虚拟server配置</h5><p>每个Nginx的虚拟server都由<code>/etc/nginx/sites-available</code>路径下的一个配置文件来表示。而将其链接到的<code>/etc/nginx/sites-enabled</code>路径下则可以启用对应的站点。</p><p>为我们的Django应用创建一个配置文件<code>/etc/nginx/sites-available/hello</code>. 文件内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">upstream hello_app_server &#123;</span><br><span class="line"><span class="comment"># fail_timeout=0 means we always retry an upstream even if it failed</span></span><br><span class="line"><span class="comment"># to return a good HTTP response (in case the Unicorn master nukes a</span></span><br><span class="line"><span class="comment"># single worker for timing out).</span></span><br><span class="line"> </span><br><span class="line">server unix:/webapps/hello_django/run/gunicorn.sock fail_timeout=0;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">server &#123;</span><br><span class="line"> </span><br><span class="line">listen 80;</span><br><span class="line">server_name example.com;</span><br><span class="line"> </span><br><span class="line">client_max_body_size 4G;</span><br><span class="line"> </span><br><span class="line">access_log /webapps/hello_django/logs/nginx-access.log;</span><br><span class="line">error_log /webapps/hello_django/logs/nginx-error.log;</span><br><span class="line"></span><br><span class="line">location /static/ &#123;</span><br><span class="line"><span class="built_in">alias</span> /webapps/hello_django/static/;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location /media/ &#123;</span><br><span class="line"><span class="built_in">alias</span> /webapps/hello_django/media/;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">location / &#123;</span><br><span class="line"><span class="comment"># an HTTP header important enough to have its own Wikipedia entry:</span></span><br><span class="line"><span class="comment"># http://en.wikipedia.org/wiki/X-Forwarded-For</span></span><br><span class="line">proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># enable this if and only if you use HTTPS, this helps Rack</span></span><br><span class="line"><span class="comment"># set the proper protocol for doing redirects:</span></span><br><span class="line"><span class="comment"># proxy_set_header X-Forwarded-Proto https;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># pass the Host: header from the client right along so redirects</span></span><br><span class="line"><span class="comment"># can be set properly within the Rack application</span></span><br><span class="line">proxy_set_header Host <span class="variable">$http_host</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># we don't want nginx trying to do something clever with</span></span><br><span class="line"><span class="comment"># redirects, we set the Host: header above already.</span></span><br><span class="line">proxy_redirect off;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># set "proxy_buffering off" *only* for Rainbows! when doing</span></span><br><span class="line"><span class="comment"># Comet/long-poll stuff. It's also safe to set if you're</span></span><br><span class="line"><span class="comment"># using only serving fast clients with Unicorn + nginx.</span></span><br><span class="line"><span class="comment"># Otherwise you _want_ nginx to buffer responses to slow</span></span><br><span class="line"><span class="comment"># clients, really.</span></span><br><span class="line"><span class="comment"># proxy_buffering off;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Try to serve static files from nginx, no point in making an</span></span><br><span class="line"><span class="comment"># *application* server like Unicorn/Rainbows! serve static files.</span></span><br><span class="line"><span class="keyword">if</span> (!-f <span class="variable">$request_filename</span>) &#123;</span><br><span class="line">proxy_pass http://hello_app_server;</span><br><span class="line"><span class="built_in">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># Error pages</span></span><br><span class="line">error_page 500 502 503 504 /500.html;</span><br><span class="line">location = /500.html &#123;</span><br><span class="line">root /webapps/hello_django/static/;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将这个文件链接到<code>site-enabled</code>文件夹下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo ln -s /etc/nginx/sites-available/hello /etc/nginx/sites-enabled/hello</span><br></pre></td></tr></table></figure><p>然后重启nginx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo service nginx restart</span><br></pre></td></tr></table></figure><p>现在你再访问<a href="http://example.com" target="_blank" rel="noopener">http://example.com</a>看到的就应该不是nginx的欢迎页面，而是Django的欢迎页面了。</p><p>至此配置就全部完成了，最终项目的整个结构应该如下所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">/webapps/hello_django/ </span><br><span class="line">├── bin &lt;= Directory created by virtualenv </span><br><span class="line">│ ├── activate &lt;= Environment activation script</span><br><span class="line">│ ├── django-admin.py </span><br><span class="line">│ ├── gunicorn </span><br><span class="line">│ ├── gunicorn_django </span><br><span class="line">│ ├── gunicorn_start &lt;= Script to start application with Gunicorn </span><br><span class="line">│ └── python </span><br><span class="line">├── hello &lt;= Django project directory, add this to PYTHONPATH </span><br><span class="line">│ ├── manage.py </span><br><span class="line">│ ├── project_application_1 </span><br><span class="line">│ ├── project_application_2 </span><br><span class="line">│ └── hello &lt;= Project settings directory </span><br><span class="line">│ ├── __init__.py </span><br><span class="line">│ ├── settings.py &lt;= hello.settings - settings module Gunicorn will use </span><br><span class="line">│ ├── urls.py </span><br><span class="line">│ └── wsgi.py &lt;= hello.wsgi - WSGI module Gunicorn will use </span><br><span class="line">├── include </span><br><span class="line">│ └── python2.7 -&gt; /usr/include/python2.7 </span><br><span class="line">├── lib </span><br><span class="line">│ └── python2.7 </span><br><span class="line">├── lib64 -&gt; /webapps/hello_django/lib </span><br><span class="line">├── logs &lt;= Application logs directory </span><br><span class="line">│ ├── gunicorn_supervisor.log </span><br><span class="line">│ ├── nginx-access.log </span><br><span class="line">│ └── nginx-error.log </span><br><span class="line">├── media &lt;= User uploaded files folder </span><br><span class="line">├── run </span><br><span class="line">│ └── gunicorn.sock </span><br><span class="line">└── static &lt;= Collect and serve static files from here</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Django是最受欢迎的基于Python的web框架之一，也非常适合新手入门。虽然Django为我们提供了一个用于测试的轻量级server，但这个server不能用于实际生产环境的部署。最早的Django的部署方法推荐的是Apache+mod_wsgi。演化到现在，django的部署方法也变得越来越弹性、有效，也更加的复杂了。在下面的教程中我们需要使用下面的这些工具：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Nginx&lt;/li&gt;
&lt;li&gt;Gunicorn&lt;/li&gt;
&lt;li&gt;virtualenv&lt;/li&gt;
&lt;li&gt;supervisor&lt;/li&gt;
&lt;li&gt;PostgreSQL&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="教程" scheme="http://www.codewoody.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="http://www.codewoody.com/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="python" scheme="http://www.codewoody.com/tags/python/"/>
    
      <category term="Django" scheme="http://www.codewoody.com/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>Weekly-10</title>
    <link href="http://www.codewoody.com/posts/8493/"/>
    <id>http://www.codewoody.com/posts/8493/</id>
    <published>2019-08-26T02:43:35.000Z</published>
    <updated>2019-09-03T03:52:21.898Z</updated>
    
    <content type="html"><![CDATA[<h2 id="新闻">新闻</h2><h3 id="英国女王批准首相约翰逊提出的议会休会请求"><a href="http://www.xinhuanet.com/world/2019-08/29/c_1124934148.htm" target="_blank" rel="noopener">英国女王批准首相约翰逊提出的议会休会请求</a></h3><p>英国女王伊丽莎白二世28日在枢密院会议上批准了首相约翰逊提出的议会休会请求。目前处于夏季休会期的英国议会将于9月3日重新召开。根据约翰逊的请求，伊丽莎白二世批准议会在9月9日至9月12日期间再次开始休会，休会期一直到10月14日。</p><p>约翰逊对议会休会期的新安排引发争议，反对者认为此举是为了阻止议员反对“无协议脱欧”的努力。反对党工党副党魁汤姆·沃森说，此举“完全是公然冒犯我们的民主制度，令人震惊”。</p><p>更多阅读：</p><ul><li><a href="https://www.youtube.com/watch?v=IhNhyeZAjsI&amp;t=5s" target="_blank" rel="noopener">睡前消息：英国首相为脱欧竟暂停议会，三年了，这次能成功吗？</a></li><li><a href="https://www.zhihu.com/question/343282857/answer/808688217" target="_blank" rel="noopener">如何看待英国女王正式批准首相鲍里斯的暂停议会请求？</a>]</li></ul><h3 id="张伟丽成为中国首位ufc冠军">张伟丽成为中国首位UFC冠军</h3><p>北京时间8月31日， UFC格斗之夜深圳站在深圳大运中心体育馆开战，中国女选手张伟丽挑战UFC现役女拳王、巴西选手安德拉德，争夺草量级（115磅）世界冠军金腰带。比赛开始不到一分钟，张伟丽KO巴西女拳王，成为UFC中国首位冠军。</p><p><img src="https://imgs.codewoody.com/uploads/big/b5f5b29cd0bf63c58de230e145da34cf.jpg"></p><h3 id="全国首套房房贷利率上调"><a href="https://www.zhihu.com/question/340508509" target="_blank" rel="noopener">全国首套房房贷利率上调</a></h3><p><img src="https://imgs.codewoody.com/uploads/big/8570d6a1ff390104cf8506cec0de2e75.jpg"></p><h3 id="香港问题后续">香港问题后续</h3><ul><li><a href="https://www.dw.com/zh/香港示威警方首度开枪-共36人被捕/a-50156162?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">周日又有游行示威进行，警方首次出动水炮车驱散抗议者，并有警员开枪。警方总共逮捕了36人，其中年龄最小的12岁</a>。开枪过程BBC做了一个梳理:<a href="https://www.youtube.com/watch?v=NEA92KPpgcM" target="_blank" rel="noopener">Hong Kong: What led to a single gunshot being fired? - BBC News</a>.</li><li><a href="https://www.dw.com/zh/「反送中」示威延烧-示威者叹生死交关/a-50190423?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">港龙空勤人员协会主席施安娜遭国泰港龙航空解雇</a></li><li><a href="https://www.dw.com/zh/港警接连出手-港知名运动人士相继被捕/a-50223095?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">多名知名运动人士被捕，包括香港民族党前召集人陈浩天与香港众志秘书长黄之锋</a></li><li>经济学人做的调查：<a href="https://www.economist.com/graphic-detail/2019/08/26/almost-nobody-in-hong-kong-under-30-identifies-as-chinese" target="_blank" rel="noopener">Almost nobody in Hong Kong under 30 identifies as “Chinese”</a></li><li>前一段时间推特和facebook封禁了一批「有政府背景」的账户，关于此，推荐一篇论文<a href="https://www.tandfonline.com/doi/full/10.1080/1369118X.2018.1476576" target="_blank" rel="noopener">Chinese computational propaganda: automation, algorithms and the manipulation of information about Chinese politics on Twitter and Weibo</a>.</li><li><a href="https://news.ifeng.com/c/7pZrFHDV1X6" target="_blank" rel="noopener">何韵诗逃往澳大利亚</a></li><li><a href="https://www.youtube.com/watch?v=-qCoFKpmMHk" target="_blank" rel="noopener">太子站乘客冲突过程</a></li></ul><h3 id="中美关系">中美关系</h3><ul><li><a href="https://cn.reuters.com/article/china-usa-south-sea-warship-0829-thur-idCNKCS1VJ03U?feedType=RSS&amp;feedName=CNTopGenNews" target="_blank" rel="noopener">美国海军“迈耶”号驱逐舰未经中国政府允许，8月28日擅自闯入中国南沙岛礁邻近海域</a></li><li><a href="https://cn.reuters.com/article/china-us-navy-warship-tsingtao-0828-idCNKCS1VI0C5?feedType=RSS&amp;feedName=CNTopGenNews" target="_blank" rel="noopener">一艘美国海军军舰近日要求访问青岛港，但遭到中国回绝</a></li><li><a href="https://www.dw.com/zh/中美谈判继续前行-美国股市大涨/a-50223110?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">中国商务部29日在例行记者会上，表示出愿意和美方继续磋商，不愿意让贸易战升级的态度之后，美国股市应声上扬。</a></li></ul><h3 id="其他新闻">其他新闻</h3><ul><li><a href="http://www.lieyunwang.com/archives/458192" target="_blank" rel="noopener">旷视向港交所申请上市</a>。据悉，当前阿里巴巴、蚂蚁金服、联想、创新工场等均为旷视科技股东。</li><li>OG 3:1 击败Liquid夺得Ti9冠军，成为世界首位双冠王</li><li><a href="https://www.dw.com/zh/没有联合宣言的g7闭幕-特朗普称赞「团结」/a-50177152?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">没有联合宣言的G7闭幕，特朗普称赞「团结」</a></li><li><a href="https://www.dw.com/zh/消失七个月-杨恒均正式被控间谍罪/a-50177064?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">澳籍作家杨恒均在广州机场被国保带走</a>，被控间谍罪。</li><li><a href="https://www.zhihu.com/pin/1149745906852073472" target="_blank" rel="noopener">林书豪加盟北京首钢，薪水约为税后300万美元</a></li><li><a href="http://www.qdaily.com/articles/64113.html?source=feed" target="_blank" rel="noopener">好奇心日报恢复更新拉</a></li><li><a href="https://www.zhihu.com/question/343156335/answer/805615589" target="_blank" rel="noopener">警方通报黄毅清存在向他人贩卖毒品和吸食毒品的行为，已被提请批捕</a></li><li><a href="https://tech.sina.com.cn/i/2019-08-30/doc-iicezueu2090205.shtml" target="_blank" rel="noopener">拼多多市值超过百度</a>，目前总市值390.67亿美元，今年迄今累涨逾50%，超过了百度的369.18亿美元市值。</li><li><a href="https://www.zhihu.com/question/343431810" target="_blank" rel="noopener">八月底华为方舟编译器开源</a> -<a href="https://www.zhihu.com/question/343671678" target="_blank" rel="noopener">《哪吒之魔童降世》票房超过《流浪地球》，成为中国影史票房总榜第二名</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://imgs.codewoody.com/uploads/big/598bd6a41c77bd17efa96a553b49a00b.png&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Weekly" scheme="http://www.codewoody.com/categories/Weekly/"/>
    
    
      <category term="杂谈" scheme="http://www.codewoody.com/tags/%E6%9D%82%E8%B0%88/"/>
    
      <category term="科技新闻" scheme="http://www.codewoody.com/tags/%E7%A7%91%E6%8A%80%E6%96%B0%E9%97%BB/"/>
    
      <category term="转载" scheme="http://www.codewoody.com/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="Weekly" scheme="http://www.codewoody.com/tags/Weekly/"/>
    
  </entry>
  
</feed>
