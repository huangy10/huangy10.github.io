<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>治部少辅</title>
  
  <subtitle>大一大万大吉</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.codewoody.com/"/>
  <updated>2019-08-22T04:53:51.028Z</updated>
  <id>http://www.codewoody.com/</id>
  
  <author>
    <name>Woody Huang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>乌克兰独立广场旧事</title>
    <link href="http://www.codewoody.com/posts/31351/"/>
    <id>http://www.codewoody.com/posts/31351/</id>
    <published>2019-08-22T04:14:04.000Z</published>
    <updated>2019-08-22T04:53:51.028Z</updated>
    
    <content type="html"><![CDATA[<p>喜欢历史的人，在看到当下的事情的时候，就会情不自禁地想到历史上一些类似的旧事。比如这次又见到了一个很有意思的新闻。说是联邦快递被曝出来在中国投递的包裹里面有真枪，而且包裹是从美国寄出来。这件事有意思的地方有这么几个点：</p><p>其一是这件事情其实早在六月份就出来了，但是当时并没有在舆论上大范围传播，也没有中国的高调反应。反而是在这个节点爆出来，时机的选择耐人寻味。</p><p>其二是这件事情的一些细节非常有意思。从联邦快递的<a href="https://www.zaobao.com.sg/realtime/china/story20190819-982134" target="_blank" rel="noopener">回应</a>来看，是联邦快递主动报警的，那么这件事情可能并不是联邦快递有意为之。不过，一个含枪支的包裹通过了层层检查，甚至包括中美两国的海关系统，都没有被查验出来。按理说枪支的形状特征非常明显，从X光下面走一遍很容易分辨出来。如果说美国方面要有小动作，故意放了一马，那中国这方面的检查为什么也放过了这个包裹了？看着有点『钓鱼执法』的意味。</p><p>更有意思的事情来了。这两天，在香港也有一个类似的案子。19日在香港有一个<a href="http://news.dwnews.com/hongkong/news/2019-08-20/60145944.html" target="_blank" rel="noopener">军火案</a>在西九龙法院再审。被告林靖峰藏有的3支长枪和1支短枪已证实为真枪。此外，控方在庭上透露涉案包裹由美国寄往香港。这个案子案发，即被告被抓，是在今年1月14日。</p><p>最近香港不太平，不过这个案子的案发时间，是在逃犯条例发布之前。不过，这上面的两个例子显示出境外的一些势力，确实有将枪支运送到香港，甚至是大陆的能力。那么，这些枪支能够用来做什么呢？这个时候就可以点题了，让我们来回忆一下历史。</p><p>2013年底开始，由于时任乌克兰总统亚努科维奇中止了和欧盟签署政治和自由贸易协议，而强化和俄罗斯的关系，导致大规模的抗议活动。此轮抗议活动最终导致亚努科维奇下台。而且，这轮抗议的影响甚至导致乌克兰陷入分裂。随后陆续发生了克里米亚脱离乌克兰加入俄罗斯。乌克兰东部及南部产生分裂主义运动，乌克兰陷入内战。</p><p>当时，乌克兰基辅的独立广场是反对派与政府的主要拉锯场地。在抗议期间，独立广场甚至出现了狙击手，反对派与政府方面均有人被狙击受伤甚至死亡。后来乌克兰新政府将狙击行为归咎于前总统亚努科维奇势力。不过去年似乎又有了一些有意思的信息。俄罗斯《卫星报》方面找到了当年参与狙击的格鲁吉亚狙击手亚历山大·列瓦济什维利。狙击手表示现任的乌克兰最高拉达国家安全与国防委员会主席谢尔盖·帕申斯基和人民议员弗拉基米尔·帕拉修克亲自参与了当年独立广场骚乱期间的杀人事件。《卫星报》还掌握有机票复印件，证明狙击手确实当时曾经前往基辅。</p><figure><img src="https://imgs.codewoody.com/uploads/big/fbdc3949f8fc4ac87a8cda180c608f4b.jpeg" alt="2014年的基辅独立广场"><figcaption>2014年的基辅独立广场</figcaption></figure><p>另外，欧盟外长凯瑟琳·艾希顿（Catherine Margaret Ashton）和爱沙尼亚内务部长乌尔马斯·帕耶特（Urmas Paet）的电话对话录音，证明基辅独立广场现场的狙击手和乌克兰反对派有关。在谈话中乌尔马斯·帕耶特也提到，在基辅独立广场上出现的狙击手，是乌克兰反对派雇佣的，他所看到的所有的罪证都证明，无论示威民众还是执法人员都是被同一批狙击手射杀的。<a href="https://www.dw.com/zh/%E8%B0%81%E6%98%AF%E4%B9%8C%E5%85%8B%E5%85%B0%E5%B9%BF%E5%9C%BA%E7%8B%99%E5%87%BB%E6%89%8B%E7%9A%84%E5%B9%95%E5%90%8E%E6%8C%87%E4%BD%BF%E8%80%85/a-17480436" target="_blank" rel="noopener">爱沙尼亚驻基辅大使已证实此录音的真实性</a>。帕耶特称向其透露消息的是活动人士、医生柏格摩列兹（Olga Bogomolets）。许多人将这名医生视为独立广场的英雄，原本在新政府中有一席之位的她却拒绝出任。</p><p>之前我看八方论坛上就香港问题采访王孟源的时候，王孟源就提到尽量不要派遣大陆方面的武装力量进入香港，否则如果有人想在香港复制当年独立广场上的套路，武警或者解放军就是不清楚这事了。看来，所言非虚。</p><p>更多阅读</p><ul><li>华尔街日报：<a href="https://cn.wsj.com/articles/%E4%B8%AD%E5%9B%BD%E8%AD%A6%E6%96%B9%E8%B0%83%E6%9F%A5%E8%81%94%E9%82%A6%E5%BF%AB%E9%80%92%E5%8C%85%E8%A3%B9%E6%B6%89%E6%9E%AA%E6%A1%88-11566173341" target="_blank" rel="noopener">中国警方调查联邦快递包裹涉枪案</a></li><li>环球网：<a href="http://china.huanqiu.com/gangao/2019-08/15326401.html?agt=15422" target="_blank" rel="noopener">香港警方检获军火案今再审，已证实至少4支真枪均由美国寄出</a></li><li>德国之声：<a href="https://www.dw.com/zh/%E8%B0%81%E6%98%AF%E4%B9%8C%E5%85%8B%E5%85%B0%E5%B9%BF%E5%9C%BA%E7%8B%99%E5%87%BB%E6%89%8B%E7%9A%84%E5%B9%95%E5%90%8E%E6%8C%87%E4%BD%BF%E8%80%85/a-17480436" target="_blank" rel="noopener">谁是乌克兰广场狙击手的幕后指使者?</a></li><li>环球网：<a href="http://world.huanqiu.com/regions/2014-02/4848059.html?agt=15422" target="_blank" rel="noopener">乌克兰称独立广场狙击手开火 致20多名警察受伤</a></li><li><a href="https://www.youtube.com/watch?feature=player_embedded&amp;v=ZEgJ0oo3OA8" target="_blank" rel="noopener">盟外长凯瑟琳·艾希顿（Catherine Margaret Ashton）和爱沙尼亚内务部长乌尔马斯·帕耶特（Urmas Paet）的电话对话录音</a></li><li>维基百科：<a href="https://zh.wikipedia.org/wiki/%E4%B9%8C%E5%85%8B%E5%85%B0%E4%BA%B2%E6%AC%A7%E7%9B%9F%E7%A4%BA%E5%A8%81%E8%BF%90%E5%8A%A8#cite_note-163" target="_blank" rel="noopener">乌克兰亲欧盟示威运动</a></li><li>俄罗斯卫星通讯社：<a href="http://sputniknews.cn/politics/201802131024704098/" target="_blank" rel="noopener">格鲁吉亚狙击手：乌克兰议员曾参与基辅独立广场杀人事件</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;喜欢历史的人，在看到当下的事情的时候，就会情不自禁地想到历史上一些类似的旧事。比如这次又见到了一个很有意思的新闻。说是联邦快递被曝出来在中国投递的包裹里面有真枪，而且包裹是从美国寄出来。这件事有意思的地方有这么几个点：&lt;/p&gt;
&lt;p&gt;其一是这件事情其实早在六月份就出来了，但
      
    
    </summary>
    
      <category term="杂谈" scheme="http://www.codewoody.com/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="杂谈" scheme="http://www.codewoody.com/tags/%E6%9D%82%E8%B0%88/"/>
    
      <category term="政治" scheme="http://www.codewoody.com/tags/%E6%94%BF%E6%B2%BB/"/>
    
  </entry>
  
  <entry>
    <title>Weekly-9</title>
    <link href="http://www.codewoody.com/posts/11084/"/>
    <id>http://www.codewoody.com/posts/11084/</id>
    <published>2019-08-19T07:53:13.000Z</published>
    <updated>2019-08-25T03:25:37.993Z</updated>
    
    <content type="html"><![CDATA[</p><h2 id="新闻">新闻</h2><h3 id="关税关税">关税！关税！</h3><p>贸易战又双叒叕峰回路转了。</p><ol type="1"><li>周五中国宣布对于原产于美国的约750亿美元进口商品加征关税，作为“应对美方单边主义、贸易保护主义”之举。这批关税将分两批在9月和12月分别开始施行。</li><li>数小时后特朗普就连发了多条推特，表示要进一步提高对中国商品加征关税的税率。他还要求在华经营的美国企业撤出中国、最好将业务搬回美国。特朗普周五总共发了37条推特。特朗普的推特表示美国将在10月1日将2500亿美元中国商品的现有关税从25%提高至30%，他还说，定于9月1日生效的另外3000亿美元中国商品的关税将从10%升至15%。</li></ol><blockquote class="twitter-tweet"><p lang="zh" dir="ltr">美国总统特朗普在推特上宣布，从10月1日开始，对来自中国的2500亿美元产品关税税率从目前的25%提高到30%。他还宣布，对余下的3000亿美元来自的中国产品，原计划从9月1日起加征的10% <a href="https://twitter.com/hashtag/%E5%85%B3%E7%A8%8E?src=hash&amp;ref_src=twsrc%5Etfw" target="_blank" rel="noopener">#关税</a> 现将提高至15%。 <a href="https://t.co/UYtR94ox7Y" target="_blank" rel="noopener">https://t.co/UYtR94ox7Y</a></p>— 美国之音中文网 (@VOAChinese) <a href="https://twitter.com/VOAChinese/status/1165010460791451651?ref_src=twsrc%5Etfw" target="_blank" rel="noopener">August 23, 2019</a></blockquote><script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script><p>同时，特朗普还下令美国公司离开中国，寻找替代。</p><blockquote class="twitter-tweet"><p lang="en" dir="ltr">Our Country has lost, stupidly, Trillions of Dollars with China over many years. They have stolen our Intellectual Property at a rate of Hundreds of Billions of Dollars a year, &amp; they want to continue. I won’t let that happen! We don’t need China and, frankly, would be far....</p>— Donald J. Trump (@realDonaldTrump) <a href="https://twitter.com/realDonaldTrump/status/1164914959131848705?ref_src=twsrc%5Etfw" target="_blank" rel="noopener">August 23, 2019</a></blockquote><script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script><p>特朗普周五上午的推特风暴，还包括向美联储施压。他在推文中写道：“现在应该是美联储拿出他们本事来的时候了！”他又提问谁是美国最大的敌人，是（美联储主席）鲍威尔（Jerome Powell）还是习近平主席？</p><blockquote class="twitter-tweet"><p lang="en" dir="ltr">....My only question is, who is our bigger enemy, Jay Powell or Chairman Xi?</p>— Donald J. Trump (@realDonaldTrump) <a href="https://twitter.com/realDonaldTrump/status/1164914610836783104?ref_src=twsrc%5Etfw" target="_blank" rel="noopener">August 23, 2019</a></blockquote><script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script><p>除此之外，特朗普指责中国还未履行阻止芬太尼流入美国的承诺，他要求联邦快递、UPS、亚马逊、美国邮政等公司拒绝递送来自中国的芬太尼药品。</p><p>8月1日，特朗普曾说将从9月1日起向3000亿美元的中国商品加征10%关税。9月1日也是中美贸易谈判下一轮会面的日期。其后，美国政府又宣布，部分关税将延迟至12月15日实施，还有部分商品被剔除出加税名单。</p><p>中方此番加税反制，在关税实施的时间上完全匹配了美国的上述关税威胁。但鉴于中美向对方出口的商品总额相差悬殊，中国无法在征税的商品价值总量上匹配美国，可能还会以非关税措施反制美国。中国观察家利明璋（Bill Bishop）曾指出，这些潜在手段包括出台“不可靠实体清单”、对美商投资展开安全审查、增加海关检查、取消与美国企业的订单、骚扰美企驻华雇员等。中国商务部发言人高峰在22日表示，不可靠实体清单将于近期发布。</p><ul><li><a href="https://www.dw.com/zh/%E4%B8%AD%E5%9B%BD%E5%AE%A3%E5%B8%83%E5%AF%B9750%E4%BA%BF%E7%BE%8E%E5%9B%BD%E5%95%86%E5%93%81%E5%8A%A0%E5%BE%81%E5%85%B3%E7%A8%8E/a-50132940" target="_blank" rel="noopener">中国宣布对750亿美国商品加征关税</a></li><li><a href="https://www.voachinese.com/a/china-trump-trade-tariff-deal-20190824/5054848.html" target="_blank" rel="noopener">VOA: 再度升级 特朗普宣布对中国商品关税再加码</a></li><li><a href="https://www.bbc.com/zhongwen/simp/world-49451975" target="_blank" rel="noopener">中美贸易战再升级：两国互征关税，特朗普要求美企撤出中国</a></li><li><a href="https://www.bbc.com/zhongwen/simp/world-45637126" target="_blank" rel="noopener">芬太尼危机：中国是否是非法药品的主要来源？</a></li></ul><h3 id="深圳先行示范区"><a href="http://www.xinhuanet.com/fortune/2019-08/19/c_1210247173.htm" target="_blank" rel="noopener">深圳先行示范区</a></h3><p>8月18日，中共中央、国务院关于支持深圳建设中国特色社会主义先行示范区的意见发布。</p><p>【中共中央、国务院发布关于支持深圳建设社会主义特色经济示范区的意见】党和国家作出兴办经济特区重大战略部署以来，深圳经济特区作为我国改革开放的重要窗口，各项事业取得显著成绩，已成为一座充满魅力、动力、活力、创新力的国际化创新型城市。当前，中国特色社会主义进入新时代，支持深圳高举新时代改革开放旗帜、建设中国特色社会主义先行示范区，有利于在更高起点、更高层次、更高目标上推进改革开放，形成全面深化改革、全面扩大开放新格局；有利于更好实施粤港澳大湾区战略，丰富“一国两制”事业发展新实践；有利于率先探索全面建设社会主义现代化强国新路径，为实现中华民族伟大复兴的中国梦提供有力支撑。</p><p><img src="https://imgs.codewoody.com/uploads/big/ca1d0f6e3eb43c58b5fb69f0a15b3410.jpg"></p><blockquote><p>这个新闻虽说是目前香港乱局的档口出来的，其中意味令人遐想。不过，这个先行示范区其实早就开始规划了。早在2018年1月，深圳市委六届九次全会讨论了《深圳经济特区率先建设社会主义现代化先行区规划纲要（2018-2035年）（讨论稿）》，并明确了深圳率先建设社会主义现代化先行区的目标任务。</p></blockquote><blockquote><p>不过吧，对于国家这种「口号」，不能光看他怎么说，还要看他拿多少钱出来。深圳是不是要腾飞，还需要排队，前面至少还有一个雄安呢。</p></blockquote><h3 id="联邦快递在华包裹包含枪支"><a href="https://cn.reuters.com/article/us-fedex-china-fujian-gun-package-0818-idCNKCS1V80CP?feedType=RSS&amp;feedName=CNTopGenNews" target="_blank" rel="noopener">联邦快递在华包裹包含枪支</a></h3><p>中国福建省福州市公安局晋安分局官方微博周日称，该局近期接到报警，福建某运动用品公司收到由美国联邦快递公司(FDX.N)承运的一美国客户寄出的快递包裹，内有枪支。</p><p>晋安分局并称，当前福州警方已将枪支暂扣，并开展立案调查。</p><p>新华社此前报导，中国国家有关部门依法对联邦快递（中国）有限公司未按名址投递快件一案实施调查发现，联邦快递关于将涉华为公司快件转至美国系“误操作”的说法与事实不符，另发现联邦快递(FedEx)(FDX.N)涉嫌滞留逾百件涉华为公司进境快件。</p><h3 id="香港问题后续">香港问题后续</h3><ul><li><a href="https://www.dw.com/zh/818集会：港人退场仍无空间/a-50070758?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">818集会</a>：香港人在民阵的号召下再次上街，他们以行动表达目前没有退场的空间。与此同时，香港基本法委员会前副主席梁爱诗说，即便出动驻港军队，也不意味着&quot;一国两制&quot;的完结。</li><li><a href="https://www.dw.com/zh/在德港人周六集会-内地青年亮国旗对立/a-50068698?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">德国也发生香港和内地支持者对立</a>：为响应香港的示威活动，居住柏林的香港人星期六下午（8月17日）于勃兰登堡门前举行了&quot;反送中&quot;集会，有数百人参与。同一天，柏林、汉堡和科隆都有内地青年举行&quot;爱国爱港&quot;示威活动。</li><li><a href="https://www.dw.com/zh/控北京讯息战抗香港示威-推特脸书删帳號/a-50090156?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">推特和脸书封禁了一批有中国官方背景的账户</a>，随后<a href="https://www.williamlong.info/archives/5805.html" target="_blank" rel="noopener">Youtube也跟进删除了一批账户（210个）</a>。谷歌称这些频道是有针对性的“协调影响行动” 。</li><li><a href="https://cn.nytimes.com/business/20190819/cathay-pacific-ceo-resigns-rupert-hogg/" target="_blank" rel="noopener">国泰航空英籍CEO何杲（Rupert Hogg）辞职</a>: 这个在<a href="https://www.youtube.com/watch?v=TihkL4zmwOA" target="_blank" rel="noopener">王孟源在八方论坛</a>上就预测了。同日辞职还有担任顾客及商务总裁的卢家培。</li><li><a href="https://news.ifeng.com/c/7pJzFTXtrXs" target="_blank" rel="noopener">8月20日英驻港总领馆香港雇员在深圳被拘</a>, 随后<a href="https://cn.reuters.com/article/canadaconsulate-hk-0823-fri-idCNKCS1VD0B5?feedType=RSS&amp;feedName=CNTopGenNews" target="_blank" rel="noopener">加拿大驻港总领事馆暂停其雇员前往中国内地</a>。周六此名雇员<a href="https://www.dw.com/zh/英驻港领事馆雇员获释回香港/a-50147761?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">被释放</a>回到香港。</li><li><a href="https://www.dw.com/zh/大银行登广告反对暴力-高中生上街延续抗议/a-50127696?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">香港几家银行星期四分别在当地报纸刊登广告，称反对社会暴力行为，呼吁社会各界努力维护香港的国际金融中心地位</a>。</li></ul><p>八方论坛采访<a href="http://blog.udn.com/MengyuanWang/article" target="_blank" rel="noopener">王孟源</a>的报道，值得一看：</p><iframe width="560" height="315" src="https://www.youtube.com/embed/TihkL4zmwOA" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><p><a href="http://blog.udn.com/MengyuanWang/128692003" target="_blank" rel="noopener">王孟源：【香港】對八月12日八方論壇訪問視頻的補充</a></p><h3 id="负利率贷款"><a href="http://www.ruanyifeng.com/blog/2019/08/weekly-issue-70.html" target="_blank" rel="noopener">负利率贷款</a></h3><p>本周有两条新闻，大家可能没注意。</p><p>第一条是丹麦发放全世界第一笔负利率贷款，利率是-0.5%。银行借你一万元，一年后你还9950元。</p><p>据说原因是，银行没有足够的贷款业务，为了减少存款，已经向企业存款收费了。既然存款可以收费，那么贷款负利率也能赚钱。</p><p>第二条是德国政府正在出售负利率的债券。你买一万元国债，若干年后，政府还你9000多元。还真的有人买，据说动机是，以后的负利率会更大，所以这种债券还有升值可能。</p><p>这两条新闻说明了什么？就是一点，欧洲的钱非常多，但是投资机会很少，钱没有去处。所以，移民到欧洲好不好？生活环境是很好，但可能也很苦闷，因为看不到发展机会。</p><p>目前，全世界都是资本过剩。国内的利率已经在下跌，肯定还会不断下跌，投资机会也会越来越稀缺。</p><p>这告诉我们两点启示。一是钱存在银行，长期肯定不会增值；二是融资将会越来越容易，创业项目根本不担心融不到钱。</p><h3 id="亚马逊森林大火">亚马逊森林大火</h3><p>巴西国家空间研究所（INPE）<a href="https://www.dw.com/zh/%E4%BA%9A%E9%A9%AC%E9%80%8A%E9%87%8E%E7%81%AB%E7%83%A7%E4%B8%8D%E5%B0%BD-%E5%B7%B4%E8%A5%BF%E6%80%BB%E7%BB%9F%E9%81%AD%E7%8B%A0%E6%89%B9/a-50134709?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">表示</a>，该国1月至8月期间发生了近7万3千多起森林火灾。相较起来，2018年前8个月只有3万9759起。该研究所数据也显示，火灾主要集中在亚马逊附近的几个州。本月早些时候，巴西面积最大的亚马逊州宣布进入紧急状态。自8月15日以来，巴西各地又发生了9500多起森林火灾，主要集中在亚马逊盆地。</p><p><img src="https://imgs.codewoody.com/uploads/big/c6de002425a3656bd45fee033aaf2200.jpg"></p><figure><img src="https://imgs.codewoody.com/uploads/big/4a89e6a5078db5e811a36eed6c491611.jpg" alt="欧盟的数据，20日生物质燃烧气溶胶的图像。"><figcaption>欧盟的数据，20日生物质燃烧气溶胶的图像。</figcaption></figure><p>针对快速蔓延的亚马逊野火，巴西总统博索纳罗(Jair Bolsonaro)周四(8月23日)强烈回应国际上对他的批评。他说，有迹象显示，这次亚马逊大火灾的始作俑者可能是一些非政府组织，原因是政府撤回了这些组织的资金。他也指责国际上许多批评他的领导人试图“干涉主权”。</p><p>不过，在另外的脸书广播节目中，博索纳罗也称，当地农民可能参与纵火。</p><ul><li><a href="https://www.zhihu.com/question/341908130" target="_blank" rel="noopener">亚马逊雨林大火十天的事情是真的吗？会对地球产生什么影响？</a></li><li><a href="https://www.bbc.com/zhongwen/simp/world-49444685" target="_blank" rel="noopener">BBC中文：亚马逊雨林：创纪录大火源于天灾还是人祸</a></li></ul><h3 id="其他新闻">其他新闻</h3><ul><li><a href="https://www.zhihu.com/question/341413814" target="_blank" rel="noopener">腾讯NextStudio在科隆游戏展公布游戏《重生边缘:SYNCED: Off-Planet》</a></li><li><a href="https://www.zhihu.com/question/340265899/answer/787306437" target="_blank" rel="noopener">阿根廷大选初选，股市、汇率、债券崩盘</a>: 据阿根廷新大陆周刊报道，当地时间8月11日近3300万选民参加了初选投票，占选民总数的75%。投票统计结果显示，“全民阵线”费尔南德斯组合得票率47.37%，而“变革联盟”的马克里组合得票率为32.23%。当晚22点30分，马克里宣布在初选中落败。马克里的意外落败给阿根廷的金融市场带来了巨大震动，阿根廷比索对美元汇率狂泻25%，主要股指暴跌38%，阿根廷在美股上市企业集体暴跌，其中EDN跌59.3%、LomaNegra跌57.3%、BBVA银行跌55.85%。</li><li><a href="https://www.zhihu.com/question/341845915" target="_blank" rel="noopener">迪士尼和索尼谈崩，漫威不再参与蜘蛛侠电影</a></li><li><a href="https://www.zhihu.com/question/341445947" target="_blank" rel="noopener">8月19日 土耳其和俄罗斯在叙利亚激烈交火</a>：土军在努曼以北确认遭遇俄军空袭，有伤亡，土耳其宣称绝不放弃莫莱克阵地，正在一直向包围圈里运送增援部队，土耳其从杜虎儿方向的Tuqan抽调守军增援汉谢洪，北京时间1600第三批土耳其援军进入叙利亚境内，开始南下。</li><li>上周的新闻，但是今天才看到：<a href="https://www.zhihu.com/question/340833030" target="_blank" rel="noopener">8月15日 俄A321撞鸟双发失效迫降玉米地</a>: 俄罗斯乌拉尔航空由莫斯科茹科夫斯基国际机场飞往克里米亚地区辛菲罗波尔的U6178次航班，起飞后不久紧急迫降在机场外的玉米地内，机上234人全部生还，有10人需送往医院治疗。</li><li><a href="https://www.dw.com/zh/丹麦人不打算卖格陵兰？-特朗普：我不来了/a-50110312?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">特朗普想买格陵兰岛</a></li><li><a href="https://www.dw.com/zh/克什米尔冲突激化-巴基斯坦告上海牙/a-50109726?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">克什米尔冲突激化，巴基斯坦告上海牙国际法庭</a></li><li><a href="https://cn.reuters.com/article/usa-sanctions-chinese-0821-wedn-idCNKCS1VC00B?feedType=RSS&amp;feedName=CNTopGenNews" target="_blank" rel="noopener">美国财政部制裁三名中国人，指控其非法交易芬太尼</a>: 芬太尼是一种成瘾性的类鸦片合成药物，从中国大量流入美国。控制芬太尼的流动也是中美贸易谈判的一部分。三周前美国总统特朗普指责中国方面食言，没有阻止这种使人成瘾的类鸦片合成药物大量流入美国。</li><li><a href="https://www.williamlong.info/archives/5803.html" target="_blank" rel="noopener">Steam中国正式定名为&quot;蒸汽平台&quot;</a></li><li><a href="https://www.zhihu.com/question/341926440" target="_blank" rel="noopener">《哪吒之魔童降世》票房超越《复联4》跻身中国内地票房榜前三</a></li></ul><h2 id="文章与资源">文章与资源</h2><ul><li><a href="https://www.network360.tv/#!/home" target="_blank" rel="noopener">八方论坛</a>: 美籍华人史东做的访谈节目。我听过好几期了，质量非常高，每期节目就少数一两个话题做深入讨论。史东本人是<a href="https://www.zhihu.com/question/54646932/answer/793902633" target="_blank" rel="noopener">抗战英雄独臂飞将军石邦藩的幼子</a>。</li><li><a href="https://humdi.net/vnstat/" target="_blank" rel="noopener">vnstat</a>: 网络流量统计工具，非常好用</li></ul><h2 id="言论">言论</h2><ul><li>習近平之所以要修憲取消任期限制，原因在於他不放心在中國實力超越美國霸主的這個渡河過程中途換馬，尤其是内部改革反對者眾，如果只有十年的固定任期，必然會有普遍的以拖待變心態。取消任期限制能消弭陽奉陰違的消極態度，倒不是他真想要做終身總統。我個人的猜測是有超過一半的可能，他會在2027年卸任。如果真是如此，那麽習近平很可能也不放心把統一這樣重要的工作留給下任，假使外部的時機也成熟了，他只需要有合適的導火綫就能出手。 --- <a href="http://blog.udn.com/MengyuanWang/128020354" target="_blank" rel="noopener">王孟源的博客</a></li><li>在一次制订美国宪法的会议上，有位议员说：“在宪法里要规定一条：常规部队任何时候都不得超过5000人。华盛顿平静地说：“这位先生的建议的确很好。但我认为还要加上一条：侵略美国的外国军队，任何时候都不得超过3000人。”</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://imgs.codewoody.com/uploads/big/bdf4d2ef8d46da7e556dc8ad5fd515e3.jpg&quot;&gt;
    
    </summary>
    
      <category term="Weekly" scheme="http://www.codewoody.com/categories/Weekly/"/>
    
    
      <category term="杂谈" scheme="http://www.codewoody.com/tags/%E6%9D%82%E8%B0%88/"/>
    
      <category term="科技新闻" scheme="http://www.codewoody.com/tags/%E7%A7%91%E6%8A%80%E6%96%B0%E9%97%BB/"/>
    
      <category term="转载" scheme="http://www.codewoody.com/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="Weekly" scheme="http://www.codewoody.com/tags/Weekly/"/>
    
  </entry>
  
  <entry>
    <title>C++ 中的字符串分割</title>
    <link href="http://www.codewoody.com/posts/38198/"/>
    <id>http://www.codewoody.com/posts/38198/</id>
    <published>2019-08-14T07:22:11.000Z</published>
    <updated>2019-08-14T07:39:46.327Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/dfcao/p/cpp-FAQ-split.html" target="_blank" rel="noopener">原文地址</a></p><h2 id="自己用stl实现">自己用STL实现</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; split(<span class="keyword">const</span> <span class="built_in">string</span> &amp;s, <span class="keyword">const</span> <span class="built_in">string</span> &amp;seperator)&#123;</span><br><span class="line">  <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; result;</span><br><span class="line">  <span class="keyword">typedef</span> <span class="built_in">string</span>::size_type string_size;</span><br><span class="line">  string_size i = <span class="number">0</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">while</span>(i != s.size())&#123;</span><br><span class="line">    <span class="comment">//找到字符串中首个不等于分隔符的字母；</span></span><br><span class="line">    <span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i != s.size() &amp;&amp; flag == <span class="number">0</span>)&#123;</span><br><span class="line">      flag = <span class="number">1</span>;</span><br><span class="line">      <span class="keyword">for</span>(string_size x = <span class="number">0</span>; x &lt; seperator.size(); ++x)</span><br><span class="line">    　　<span class="keyword">if</span>(s[i] == seperator[x])&#123;</span><br><span class="line">      　　++i;</span><br><span class="line">      　　flag = <span class="number">0</span>;</span><br><span class="line">     　　 <span class="keyword">break</span>;</span><br><span class="line">    　　&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//找到又一个分隔符，将两个分隔符之间的字符串取出；</span></span><br><span class="line">    flag = <span class="number">0</span>;</span><br><span class="line">    string_size j = i;</span><br><span class="line">    <span class="keyword">while</span>(j != s.size() &amp;&amp; flag == <span class="number">0</span>)&#123;</span><br><span class="line">      <span class="keyword">for</span>(string_size x = <span class="number">0</span>; x &lt; seperator.size(); ++x)</span><br><span class="line">    　　<span class="keyword">if</span>(s[j] == seperator[x])&#123;</span><br><span class="line">      　　flag = <span class="number">1</span>;</span><br><span class="line">     　　 <span class="keyword">break</span>;</span><br><span class="line">    　　&#125;</span><br><span class="line">      <span class="keyword">if</span>(flag == <span class="number">0</span>) </span><br><span class="line">    　　++j;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(i != j)&#123;</span><br><span class="line">      result.push_back(s.substr(i, j-i));</span><br><span class="line">      i = j;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="built_in">string</span> s = <span class="string">"a,b*c*d,e"</span>;</span><br><span class="line">  <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; v = split(s, <span class="string">",*"</span>); <span class="comment">//可按多个字符来分隔;</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;::size_type i = <span class="number">0</span>; i != v.size(); ++i)</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; v[i] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  <span class="comment">//输出: a b c d</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更加简洁的版本如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SplitString</span><span class="params">(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span>&amp; s, <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt;&amp; v, <span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span>&amp; c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">string</span>::size_type pos1, pos2;</span><br><span class="line">  pos2 = s.find(c);</span><br><span class="line">  pos1 = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span>(<span class="built_in">std</span>::<span class="built_in">string</span>::npos != pos2)</span><br><span class="line">  &#123;</span><br><span class="line">    v.push_back(s.substr(pos1, pos2-pos1));</span><br><span class="line">    pos1 = pos2 + c.size();</span><br><span class="line">    pos2 = s.find(c, pos1);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(pos1 != s.length())</span><br><span class="line">    v.push_back(s.substr(pos1));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="用c语言中的strtok-函数来进行分割">用C语言中的strtok 函数来进行分割</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> s[] = <span class="string">"a,b*c,d"</span>;</span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">char</span> *sep = <span class="string">",*"</span>; <span class="comment">//可按多个字符来分割</span></span><br><span class="line">  <span class="keyword">char</span> *p;</span><br><span class="line">  p = strtok(s, sep);</span><br><span class="line">  <span class="keyword">while</span>(p)&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%s "</span>, p);</span><br><span class="line">    p = strtok(<span class="literal">NULL</span>, sep);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出: a b c d</span></span><br></pre></td></tr></table></figure><h2 id="使用boost库中的split函数">使用boost库中的split函数</h2><p>boost库有很多方法来实现split，也包含了一个split函数，可以直接使用，非常实用而且强大，但是得自己下载boost库。使用代码如下</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;boost/algorithm/string.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> boost;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">( <span class="built_in">vector</span> &lt;<span class="built_in">string</span>&gt; &amp; v )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">size_t</span> n = <span class="number">0</span>; n &lt; v.size(); n++)</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"\""</span> &lt;&lt; v[ n ] &lt;&lt; <span class="string">"\"\n"</span>;</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">string</span> s = <span class="string">"a,b, c ,,e,f,"</span>;</span><br><span class="line">  <span class="built_in">vector</span> &lt;<span class="built_in">string</span>&gt; fields;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; <span class="string">"Original = \""</span> &lt;&lt; s &lt;&lt; <span class="string">"\"\n\n"</span>;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; <span class="string">"Split on \',\' only\n"</span>;</span><br><span class="line">  split( fields, s, is_any_of( <span class="string">","</span> ) );</span><br><span class="line">  print( fields );</span><br><span class="line"></span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; <span class="string">"Split on \" ,\"\n"</span>;</span><br><span class="line">  split( fields, s, is_any_of( <span class="string">" ,"</span> ) );</span><br><span class="line">  print( fields );</span><br><span class="line"></span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; <span class="string">"Split on \" ,\" and elide delimiters\n"</span>; </span><br><span class="line">  split( fields, s, is_any_of( <span class="string">" ,"</span> ), token_compress_on );</span><br><span class="line">  print( fields );</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="更多阅读">更多阅读</h2><ul><li><a href="https://www.fluentcpp.com/2017/04/21/how-to-split-a-string-in-c/" target="_blank" rel="noopener">How to split a string in C</a></li><li><a href="http://www.cplusplus.com/faq/sequences/strings/split/" target="_blank" rel="noopener">Split a string</a></li><li><a href="https://www.zhihu.com/question/36642771" target="_blank" rel="noopener">C++ 的 string 为什么不提供 split 函数？</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/dfcao/p/cpp-FAQ-split.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;原文地址&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;自己用stl实现&quot;&gt;自己用STL实现&lt;/h2&gt;

      
    
    </summary>
    
      <category term="教程" scheme="http://www.codewoody.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="http://www.codewoody.com/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="C++" scheme="http://www.codewoody.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Weekly-8</title>
    <link href="http://www.codewoody.com/posts/60301/"/>
    <id>http://www.codewoody.com/posts/60301/</id>
    <published>2019-08-12T03:59:48.000Z</published>
    <updated>2019-08-24T06:48:35.021Z</updated>
    
    <content type="html"><![CDATA[<h2 id="新闻">新闻</h2><h3 id="热点环球网记者付国豪在香港机场被拘禁">热点·环球网记者付国豪在香港机场被拘禁</h3><p><img src="https://imgs.codewoody.com/uploads/big/d08f64882bfda4b582bc16d93fbe49d8.jpg"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/ICspR9cEok0" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><p>一时之间，舆论哗然，这个问题既然登上了<a href="https://www.zhihu.com/question/340424050" target="_blank" rel="noopener">知乎热榜第一</a>，也足见官方态度。之前也有另外一名大陆男子徐锦炀被打，其身份确实是大陆的公安。不过被打的也太惨了。</p><p><img src="https://imgs.codewoody.com/uploads/big/facd92688396bf05545b3da0a838c6f2.jpg"></p><blockquote><p>还有一个问题必须说明：切不要以为香港的事情全由香港人来管，中央一点都不管，就万事大吉了。这是不行的，这种想法不实际，中央确实是不干预特别行政区的具体事务的，也不需要干预。但是，特别行政区是不是也会发生危害国家根本利益的事情呢？难道就不会出现吗？那个时候，北京过问不过问？难道香港就不会出现损害香港根本利益的事情？能够设想香港就没有干扰，没有破坏力量吗？我看没有这种自我安慰的根据。如果中央把什么权力都放弃了，就可能会出现一些混乱，损害香港的利益。所以,保持中央的某些权力，对香港有利无害。</p><p>大家可以冷静地想想，香港有时候会不会出现非北京出头就不能解决的问题呢？过去香港遇到问题总还有个英国出头嘛！总有一些事情没有中央出头你们是难以解决的。中央的政策是不损害香港的利益，也希望香港不会出现损害国家利益和香港利益的事情。要是有呢？所以请诸位考虑，基本法要照顾到这些方面。有些事情，比如一九九七年后香港有人骂中国共产党，骂中国，我们还是允许他骂，但是如果变成行动，要把香港变成一个在“民主”的幌子下反对大陆的基地，怎么办？那就非干预不行。干预首先是香港行政机构要干预，并不一定要大陆的驻军出动。只有发生动乱、大动乱驻军才会出动。但是总得干预嘛!</p><p>--《邓小平文选》第三卷，一九八七年四月十六日，会见香港特别行政区基本法起草委员会委员时的讲话</p></blockquote><p>更多香港的消息如下：</p><ul><li><a href="https://cn.reuters.com/article/hk-airport-court-order-protest-0814-idCNKCS1V402R?feedType=RSS&amp;feedName=CNTopGenNews" target="_blank" rel="noopener">香港机管局获法庭禁制令禁止干扰机场正常 客运大楼实施进出管制。</a></li><li><a href="https://cn.reuters.com/article/hongkong-protests-usa-navy-visit-0814-idCNKCS1V4035?feedType=RSS&amp;feedName=CNTopGenNews" target="_blank" rel="noopener">中国拒绝了两艘美国海军军舰未来几周访问香港的请求。</a></li><li><a href="https://www.hkja.org.hk/聲明/香港記者協會對於近日兩宗內地傳媒記者拍攝示威/" target="_blank" rel="noopener">香港記者協會對於近日兩宗內地傳媒記者拍攝示威者時受阻表示遺憾，並譴責暴力對待記者的行為</a></li><li><a href="https://www.sohu.com/na/333118814_115479?scm=1002.5d0059.0.2883-0&amp;spm=smpc.content%2Fnew.nav.2.1565568000026oXoZw5N" target="_blank" rel="noopener">中通社记者遭香港激进示威者围攻，被逼删除照片</a></li><li><a href="https://cn.reuters.com/article/us-trump-hk-china-trade-deal-0815-idCNKCS1V503I?feedType=RSS&amp;feedName=CNTopGenNews" target="_blank" rel="noopener">特朗普称中国应“人道地”对待香港 然后才能达成贸易协议</a>: 美国总统特朗普周三表示，中国希望达成贸易协议，但其应该首先“人道地”对待香港。这显然把贸易协议与和平解决香港示威问题关联起来了。</li><li><a href="https://cn.reuters.com/article/hk-airport-authority-flights-recovery-08-idCNKCS1V5042?feedType=RSS&amp;feedName=CNTopGenNews" target="_blank" rel="noopener">周四，香港机场恢复正常运作</a>: 香港机场管理局表示，香港国际机场周四航班恢复正常运作；而昨日航班升降按照重新编配后的计划进行，全日共处理超过1,000班航班，运作畅顺。</li><li><a href="https://www.dw.com/zh/中国大批武警、装甲车集结深圳/a-50035963?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">武警在深圳集结</a></li><li><a href="https://www.zhihu.com/question/340823422/answer/790544346" target="_blank" rel="noopener">2019 年 8 月 16 日香港多家报纸头版，登出李嘉诚「反对暴力」的宣言</a></li><li><a href="https://www.youtube.com/watch?v=ks2e8hpTAso" target="_blank" rel="noopener">有视频资料显示武警已经进入香港</a></li></ul><p><img src="https://imgs.codewoody.com/uploads/big/5104a40e1fcc39a0aab5cbf9cf92a58b.jpg"></p><h3 id="热点特朗普决定推迟对部分中国商品加征关税">热点·<a href="https://cn.reuters.com/article/column-russell-us-trump-trade-tariffs-08-idCNKCS1V40I3?feedType=RSS&amp;feedName=vbc_CN_columnist_all&amp;virtualBrandChannel=14356" target="_blank" rel="noopener">特朗普决定推迟对部分中国商品加征关税</a></h3><p>美国总统特朗普决定推迟对部分中国商品加征关税，无意中承认在与中国正在进行的这场贸易争端中，美国不再掌握主动权。</p><p>美国贸易代表办公室周三宣布，将于9月1日对来自中国的每年价值3,000亿美元的进口产品征收10%的关税，但对于部分商品的关税推迟到12月15日生效。</p><p>推迟加征关税的产品包括手机、笔记本电脑和服装，估计约占3,000亿美元待加征关税商品的一半左右，主要是消费类商品。</p><p>特朗普告诉记者，决定推迟对部分中国商品征收关税，是为了防止美国消费者在圣诞假期购物季之前面临价格上涨。</p><blockquote><p>说好的关税由中国买单呢？</p></blockquote><h3 id="翎客航天自主研发的可回收试验火箭成功回收">翎客航天自主研发的可回收试验火箭成功回收</h3><p>2019 年 8 月 11 日，早上10点半，翎客航天自主研发的新一代可回收试验火箭(RLV-T5)，在青海省冷湖火箭试验基地进行第三次发射以及成功回收。</p><p><img src="https://imgs.codewoody.com/uploads/big/f93cff9f8808357b47ccfe58640e0323.jpg"></p><p><img src="https://imgs.codewoody.com/uploads/big/b5992b6bb9423f5cba1244fb9552de8f.jpg"></p><ul><li><a href="https://www.zhihu.com/question/339689775/answer/783805754" target="_blank" rel="noopener">如何看待 8 月 10 日翎客航天自主研发的可回收试验火箭成功回收？这波操作什么水平?</a></li></ul><h3 id="超强台风利奇马"><a href="https://cn.reuters.com/article/china-typhoon-zheliang-loss-0812-idCNKCS1V2015?feedType=RSS&amp;feedName=CNTopGenNews" target="_blank" rel="noopener">超强台风「利奇马」</a></h3><p>中国新闻网周日报导，据浙江省报灾系统最新统计，截至11日13时30分，超强台风“利奇马”已致浙江535.8万余人受灾，因灾32人遇难，16人失联。</p><p>报导称，目前浙江已紧急转移安置120.2万人。农作物受灾面积18.5万公顷，绝收约2.3万公顷，因灾倒损房屋3.6万间，直接经济损失157.5亿余元人民币。</p><p>中国气象局网站新闻称，今年第9号台风“利奇马”已于10日20时在浙江省湖州市南浔境内由强热带风暴级减弱为热带风暴级。“利奇马”将继续北上影响黄淮、华北，给这些地区带来强降水。</p><p><img src="https://imgs.codewoody.com/uploads/big/ab9eef2180a25bd520e26b5c31e57350.jpg"></p><h3 id="上海迪士尼的负面新闻">上海迪士尼的负面新闻</h3><p>最近上海迪士尼遭遇负面新闻二连击啊，包括</p><ul><li><a href="https://www.zhihu.com/question/339594280/answer/782474101" target="_blank" rel="noopener">上海迪士尼禁止自带饮食被大学生告了</a>: “禁止携带食物入园”、“入园需翻包检查”等规定一直饱受争议。今年年初，华东政法大三学生小王因携带零食被园方工作人员翻包阻拦。小王查询发现，美国和法国的3处迪士尼并没有禁止消费者携带食物进园，而中国和日本的迪士尼乐园却禁止。上海迪士尼相关规定目的是提高园内餐饮业的创收，侵害了消费者的合法权益。</li><li><a href="https://www.zhihu.com/question/339695317/answer/784344583" target="_blank" rel="noopener">上海迪士尼台风天气首次闭园且不予退票</a></li></ul><h3 id="美国亿万富翁爱泼斯坦狱中死亡"><a href="http://www.xinhuanet.com/world/2019-08/12/c_1210238072.htm" target="_blank" rel="noopener">美国亿万富翁爱泼斯坦狱中死亡</a></h3><figure><img src="https://imgs.codewoody.com/uploads/big/4289349033d7e76d93e4467ffe63283f.jpg" alt="杰弗里·爱德华·爱泼斯坦（英语：Jeffrey Edward Epstein，1953年1月20日－2019年8月10日），美国投资家、科研慈善事业赞助者，在册性罪犯。"><figcaption>杰弗里·爱德华·爱泼斯坦（英语：Jeffrey Edward Epstein，1953年1月20日－2019年8月10日），美国投资家、科研慈善事业赞助者，在册性罪犯。</figcaption></figure><p>据NBC报道，涉嫌与未成年人性交易被起诉的美国富翁爱泼斯坦在狱中自杀身亡。 7月初，爱泼斯坦被逮捕，纽约检察官对其提出两项指控：性交易与共谋性交易。他被指性侵多名未成年女性，并为权贵提供性交易，曾与克林顿、安德鲁王子、特朗普等人交好。在爱泼斯坦被捕后，包括维密老板、美国前劳工部长多位名人被卷入此事，特朗普也因二人当年关系受到质疑，但他称已经十余年未与爱泼斯坦讲话。</p><ul><li><a href="https://www.zhihu.com/question/339812776" target="_blank" rel="noopener">美国富翁爱泼斯坦在狱中死亡有什么黑幕？</a></li><li><a href="http://www.xinhuanet.com/world/2019-08/12/c_1210238072.htm" target="_blank" rel="noopener">美国亿万富翁爱泼斯坦狱中死亡 初步推断死因是自杀</a></li></ul><p><img src="https://imgs.codewoody.com/uploads/big/4e7d8b0373871c85516515d5b940480a.jpg"></p><h3 id="港澳单列事件"><a href="https://www.zhihu.com/question/340107673" target="_blank" rel="noopener">「港澳单列」事件</a></h3><p>最近众多奢侈品牌都发生了在T恤上单独将香港或者台湾列成国家而早到大陆网民声讨的事件。这些品牌包括范思哲、蔻驰、雅诗兰黛、亚瑟士等。</p><p><img src="https://imgs.codewoody.com/uploads/big/e164f66bdbbf6bc33b6536b04f148ae5.jpg"></p><p>这些品牌的国内代言艺人纷纷表示与其品牌借阅。率先表态的是杨幂旗下的嘉行工作室。</p><p><img src="https://imgs.codewoody.com/uploads/big/118be5e886c0d1598b49947267a27853.jpg"></p><p>后续亦有刘雯，易烊千玺，关晓彤、许魏洲和任嘉伦等也纷纷表态。这些品牌后来陆续发布道歉声明：</p><p><img src="https://imgs.codewoody.com/uploads/big/7e860bb9a247b89561ced7f3b58fe71e.jpg"></p><p>有<a href="https://mp.weixin.qq.com/s/inRvfGyBp4TshzRRUNMvTQ" target="_blank" rel="noopener">公众号文章</a>称此问题是因为这些品牌使用了ISO-3166-2标准导致的。</p><h3 id="印度撤回克什米尔的自治区地位"><a href="https://www.dw.com/zh/%E5%85%8B%E4%BB%80%E7%B1%B3%E5%B0%94%E5%8D%B1%E6%9C%BA%E4%B8%8B%E5%8D%B0%E5%BA%A6%E5%A4%96%E9%95%BF%E5%8C%86%E5%BF%99%E8%AE%BF%E5%8D%8E/a-49985880" target="_blank" rel="noopener">印度撤回克什米尔的自治区地位</a></h3><p>印度政府突然宣布废除克什米尔自治地位。这一消息不仅引发地方紧张局势升温，同时也令印巴关系急剧恶化。继巴基斯坦外长紧急访华之后，印度外长苏杰生也于本周日到访北京。</p><p><img src="https://imgs.codewoody.com/uploads/big/1434bfa15afad6dd10977be8857c9c7c.png"></p><p>本周，中国外交部举行的新闻例会上，有记者问到&quot;印度政府宣布成立'拉达克中央直辖区'，其中涉及中印边界西段领土。中方对此有何评论？&quot;外交部新闻发言人华春莹回答说：&quot;中方一直反对印方将中印边界西段的中方领土划入印行政管辖范围。这一立场是坚定、一贯的，从无任何改变。&quot;她说：&quot;近日印方以单方面修改国内法律的形式，继续损害中方的领土主权，这一做法不可接受，也不会产生任何效力。我们敦促印方在边界问题上谨言慎行，严格遵守双方达成的相关协定，避免采取导致边界问题进一步复杂化的举动。&quot;</p><blockquote><p>在香港不断闹的现在，这条新闻真的有意思</p></blockquote><p>更多相关新闻</p><ul><li><a href="https://www.dw.com/zh/%E5%A4%96%E4%BA%A4%E5%9C%88%E4%BA%BA%E5%A3%AB%E4%B8%AD%E5%9B%BD%E6%8F%90%E8%AE%AE%E5%AE%89%E7%90%86%E4%BC%9A%E5%AE%A1%E8%AE%AE%E5%85%8B%E4%BB%80%E7%B1%B3%E5%B0%94%E9%97%AE%E9%A2%98/a-50034534?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">外交圈人士：中国提议安理会审议克什米尔问题</a></li></ul><h3 id="北京劳斯莱斯堵占医院应急通道"><a href="/knowledge-base/backups/劳斯莱斯占用医院应急通道.html">北京劳斯莱斯堵占医院应急通道</a></h3><iframe width="560" height="315" src="https://www.youtube.com/embed/49Pe_cU0EL0" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><p>据网友爆料，8 月 14 日上午，一女子驾驶京 A 牌劳斯莱斯在北京妇产医院东院区疑似因排队问题与保安发生争执，并堵住救护通道。民警到达后，女子依然不愿挪车。</p><p>目前微博上的视频删除的差不多了，估计有点背景，但是下面这个回答说的比较有道理：</p><blockquote><p>我看是自我审查闹得，毕竟各网站负责删帖的人也是老百姓，他们并不知道犯这种事本身就说明富贵不到哪儿去。要知道真正有背景、有钱的人根本不可能犯这事。首先，来之前肯定打过招呼，有人接待。其次，医院本来就有机动车位留着。最后，有司机。而且，包子有肉不在褶上，公车没豪车的。像这种自己开车，停车都没地方停，科室主任一级都没人下来迎接的人，能富贵到哪儿去呦。。。医院停车难不是一天两天了，我看还是同病相怜吧。 -- <a href="https://www.zhihu.com/question/340521728/answer/789057660" target="_blank" rel="noopener">回答地址</a></p></blockquote><p>以及，玩弄典故：</p><blockquote><p>其一：是大热天的正午，一个农妇做事做得正苦，忽而叹道：‘皇后娘娘真不知道多么快活。这时还不是在床上睡午觉，醒过来的时候，就叫道：拿个柿饼来！’</p><p>其二：曹孟德在马上一声大叫，关二弟听我说你且慢逃。 在许都我待你哪点儿不好，顿顿饭包饺子又炸油条。你曹大嫂亲自下厨烧锅燎灶，大冷天只忙得热汗不消。白面馍夹腊肉你吃腻了，又给你蒸一锅马齿菜包。搬蒜臼还把蒜汁捣，萝卜丝拌香油调了一瓢。</p><p>其三：东宫娘娘烙大饼，西宫娘娘剥大葱。</p></blockquote><h3 id="器官黑市">器官黑市</h3><h3 id="其他新闻">其他新闻</h3><ul><li><a href="https://www.ifanr.com/1247474?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=" target="_blank" rel="noopener">Tumblr换东家了，但是买主不是Pornhub</a>: 没了小黄图的汤不热身价暴跌。8月13日，博客平台 Tumblr 以 300万美元卖给了 WordPress 的母公司。2013年，雅虎收购 Tumblr 花了11亿美元，这意味着仅仅六年时间，Tumblr 变得一钱不值。</li><li><a href="https://www.dw.com/zh/%E5%AA%92%E4%BD%93%E5%A4%96%E6%95%99%E5%9C%A8%E5%8D%8E%E8%A2%AB%E6%8B%98%E6%8D%95%E6%95%B0%E9%87%8F%E6%BF%80%E5%A2%9E/a-50004765?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">外教在华被拘捕数量激增</a>: 前几周的舆论风向转变带来的影响是普遍的。</li><li><a href="https://www.dw.com/zh/美国债息「倒挂」-经济衰退警钟敲响/a-50031257?maca=chi-rss-chi-all-1127-rdf" target="_blank" rel="noopener">美债利率倒挂</a>： 美国国债收益率曲线在12年来首次暂时逆转。美国股市因此大幅下挫。这一消息也表现出投资者对经济衰退的担忧。</li><li><a href="https://www.williamlong.info/archives/5797.html" target="_blank" rel="noopener">北京将允许外资提供VPN服务</a></li><li><a href="http://www.huxiu.com/article/313541.html?f=wangzhan" target="_blank" rel="noopener">8月15日，滴滴回应或被下架登上热搜</a></li><li><a href="https://www.cnbeta.com/articles/tech/879007.htm" target="_blank" rel="noopener">传言阿里巴巴收购网易考拉业务</a>: 8月15日晚间，据财新报道，从接近交易的人士处得知，阿里巴巴收购网易考拉的交易已确定，交易对价20亿美元，阿里巴巴将以全现金方式支付，未来双方还将开展其他形式的合作和交易。截止发稿，网易和阿里巴巴集团对此交易的回复均为不予置评。</li><li><a href="https://www.cnbeta.com/articles/tech/878691.htm" target="_blank" rel="noopener">网易市值超过百度</a>: 周三美国大跌道指跌幅为3.05%报25479.42点；纳指跌3.02%报7773.94点，标普500指数跌2.93%报2840.60点。网易股价逆势上涨0.49%，市值超过百度。</li></ul><h2 id="文章与资源">文章与资源</h2><ul><li><a href="http://www.huxiu.com/article/312817.html?f=wangzhan" target="_blank" rel="noopener">创始人应该给自己发多少工资？</a></li><li><a href="https://www.youtube.com/watch?v=uwoD5YsGACg" target="_blank" rel="noopener">TCP 与 UDP 的区别</a></li><li>微信Mac版的最新更新支持设置代理了</li><li><a href="https://medium.com/@filipvitas/how-to-bypass-slider-captcha-with-js-and-puppeteer-cd5e28105e3c" target="_blank" rel="noopener">破解滑块认证: Puppeteer</a></li><li><a href="https://elixir.bootlin.com/linux/latest/source" target="_blank" rel="noopener">Linux内核代码检索网站: bootlin</a></li><li><a href="https://www.zerotier.com/" target="_blank" rel="noopener">Zerotier</a>: 开源的VPN方案</li><li><a href="https://www.plex.tv/zh/?langr=1" target="_blank" rel="noopener">Plex</a>: 流媒体服务框架</li><li><a href="https://www.zhihu.com/question/21359049/answer/622344230" target="_blank" rel="noopener">知乎上一篇折腾家用NAS的回答</a></li><li><a href="http://www.webmin.com/" target="_blank" rel="noopener">Webmin</a>：Unix/Linux网页管理工具</li><li><a href="https://emby.media/index.html" target="_blank" rel="noopener">Emby</a>: 类似Plex的流媒体框架</li></ul><h2 id="言论">言论</h2><ul><li>做得快不仅可以让你在单位时间内完成更多的工作，而且 因为你工作得很快，所以你会觉得成本低，从而倾向于做更多。 -- <a href="http://jsomers.net/blog/speed-matters" target="_blank" rel="noopener">出处</a>。</li><li>为了让我们的生活更轻松，最好只有一小部分代码库处理状态，其他代码都是无状态和纯的。实际上，这就是前端的 Redux 库取得巨大成功的主要原因。</li><li>20世纪50年代，建造月球基地是一项工程和技术挑战。 今天，它基本上是一个政治和经济挑战，难点是说服足够多的人，花时间和精力去做这件事是值得的。</li><li>「羁旅侨士，重帑在外，上间谋计，下与民事者，可亡也。」- 韩非子 · 亡徵》公元前250年（<a href="https://www.zhihu.com/question/340823422/answer/790657074" target="_blank" rel="noopener">解析</a>）</li></ul><h2 id="典故">典故</h2><h3 id="郑伯克段于鄢">郑伯克段于鄢</h3><p>初，郑武公娶于申，曰武姜，生庄公及共叔段。庄公寤生，惊姜氏，故名曰寤生，遂恶之。爱共叔段，欲立之。亟请于武公，公弗许。</p><p>及庄公即位，为之请制。公曰：“制，岩邑也，虢叔死焉。佗邑唯命。”请京，使居之，谓之京城大叔。祭仲曰：“都城过百雉，国之害也。先王之制：大都不过参国之一，中五之一，小九之一。今京不度，非制也，君将不堪。”公曰：“姜氏欲之，焉辟害？”对曰：“姜氏何厌之有！不如早为之所，无使滋蔓，蔓难图也。蔓草犹不可除，况君之宠弟乎！”公曰：“<strong>多行不义，必自毙</strong>，子姑待之。”</p><p>既而大叔命西鄙北鄙贰于己。公子吕曰：“国不堪贰，君将若之何？欲与大叔，臣请事之；若弗与，则请除之。无生民心。”公曰：“无庸，将自及。”大叔又收贰以为己邑，至于廪延。子封曰：“可矣，厚将得众。”公曰：“不义，不暱，厚将崩。”</p><p>大叔完聚，缮甲兵，具卒乘，将袭郑。夫人将启之。公闻其期，曰：“可矣！”命子封帅车二百乘以伐京。京叛大叔段，段入于鄢，公伐诸鄢。五月辛丑，大叔出奔共。</p><p>书曰：“郑伯克段于鄢。”段不弟，故不言弟；如二君，故曰克；称郑伯，讥失教也；谓之郑志。不言出奔，难之也。</p><p>遂寘姜氏于城颍，而誓之曰：“不及黄泉，无相见也。”既而悔之。颍考叔为颍谷封人，闻之，有献于公，公赐之食，食舍肉。公问之，对曰：“小人有母，皆尝小人之食矣，未尝君之羹，请以遗之。”公曰：“尔有母遗，繄我独无！”颍考叔曰：“敢问何谓也？”公语之故，且告之悔。对曰：“君何患焉？若阙地及泉，隧而相见，其谁曰不然？”公从之。公入而赋：“大隧之中，其乐也融融！”姜出而赋：“大隧之外，其乐也洩洩。”遂为母子如初。</p><p>君子曰：“颍考叔，纯孝也，爱其母，施及庄公。《诗》曰：‘孝子不匮，永锡尔类。’其是之谓乎。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://imgs.codewoody.com/uploads/big/d08f64882bfda4b582bc16d93fbe49d8.jpg&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Weekly" scheme="http://www.codewoody.com/categories/Weekly/"/>
    
    
      <category term="杂谈" scheme="http://www.codewoody.com/tags/%E6%9D%82%E8%B0%88/"/>
    
      <category term="科技新闻" scheme="http://www.codewoody.com/tags/%E7%A7%91%E6%8A%80%E6%96%B0%E9%97%BB/"/>
    
      <category term="转载" scheme="http://www.codewoody.com/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="Weekly" scheme="http://www.codewoody.com/tags/Weekly/"/>
    
  </entry>
  
  <entry>
    <title>温和穆斯林和极端穆斯林旧事</title>
    <link href="http://www.codewoody.com/posts/51087/"/>
    <id>http://www.codewoody.com/posts/51087/</id>
    <published>2019-08-09T07:29:16.000Z</published>
    <updated>2019-08-09T07:49:37.042Z</updated>
    
    <content type="html"><![CDATA[<p>前几年的时候的，国内回汉矛盾加上国际上以ISIS为代表的穆斯林恐怖主义的泛滥，导致针对穆斯林的批评大涨。于是很多穆斯林出来辩称说那些极端恐怖分子只是少数，并不能代表所有的穆斯林。但是喊打喊杀的极端穆斯林所抢占出来的生活空间，确实在相当大的程度上被所有其他的温和穆斯林所享有了。这种模式我们称之为极端穆斯林和温和穆斯林模式。即一部分人暴力充当打手，另一部分则态度模棱两可，向外界宣称自己的群体本质并不坏，但是回过头来享受打手产生的红利。</p><p>说这些是不是因为要重温就是，而是最近的香港人也开始反映出这个样子。国内很多公众号的文章在讨论香港的问题的时候，总是要强调说虽然游行队伍里面混有港独分子，但是他们并不能代表大多数的香港人，大多数香港人是不支持港独的。这看着很有迷惑性，也符合大家对于香港同胞的期待。不过，这其实就是典型的极端穆斯林和温和穆斯林套路。几十万人的队伍，如果大家都是反对港独的，那么这些占少数的港独分子怎么可能在队伍中来去自如，还打着港英旗帜，喊港独口号呢？事实上，如果有一个藏独在天通苑地铁站打出雪山狮子旗，喊西藏独立，他能站着出地铁站吗？游行队伍里能混杂港独分子，而未传出示威者与港独分子剧烈冲突的消息，这本是就是不正常。在一个有关香港讨论的电报群里，我也曾经质问过群里参与讨论的香港人是有参与发送中的各个小团体，工会之类的负责人出来谴责港独的，他们一直没有正面回答这个问题。</p><p>另一方面，这些激进港独在前面冲锋陷阵，确实是为整个游行队伍带来了巨大的利益的。这些激进派通常敢于出手，能制造激烈的警民冲突，甚至挺身冲击立法会，中联办，在舆论上有巨大的影响力。可能几千个港独分子的行动就能比几十万，甚至上百万的普通示威者产生更大的影响力。自然，参与反送中的重要人物们就不会愿意公开谴责港独，与港独分子划清界限，要是他们和港独做切割了，那谁来给他们充当打手冲锋陷阵呢？不仅如此，在反对派对港府提出的五大诉求中，就有包含一条要求赦免所有被捕的示威者，更是让各个港独分子更加越战越勇，毫无后顾之忧了。</p><p>因此，我们可以看出，这些参与游行香港人，绝大多数都是所谓的“温和穆斯林”。他们未必直接支持港独，但也不会是旗帜鲜明地反港独的。这些中间派是不是港独呢？我们叫他们温和的港独吧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前几年的时候的，国内回汉矛盾加上国际上以ISIS为代表的穆斯林恐怖主义的泛滥，导致针对穆斯林的批评大涨。于是很多穆斯林出来辩称说那些极端恐怖分子只是少数，并不能代表所有的穆斯林。但是喊打喊杀的极端穆斯林所抢占出来的生活空间，确实在相当大的程度上被所有其他的温和穆斯林所享有了
      
    
    </summary>
    
      <category term="杂谈" scheme="http://www.codewoody.com/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="杂谈" scheme="http://www.codewoody.com/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>Weekly-7</title>
    <link href="http://www.codewoody.com/posts/61389/"/>
    <id>http://www.codewoody.com/posts/61389/</id>
    <published>2019-08-05T02:48:41.000Z</published>
    <updated>2019-08-19T05:16:28.823Z</updated>
    
    <content type="html"><![CDATA[<h2 id="新闻">新闻</h2><h3 id="香港周一全港大罢工"><a href="https://cn.nytimes.com/china/20190805/hong-kong-protests/" target="_blank" rel="noopener">香港周一全港大罢工</a></h3><blockquote><p>一上午，香港大罢工及示威活动令这座城市陷入瘫痪。上百航班停飞，数百万人早间通勤受阻。午后1时左右，港铁全线服务陆续恢复，全港七区下午将举行罢工集会。香港特首林郑月娥警告称，抗议者将香港“推向不归路”。她指部分极端分子令事件变质，“挑战国家主权，危害一国两制”，并表示当局将“决心维护法治”。</p></blockquote><p>这轮香港抗议潮流是因为反对《逃犯条例》，不过《逃犯条例》之前已经被港府宣布寿终正寝，现在的抗议，又是为了什么呢？我看了这么多关于今天（5日）罢工的新闻，就是没看明白抗议者的诉求具体是什么？无非就是港独嘛，能不能「理直气壮」一点。</p><p>此前，美国总统特朗普在被采访时就香港的表态也是：「有人说，事情发展到一定程度时，他们会阻止。但这是香港和中国（内地）之间的事，因为香港是中国的一部分。必须由他们自己处理这个问题，不需要建议。」</p><p>话说为什么港府一直拒绝采用撤回修订草案？我的看法是，港府采用的「寿终正寝」的书法，意指推行这一条例受到阻力中中途停止，是一个比较中性的说法。反对派一直要求港府说「撤回」这个词，其实是让港府承认当初提出修改《逃犯条例》本身是错误的，是让港府认错。既然认错了，就要有人负责，进而可以剑指特首林郑月娥，要求其下台。</p><p>本来，让港府认错也未尝不可，对中央政府来说，让特首下台，也不是不行。2003年9月5日，时任特首就在推动《国家安全（立法条文）条例草案》引发大规模抗议之后，宣布撤回《国家安全（立法条文）条例草案》，并于2005年3月10日宣布以身体不适为由向中央呈辞。3月12日，国务院接纳其辞职。</p><p>有意思的是，十几年前的《国家安全（立法条文）条例草案》始末，和本次的《逃犯条例》颇有类似之处。当时，反对派举行的游行中，参与者也是大多穿黑色衣服。不过这次的抗议活动，港独色彩太浓厚，甚至有直接挑战国家主权的行为（如冲击中联办，扔国旗下海等），此时港府认错，如同向港独势力认错，届时，恐怕港独势力得寸进尺。另一方面，今日中国内部氛围和十几年前不可同日而语，中央政府，也有去正面刚废青的底气。</p><ul><li><a href="https://cn.reuters.com/article/hk-official-statement-updates-0807-wedn-idCNKCS1UX0NI?feedType=RSS&amp;feedName=CNTopGenNews" target="_blank" rel="noopener">香港正面临回归以来最严峻的局面 中央高度关注--港澳办主任</a></li><li><a href="https://cn.reuters.com/article/hk-unrest-official-statement-0806-tues-idCNKCS1UW0NF?feedType=RSS&amp;feedName=CNTopGenNews" target="_blank" rel="noopener">香港要“止暴制乱、恢复秩序” 中央坚定不移支持林郑月娥--港澳办（更新版）</a>: “反对派逼迫香港特首林郑月娥辞职的企图注定不能得逞，中央对特首的支持是坚定不移、毫不动摇的。”港澳办发言人在发布会上表示。</li><li><a href="/knowledge-base/backups/香港问题中的一些谣言和误解.html">香港问题中的一些谣言和误解</a></li><li><a href="https://matters.news/@leungkaichihk/%E9%A6%99%E6%B8%AF%E4%B9%8B%E5%A4%8F-%E8%AA%A4%E8%AE%80%E8%88%87%E7%9C%9F%E7%9B%B8-zdpuB37rgNnWAtUraUQCdmwohCCNGqLbs5cEmescBxTdbSfas" target="_blank" rel="noopener">香港之夏：誤讀與真相</a></li><li>一个讨论相关问题的Telegram群<a href="https://t.me/hkchats" target="_blank" rel="noopener">https://t.me/hkchats</a></li><li><a href="/_posts/2019-08-09-温和穆斯林和极端穆斯林旧事.html">温和穆斯林和极端穆斯林旧事</a></li><li><a href="https://cn.reuters.com/article/china-cathay-pacific-warning-0810-idCNKCS1V000K?feedType=RSS&amp;feedName=CNTopGenNews" target="_blank" rel="noopener">8月9日中国民航局向香港国泰航空发出重大航空安全风险警示</a>: 指其近期在多起事件中暴露出的安全风险及隐患，要求对参与和支持非法游行示威等的人员立即停止其执飞内地航班。</li></ul><h3 id="人民币汇率破7"><a href="https://cn.reuters.com/article/column-yuan-fx-bottom-0805-idCNKCS1UV0CS?feedType=RSS&amp;feedName=vbc_CN_columnist_all&amp;virtualBrandChannel=14356" target="_blank" rel="noopener">人民币汇率破7</a></h3><p>8月5日，美元兑人民币汇率骤然波动，离岸、在岸价格均小幅升破 “7”这一整数关口。不过，这次汇率调整是中国央行放任的结果。<a href="https://www.bbc.com/zhongwen/simp/business-49250694" target="_blank" rel="noopener">中国央行不再像以前死死守着美元兑人民币“七元”的心理关口，而是放手让人民币自由贬值</a>。</p><p><img src="https://imgs.codewoody.com/uploads/big/f89c218db2401cbc26bae3a8a5718705.png"></p><p>有意思的是，这次因为中国央行没有干预汇率，而导致同一天<a href="https://cn.nytimes.com/business/20190806/us-china-yuan-renminbi-trump/" target="_blank" rel="noopener">美国将中国列为汇率操纵国</a>了。</p><h3 id="暂停大陆影片和人员参加2019年金马影展"><a href="https://www.zhihu.com/question/339100249" target="_blank" rel="noopener">暂停大陆影片和人员参加2019年金马影展</a></h3><p><img src="https://imgs.codewoody.com/uploads/big/e82ba6c39ec03aab0c9da728dc13a0cc.jpg"></p><h3 id="华为发布鸿蒙系统">华为发布鸿蒙系统</h3><blockquote><p>8月9日，万众瞩目的华为开发者大会如期举行，华为消费者业务CEO余承东重磅发布鸿蒙操作系统(HarmonyOS)！据悉，鸿蒙是全世界第一个基于微内核的全场景分布式操作系统！非常巧的是，今天恰巧是华为消费者业务 CEO 余承东 50岁生日。</p></blockquote><p><img src="https://imgs.codewoody.com/uploads/big/7f08c1fc9c606188959792b1af666e80.gif"></p><p>鸿蒙的四大技术特性：</p><ol type="1"><li>分布式架构首次用于终端OS，实现跨终端无缝协同体验</li><li>确定时延引擎和高性能IPC技术实现系统天生流畅</li><li>基于微内核架构重塑终端设备可信安全</li><li>通过统一IDE支撑一次开发，多端部署，实现跨终端生态共享</li></ol><p>更多信息参考:</p><ul><li><a href="https://www.zhihu.com/question/339567108" target="_blank" rel="noopener">如何看待华为 2019 年 8 月 9 日正式发布的 HarmonyOS 鸿蒙系统？</a></li><li><a href="https://mp.weixin.qq.com/s/ly4GOOQXnwIJWn-50Ky4pw" target="_blank" rel="noopener">华为鸿蒙问世！余承东喊话安卓：全球首款微内核全场景分布式OS开源！</a></li></ul><h3 id="中国民航局向香港国泰航空发出重大航空安全风险警示"><a href="https://cn.reuters.com/article/china-cathay-pacific-warning-0810-idCNKCS1V000K?feedType=RSS&amp;feedName=CNTopGenNews" target="_blank" rel="noopener">中国民航局向香港国泰航空发出重大航空安全风险警示</a></h3><blockquote><p>中国民航局周五向香港国泰航空发出重大航空安全风险警示，指其近期在多起事件中暴露出的安全风险及隐患，要求对参与和支持非法游行示威等的人员立即停止其执飞内地航班。</p><p>民航局网站发文称，近期，香港国泰航空先后发生飞行人员参与暴力冲击被控暴动罪却未被停止飞行活动，以及恶意泄露航班旅客信息等事件，存在严重威胁航空安全的隐患，造成了恶劣的社会影响，增加了香港至内地的输入性航空安全风险。</p><p>为维护航空运输秩序，切实保护旅客安全，防范航空活动对空中、地面和水面第三人发生损害，民航局在安全风险警示中，对香港国泰航空明确提出三点要求。</p><p>一是自2019年8月10日零时起，对所有参与和支持非法游行示威、暴力冲击活动，以及有过过激行为的人员，立即停止其执飞内地航班或执行与内地航空运输活动相关的一切职务活动。</p><p>二是自2019年8月11日零时起，向其在内地的运行合格审定机构报送所有飞往内地和飞越内地领空的机组人员身份信息，未经审核通过，不予接收该航班。</p><p>三是于2019年8月15日零时前，向其在内地的运行合格审定机构报送公司加强内部管控、提升飞行安全和安保水平的措施方案。</p><p>民航局将视香港国泰航空对上述警示要求的执行情况，依法依规监管处置。同日，民航局责成民航中南地区管理局行政约见了国泰航空。</p></blockquote><p>国泰航空最近似乎比较跳，涉及的事件包括：</p><ol type="1"><li>7月26日国泰航空空服协会煽动在香港机场航站楼内进行示威活动 <img src="https://wx3.sinaimg.cn/mw690/79594e60ly1g5a3d6rxyvj20n01ds11i.jpg"></li><li>国泰航空副机长廖颂贤参与了7·28上环的暴动并被<a href="http://news.dwnews.com/china/news/2019-08-08/60144629.html" target="_blank" rel="noopener">逮捕</a>，但获得<a href="http://www.takungpao.com/news/232109/2019/0802/330032.html" target="_blank" rel="noopener">保释后国泰航空依然让他执飞航班</a></li><li><a href="http://news.dwnews.com/china/news/2019-08-08/60144629.html" target="_blank" rel="noopener">国泰航空的员工泄露了前往成都参加世界警察和消防员运动会的香港警队代表队成员的航班信息</a>。</li></ol><h3 id="其他新闻">其他新闻</h3><ul><li><a href="https://cn.nytimes.com/morning-brief/20190805/xi-cousin-australia-hong-kong-monday-strike/?utm_source=tw-nytimeschinese&amp;utm_medium=social&amp;utm_campaign=cur" target="_blank" rel="noopener">美国二十四小时内发生两起大规模枪击案</a></li><li><a href="https://cn.nytimes.com/morning-brief/20190805/xi-cousin-australia-hong-kong-monday-strike/?utm_source=tw-nytimeschinese&amp;utm_medium=social&amp;utm_campaign=cur" target="_blank" rel="noopener">习近平表弟被澳大利亚当局调查</a>: 习近平表弟齐明为澳大利亚公民，今日卷入一起针对有组织犯罪，洗钱，以及滥用移民政策的调查中。</li><li><a href="https://www.williamlong.info/archives/5788.html" target="_blank" rel="noopener">苹果信用卡8月6日起正式向用户开放注册</a></li><li><a href="https://cn.reuters.com/article/earthquake-taiwan-0808-thur-idCNKCS1UY012?feedType=RSS&amp;feedName=CNTopGenNews" target="_blank" rel="noopener">8月8日上午5:28，台湾东部海域发生里氏6级地震</a>。</li><li><a href="https://earther.gizmodo.com/satellite-images-show-vast-swaths-of-the-arctic-on-fire-1836500468" target="_blank" rel="noopener">北极圈发生大火</a></li><li><a href="http://www.huxiu.com/article/312640.html?f=wangzhan" target="_blank" rel="noopener">鹿晗的《上海堡垒》扑街</a>：流量明星的时代是真的要过去了。</li><li><a href="https://www.williamlong.info/archives/5789.html" target="_blank" rel="noopener">华为向伟创力索赔4亿</a>，伟创力则表示仍希望能合作。伟创力是华为的代工厂商，其在美国政府将华为纳入「实体清单」之后，伟创力扣留了其在珠海工场的华为价值约4亿的物资，包括生产设备，原材料和半成品。</li><li><a href="http://www.xinhuanet.com/politics/2019-08/09/c_1124855449.htm" target="_blank" rel="noopener">超强台风「利奇马」登陆江浙沪</a></li></ul><h2 id="资源">资源</h2><ul><li><a href="https://github.com/shubhampathak/autosetup" target="_blank" rel="noopener">autosetup</a>: 一个 Bash 脚本，可以在 Debian 系的发行版上，让用户通过图形界面，一次性选择所要安装的应用程序，主要用于新系统的装机 <img src="https://user-images.githubusercontent.com/20816337/58801810-399ecb80-8629-11e9-8dd7-eb6169195a9b.png"></li><li><a href="https://github.com/dongyuwei/hallelujahIM" target="_blank" rel="noopener">哈利路亚英文输入法</a> <img src="https://github.com/dongyuwei/hallelujahIM/raw/master/snapshots/suggestions2.png"></li><li><a href="hhttps://github.com/python-visualization/folium" target="_blank" rel="noopener">folium</a>: 一个Python的地图可视化库</li><li><a href="https://www.bilibili.com/video/av62515899?from=search&amp;seid=16487302491615977358" target="_blank" rel="noopener">马前卒的睡前消息出视频版了，每周二更新</a>。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://imgs.codewoody.com/uploads/big/a798cdd43a734a89cc98e9f0fb9955d6.jpg&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Weekly" scheme="http://www.codewoody.com/categories/Weekly/"/>
    
    
      <category term="杂谈" scheme="http://www.codewoody.com/tags/%E6%9D%82%E8%B0%88/"/>
    
      <category term="科技新闻" scheme="http://www.codewoody.com/tags/%E7%A7%91%E6%8A%80%E6%96%B0%E9%97%BB/"/>
    
      <category term="转载" scheme="http://www.codewoody.com/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="Weekly" scheme="http://www.codewoody.com/tags/Weekly/"/>
    
  </entry>
  
  <entry>
    <title>Lychee使用中的头疼bug</title>
    <link href="http://www.codewoody.com/posts/3710/"/>
    <id>http://www.codewoody.com/posts/3710/</id>
    <published>2019-07-31T05:52:28.000Z</published>
    <updated>2019-07-31T06:07:00.291Z</updated>
    
    <content type="html"><![CDATA[<p>之前我使用了<a href="http://localhost:4000/posts/65048/" target="_blank" rel="noopener">Lychee</a>来搭建我博客的图床。使用Lychee中可能会出现一些头疼的问题。</p><h2 id="无法上传图片">无法上传图片</h2><p>一般出现这种问题时，查看Nginx的<code>error.log</code>目录可以发现类似下面形式的错误：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2019/07/31 05:47:44 [crit] 306#306: *149 open() &quot;/var/tmp/nginx/client_body/0000000002&quot; failed (13: Permission denied), client: 172.18.0.1, server: _, request: &quot;POST /php/index.php HTTP/1.0&quot;, host: &quot;imgs.codewoody.com&quot;, referrer: &quot;https://imgs.codewoody.com/&quot;</span><br></pre></td></tr></table></figure><p>显示权限错误。导致做个错误的原因是对于<code>/var/tmp/nginx/client_body</code>这一目录，nginx缺乏写入的权限。解决方法如下：</p><p>首先进入容器内部：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it lychee_lychee_1 bash</span><br><span class="line">cd /var/tmp/nginx/client_body</span><br></pre></td></tr></table></figure><p>这一目录的所有者是<code>abc</code>用户，所在的group也是是<code>abc</code>。我们可以将<code>nginx</code>用户添加到这个组，并且为目录<code>/var/tmp/nginx/client_body</code>赋予组写入权限：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">adduser nginx abc</span><br><span class="line">chmod g+w .</span><br></pre></td></tr></table></figure><p>问题解决。</p><ul><li><a href="https://serverfault.com/questions/727908/var-lib-nginx-client-body-0000000011-failed-13-permission-denied-with-node-j" target="_blank" rel="noopener">/var/lib/nginx/client_body/0000000011 failed (13: Permission denied) with node.js</a></li><li><a href="https://wincent.com/wiki/Fixing_nginx_client_body_temp_permission_denied_errors" target="_blank" rel="noopener">Fixing nginx client body temp permission denied errors</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;之前我使用了&lt;a href=&quot;http://localhost:4000/posts/65048/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Lychee&lt;/a&gt;来搭建我博客的图床。使用Lychee中可能会出现一些头疼的问题。&lt;/p&gt;
&lt;h2 id=&quot;
      
    
    </summary>
    
      <category term="Debug" scheme="http://www.codewoody.com/categories/Debug/"/>
    
    
      <category term="linux" scheme="http://www.codewoody.com/tags/linux/"/>
    
      <category term="Debug" scheme="http://www.codewoody.com/tags/Debug/"/>
    
      <category term="docker" scheme="http://www.codewoody.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>Weekly - 6</title>
    <link href="http://www.codewoody.com/posts/41391/"/>
    <id>http://www.codewoody.com/posts/41391/</id>
    <published>2019-07-30T04:24:24.000Z</published>
    <updated>2019-08-09T07:50:46.124Z</updated>
    
    <content type="html"><![CDATA[<h2 id="新闻">新闻</h2><h3 id="美国对华追加3000亿美元关税">美国对华追加3000亿美元关税</h3><figure><img src="https://imgs.codewoody.com/uploads/big/34e4e45b3b4a73bb3d88c868ef364c61.jpeg" alt="2019年7月30日，上海，中美经贸磋商举行前外滩附近悬挂的中美两国国旗。"><figcaption>2019年7月30日，上海，中美经贸磋商举行前外滩附近悬挂的中美两国国旗。</figcaption></figure><p>美国总统特朗普周四表示，将从9月1日起对剩余的3,000亿美元从中国进口商品加征10%的关税，之前中美两国谈判代表的最新一轮磋商未能取得进展。</p><p>市场反应激烈。布兰特原油暴挫7.2%，创三年多来最大单日跌幅，美股由升转跌，美国公债价格上扬。</p><ul><li><a href="https://cn.reuters.com/article/column-russell-china-us-trade-war-0802-idCNKCS1US0EO?feedType=RSS&amp;feedName=vbc_CN_columnist_all&amp;virtualBrandChannel=14356" target="_blank" rel="noopener">《RUSSELL专栏》美中或许自认握有贸易战制胜牌 双方都是虚张声势</a></li></ul><h3 id="华为公布上半年业绩">华为公布上半年业绩</h3><p>销售收入 4013 亿人民币，同比增长 23.2%，净利润率 8.7%，这是华为 2019 年上半年交出的成绩单，也是该公司首次公开发布半年业绩。</p><p>在 7 月 30 日的发布会上，华为公司董事长梁华介绍了各项具体业务的表现：上半年智能手机出货量达到 1.18 亿部，同比增长 24%，平板电脑同比增长 10%，PC 增长 3 倍，可穿戴设备增长 2 倍，云服务生态服务用户超过 5 亿，消费者业务收入为 2208 亿元。此外，华为已经拿到了 50 份商用 5G 合同，全球基站发货超过 15 万个。</p><h3 id="大陆居民赴台个人游试点暂停"><a href="https://www.traveldaily.cn/article/130835" target="_blank" rel="noopener">大陆居民赴台个人游试点暂停</a></h3><p>7月31日下午2点左右，文化和旅游部网站正式发布海峡两岸旅游交流协会关于暂停大陆居民赴台个人游试点的公告。公告称：鉴于当前两岸关系，决定自2019年8月1日起暂停47个城市大陆居民赴台个人游试点。</p><p><img src="https://imgs.codewoody.com/uploads/big/f0a92a32f9510affb78a2d99d1a9b893.png"></p><p>之前两岸关系紧张的时候一般是会限制团体游客，但是自2011年自由行开通依赖，大陆方面还从未就自由行进行限制。另外，这次禁令事发非常突然，7月31日发布，第二天就开始施行。当天上午十点多才陆续有小道消息。</p><p>目前关于为何会推出本轮禁令的目的尚不明确，原因众说纷纭。有人说是提前就台湾大选增加压力，也有说是因为台湾方面牵涉香港反送中过多，被大陆方面警告。</p><ul><li><a href="https://cn.reuters.com/article/china-tw-tourism-cctv-0801-idCNKCS1UR40Z?feedType=RSS&amp;feedName=CNTopGenNews" target="_blank" rel="noopener">中国国台办称民进党严重破坏大陆居民赴台个人游试点的基础和条件</a></li></ul><h3 id="美联储降息25个基点"><a href="https://www.zhihu.com/question/338065122" target="_blank" rel="noopener">美联储降息25个基点</a></h3><p>这是美联储十年以来首次降息。</p><ul><li><a href="https://cn.reuters.com/article/column-chengshi-us-fed-0801-idCNKCS1UR37C?feedType=RSS&amp;feedName=vbc_CN_columnist_all&amp;virtualBrandChannel=14356" target="_blank" rel="noopener">《程实专栏》美联储降息：预期之内 规则之外</a></li></ul><h3 id="河北工程大学留学生威胁女生被遣返"><a href="https://news.sina.com.cn/c/2019-08-01/doc-ihytcitm6158858.shtml" target="_blank" rel="noopener">河北工程大学留学生威胁女生被遣返</a></h3><p>河北工程大学一校园自媒体账号“矿院日报社”发布消息称，7月31日18时许，其收到同学投稿，称自己遭到一名巴基斯坦留学生骚扰（舌吻和袭胸）。当日20时，被侵犯女学生到开元派出所报警，民警根据女生描述将犯罪嫌疑人带到派出所接受调查。该账号运营人员告诉新京报记者，相关校领导连夜处理此事，目前正在等待处理结果。</p><p>目前，警方依据《中华人民共和国治安处罚法》第四十四条之规定，对陶文做出行政拘留十日处罚，并遣送出境。</p><h3 id="天机芯登上nature封面"><a href="https://zhuanlan.zhihu.com/p/76124524" target="_blank" rel="noopener">「天机芯」登上Nature封面</a></h3><p>好消息！清华大学开发出全球首款异构融合类脑芯片，登上了最新一期 Nature 封面！研究团队还展示了由该芯片驱动的 “无人驾驶自行车” ，这项研究由清华大学类脑计算研究中心施路平教授带队，历时 7 年，终于修成正果！</p><p><img src="https://imgs.codewoody.com/uploads/big/61c08b803635a820b6d8b384515622f9.jpg"></p><h3 id="曼谷发生爆炸"><a href="https://cn.reuters.com/article/thailand-blasts-police-0802-idCNKCS1US0IO?feedType=RSS&amp;feedName=CNTopGenNews" target="_blank" rel="noopener">曼谷发生爆炸</a></h3><p>泰国一名高级警官称，周五（8月2日）有六枚炸弹分别在曼谷三个地点爆炸，一个爆炸装置启动前被排除。</p><p>警官Kamtorn Uicharoen告诉路透，三枚炸弹在瓦塔纳路(Chaeng Wattana)的政府大楼爆炸，一枚没有爆炸。另外两枚在琼龙西(Chong Nonsi)地区爆炸。</p><p>“这两个地区的炸弹是由定时器引爆的自制炸弹，”他说。</p><p>一枚“乒乓炸弹”在Suan Luang地区爆炸。(完)</p><h3 id="其他新闻简讯">其他新闻简讯</h3><ul><li><a href="https://www.caishimv.com/index.php/web/web_archives/info_details.html?id=9754" target="_blank" rel="noopener">小红书疑似被各大安卓应用商店下架</a>：七麦数据的下架监控显示小红书APP在华为手机、魅族手机均被下架。目前，除小米商城和IOS系统的Apple store外，包括华为、OPPO、魅族、一加等在内的品牌商手机均无法下载小红书应用。</li><li><a href="https://www.ithome.com/0/436/158.htm" target="_blank" rel="noopener">京阿尼的一台服务器火灾中逃过一劫，原画数据已经恢复</a></li><li><a href="https://www.williamlong.info/archives/5779.html" target="_blank" rel="noopener">暴风冯鑫涉嫌犯罪被采取强制措施</a>: 没错，就是暴风影音的那个暴风集团。</li><li><a href="https://www.lieyunwang.com/archives/457371" target="_blank" rel="noopener">字节跳动入局全网搜索引擎</a>:7月31日晚，字节跳动在其“字节跳动招聘”公众号上正式对外为“字节跳动搜索部门”招聘员工。</li><li><a href="http://www.lieyunwang.com/archives/457376" target="_blank" rel="noopener">思科中国区裁员</a></li><li><a href="https://www.intel.cn/content/www/cn/zh/products/docs/processors/core/10th-gen-core-mobile-processors-brief.html" target="_blank" rel="noopener">英特尔证书发布11款十代酷睿处理器</a></li><li><a href="https://cn.reuters.com/article/us-withdraw-inf-russia-0802-idCNKCS1US116?feedType=RSS&amp;feedName=CNTopGenNews" target="_blank" rel="noopener">美国正式退出中导条约</a></li></ul><h2 id="资源">资源</h2><ul><li><a href="https://dynamicwallpaper.club/" target="_blank" rel="noopener">macOS动态照片工具</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://imgs.codewoody.com/uploads/big/34e4e45b3b4a73bb3d88c868ef364c61.jpeg&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Weekly" scheme="http://www.codewoody.com/categories/Weekly/"/>
    
    
      <category term="杂谈" scheme="http://www.codewoody.com/tags/%E6%9D%82%E8%B0%88/"/>
    
      <category term="科技新闻" scheme="http://www.codewoody.com/tags/%E7%A7%91%E6%8A%80%E6%96%B0%E9%97%BB/"/>
    
      <category term="转载" scheme="http://www.codewoody.com/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="Weekly" scheme="http://www.codewoody.com/tags/Weekly/"/>
    
  </entry>
  
  <entry>
    <title>机动车占用非机动车道停车/行驶的法律问题</title>
    <link href="http://www.codewoody.com/posts/4757/"/>
    <id>http://www.codewoody.com/posts/4757/</id>
    <published>2019-07-28T05:26:02.000Z</published>
    <updated>2019-07-29T02:28:37.286Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://www.cnca.gov.cn/bsdt/ywzl/flyzcyj/zcfg/201707/t20170711_54697.shtml" target="_blank" rel="noopener">《中华人民共和国道路交通安全法》</a>第七十条</p><blockquote><p>第七十条 驾驶自行车、电动自行车、三轮车在路段上横过机动车道，应当下车推行，有人行横道或者行人过街设施的，应当从人行横道或者行人过街设施通过;没有人行横道、没有行人过街设施或者不便使用行人过街设施的，在确认安全后直行通过。</p><p>因非机动车道被占用无法在本车道内行驶的非机动车，可以在受阻的路段借用相邻的机动车道行驶，并在驶过被占用路段后迅速驶回非机动车道。机动车遇此情况应当减速让行。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;http://www.cnca.gov.cn/bsdt/ywzl/flyzcyj/zcfg/201707/t20170711_54697.shtml&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;《中华人民共和国道路交通安全法》&lt;/a&gt;第
      
    
    </summary>
    
      <category term="杂谈" scheme="http://www.codewoody.com/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="杂谈" scheme="http://www.codewoody.com/tags/%E6%9D%82%E8%B0%88/"/>
    
      <category term="法律" scheme="http://www.codewoody.com/tags/%E6%B3%95%E5%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>Python: 获取经验分布(EDF)的方法</title>
    <link href="http://www.codewoody.com/posts/42351/"/>
    <id>http://www.codewoody.com/posts/42351/</id>
    <published>2019-07-26T05:36:50.000Z</published>
    <updated>2019-07-26T06:00:29.981Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是经验分布edf">什么是经验分布EDF</h2><p><a href="https://zh.wikipedia.org/wiki/%E7%BB%8F%E9%AA%8C%E5%88%86%E5%B8%83%E5%87%BD%E6%95%B0" target="_blank" rel="noopener">经验分布函数</a>（Empirical Distribution Function）是统计学中一个与样本的经验测度有关的分布函数。该累积分布函数是在所有<span class="math inline">\(n\)</span>个数据点上都跳跃<span class="math inline">\(1/n\)</span>的阶跃函数。对于被测随机变量的某个可能取值而言，EDF在这个取值处的值为所有观测样本中小于或者等于该取值的比例。</p><p>经验分布函数是对用于生成样本的累积分布函数的估计。根据Glivenko-Cantelli定理可以证明，经验分布函数以概率1收敛至这一累积分布函数。</p><p>令<span class="math inline">\((x_1, \dots, x_n)\)</span>为独立同分布的的实随机变量，它们共同的累积分布函数为<span class="math inline">\(F(t)\)</span>。于是，经验分布函数可以定义为</p><p><span class="math display">\[\begin{equation}\hat{F}_{n}(t)=\frac{\text { number of elements in the sample } \leq t}{n}=\frac{1}{n} \sum_{i=1}^{n} \mathbf{1}_{x_{i} \leq t}\end{equation}\]</span></p><p>其中<span class="math inline">\(\mathbf{1}_{A}\)</span> 为事件 <span class="math inline">\(A\)</span> 的指示函数。 <span class="math inline">\(\mathbf{1}_{x_i \leq t}\)</span>为<span class="math inline">\(p=F(t)\)</span>是伯努利随机变量。因而<span class="math inline">\(n \hat{F}_n(t)\)</span>则是期望为<span class="math inline">\(nF(t)\)</span>，方差为<span class="math inline">\(nF(t)(1 - F(t))\)</span>的二项随机变量。这意味着<span class="math inline">\(\hat{F}_n(t)\)</span>是<span class="math inline">\(F_(t)\)</span>的无偏估计。</p><figure><img src="https://imgs.codewoody.com/uploads/big/9bb7d75a59e3cc5467cd6461b3732198.png" alt="蓝线为经验分布函数，黑色长条表示相应的样本，灰线则是用于生成样本的累积分布函数。"><figcaption>蓝线为经验分布函数，黑色长条表示相应的样本，灰线则是用于生成样本的累积分布函数。</figcaption></figure><h2 id="python实现">Python实现</h2><p>从上面的定义来看，其实自己实现一个EDF函数也并不困难。这里有一个例子：<a href="https://www.codementor.io/kripanshubharga/calculate-ecdf-in-python-gycltzxi3" target="_blank" rel="noopener">Calculate ECDF in Python</a>。<code>statsmodels</code>这个库里面提供了现成的<a href="https://www.statsmodels.org/devel/generated/statsmodels.distributions.empirical_distribution.ECDF.html" target="_blank" rel="noopener"><code>ECDF</code>函数</a>。</p><blockquote><p>这里函数名字是ECDF，其中C表示累积分布。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> statsmodels.distributions.empirical_distribution <span class="keyword">import</span> ECDF</span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ecdf = ECDF([<span class="number">3</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">4</span>])</span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ecdf([<span class="number">3</span>, <span class="number">55</span>, <span class="number">0.5</span>, <span class="number">1.5</span>])</span><br><span class="line">array([ <span class="number">0.75</span>,  <span class="number">1.</span>  ,  <span class="number">0.</span>  ,  <span class="number">0.25</span>])</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;什么是经验分布edf&quot;&gt;什么是经验分布EDF&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E7%BB%8F%E9%AA%8C%E5%88%86%E5%B8%83%E5%87%BD%E6%95%B0&quot; target
      
    
    </summary>
    
      <category term="科研" scheme="http://www.codewoody.com/categories/%E7%A7%91%E7%A0%94/"/>
    
    
      <category term="教程" scheme="http://www.codewoody.com/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="数学" scheme="http://www.codewoody.com/tags/%E6%95%B0%E5%AD%A6/"/>
    
      <category term="python" scheme="http://www.codewoody.com/tags/python/"/>
    
      <category term="科研" scheme="http://www.codewoody.com/tags/%E7%A7%91%E7%A0%94/"/>
    
  </entry>
  
  <entry>
    <title>Weekly - 5</title>
    <link href="http://www.codewoody.com/posts/41199/"/>
    <id>http://www.codewoody.com/posts/41199/</id>
    <published>2019-07-23T05:52:57.000Z</published>
    <updated>2019-08-06T03:49:27.130Z</updated>
    
    <content type="html"><![CDATA[<p>最近香港那边热闹的狠，有意思的是，江泽民怒斥香港记者的视频又出现在了的油管的推荐表里。不过现在点进去看里面的评论，大多都是支持江的言论了，感慨自己当时确实是naive，不理解蛤哈的深意。现在回过头看今年来的海内外乱象，才知道他确实说的对。</p><p>其实也就是十余年的光景，世事已不可同日而语矣。</p><h2 id="新闻">新闻</h2><h3 id="鲍里斯约翰逊成为新一任英国首相"><a href="http://www.xinhuanet.com/world/2019-07/23/c_1124789557.htm" target="_blank" rel="noopener">鲍里斯·约翰逊成为新一任英国🇬🇧首相</a></h3><p><img src="https://imgs.codewoody.com/uploads/big/e13d52707f66863d9863cb22b18eacf5.jpg"></p><p>23日，鲍里斯.约翰逊(被称为英国版特朗普)正式当选执政党保守党党魁，在获得女王批准之后将接替特雷莎·梅出任英国首相。鲍里斯票数：92,153 杰里米·亨特票数：46,656 。参与投票的是16万保守党党员。</p><p>现年55岁的约翰逊是“脱欧派”领袖，曾多次强调英国必须在10月31日的新期限前完成“脱欧”，哪怕这样做的代价是“无协议脱欧”，他表示将与欧盟就新“脱欧”协议谈判。约翰逊是英国政坛鲜见的特色人物：反正统、破规矩、不修篇幅，且花絮不断。一头杂乱金发也是出名的个性标志。他也因2008年北京奥运会闭幕式上代表伦敦去接奥运会旗和火种而为中国民众熟知。</p><ul><li><a href="https://www.bbc.com/zhongwen/simp/uk-49086056" target="_blank" rel="noopener">英国新首相约翰逊：一名记者出身的领导人</a></li><li><a href="https://zhuanlan.zhihu.com/p/71608056" target="_blank" rel="noopener">应对硬脱欧，鲍里斯酿大招！减免买房印花税，让英国做税收天堂</a></li></ul><h3 id="华为招聘应届博士年薪超过200万"><a href="https://www.zhihu.com/question/336418328/answer/759298963" target="_blank" rel="noopener">华为招聘应届博士年薪超过200万</a></h3><p><img src="https://imgs.codewoody.com/uploads/big/f367b414a40dd1ff08320bf773b4acd3.jpg"></p><blockquote><p>都是博士，怎么差距那么大呢？？？</p></blockquote><h3 id="复旦女博士劈腿丑闻"><a href="https://www.zhihu.com/question/336719951" target="_blank" rel="noopener">复旦女博士劈腿丑闻</a></h3><blockquote><p>7月24日至25日，网传这样一条消息：复旦大学附属中山医院医生陆某为了和复旦大学女博士李某在一起而抛家弃子。但在他给李某买房、买车、买包包、送珠宝以及给她署名和刊发几篇高质量医学文章后，李某却和他分手。</p><p>经受不住打击，陆某选择了服30颗安眠药自杀。也有消息称，陆某自杀后，被抢救过来。</p></blockquote><ul><li><a href="https://news.ifeng.com/c/7obH6tZYJYu" target="_blank" rel="noopener">复旦女博士“劈腿”致男医生自杀？官方回应</a></li><li><a href="https://www.zhihu.com/question/336815292" target="_blank" rel="noopener">5 篇 SCI 相当于什么？需要花费多少时间和精力？</a></li><li><a href="https://www.zhihu.com/question/336818804" target="_blank" rel="noopener">「送」SCI 在学术圈是什么操作？是学术不端吗？</a></li><li><a href="https://www.zhihu.com/question/336719951/answer/761750649" target="_blank" rel="noopener">学术圈五大蛊王吃瓜汇总</a></li></ul><h3 id="刘强东案149页警方档案公布">刘强东案149页警方档案公布</h3><p>具体内容包括：</p><ol type="1"><li>女学生的友人8月30日拨打911报案的三起电话录音文本文件；</li><li>刘强东去年9月10日接受警方问话的电话录音，时长约30分钟；</li><li>刘强东进入女方公寓及在明大商学院内遭逮捕的照片；</li><li>女学生与当事人在中国的好友、男友等人的短信记录；</li><li>案发当日餐馆、公寓的高清版监控录像共9段，高清照片21张；</li><li>警方的全案报告，包括4份警方出警和问询记录报告，最长的一篇多达149页。</li></ol><p>刘强东涉嫌性侵案的149页的档案中，内容包括对刘强东及其他当事人和目击者访问的笔录，在警察报告的当事人访谈部分写道，女方在警方的询问下，表示刘强东将自己压在身下、举起了自己的双腿，进行了性器官插入，在这个过程中刘强东还询问女方是否处于安全期，性行为持续了约两分钟。</p><p>另外，关于女方在整个案件过程中的态度和言辞转变也在这些材料中披露出来，包括女方曾经想经常承认其性行为是自愿的，但后面又多次改变了自己的论述。</p><h3 id="运营商放弃对菏泽怡海花园进行网络覆盖的努力"><a href="https://www.zhihu.com/question/336809415" target="_blank" rel="noopener">运营商放弃对菏泽怡海花园进行网络覆盖的努力</a></h3><p><img src="https://imgs.codewoody.com/uploads/big/30d611818d950dc5b77c72d5e6d647a0.jpg"> <img src="https://imgs.codewoody.com/uploads/big/06e45bce25078ab94b432465abd96acd.jpg"></p><h3 id="郭文贵被指为中国间谍"><a href="https://www.bbc.com/zhongwen/simp/chinese-news-49087533" target="_blank" rel="noopener">郭文贵被指为中国间谍</a></h3><p>最近中国流亡美国的富商郭文贵被与其有商业争端的公司指为中国的间谍。两年前在海外媒体爆料出名的郭文贵此前也承认他曾经为中国国家安全部门做事。</p><p>据《华尔街日报》报道，郭文贵和Strategic Vision公司自2018年1月就开始产生商业纠纷。法庭文件显示，当时郭文贵同该公司签订了一份900万美元的雇佣合同。郭文贵已经向该公司支付了100万美元，用于启动调查。</p><p>Strategic Vision提供文件向法庭显示，郭文贵要求该公司搜集一些人的财务，社交媒体和旅行方面的资料。郭文贵提供的名单是一些与中共高层有联系的中国人。</p><p>法庭文件显示，这家调查公司还专门招募了前情报人员或执法人员进行上述调查。但他们查明，郭文贵名单上前15个人的名字已经被美国政府列为“记录受保护”的人，即不得对外透露这些人士的资料。</p><p>因此他们认为这些人士的移民状况被当局列为“不能对外公开”，可能意味着这些是帮助美国政府的人。他们认为郭文贵并不打算利用他们的调查结果对付中共，而且郭文贵也并非如他所说的那样是异见者。</p><h3 id="其他新闻汇总">其他新闻汇总</h3><ul><li>7月19日，天宫二号返回地球，受控坠毁，残害落入南太平洋</li><li>阿联酋在沙漠中建设了世界最大的太阳能电厂，一共安装了320万块太阳能板，可以为9万人供电。峰值发电量是1180兆瓦，相比之下，美国最大的太阳能厂是569兆瓦。</li><li>6月27日，美国参议院通过法律要求减少电网自动化程度，不得完全采用计算机控制。目的是防止电网遭受黑客攻击时，出现大规模停电。</li><li>欧盟新规要求新生产的电动汽车必须配备噪声发生器。</li><li>7月23日，美国《财富》杂志每年发布的“财富世界500强”榜单。小米上榜并在全球排名468位，是“互联网服务与零售”分类中的7家公司之一，成为史上最年轻的世界500强公司（除了合并产生的公司外）。同时，雷军成将给所有在职同事和核心外包服务团队攻击20538人赠予1000股小米股票。</li><li>7月23日，支付宝微博宣布给予第一个愿意相信淘宝并使用担保交易的人焦振中授予「支付宝终身尊贵奖」</li><li><a href="https://www.zhihu.com/question/337092839" target="_blank" rel="noopener">京都动画知名监督武本康弘确认离世，这会给京都动画会带来怎样的损失？</a></li><li>世界五百强中国首(129)次超越美国(121)。</li><li><a href="http://www.bjnews.com.cn/news/2019/07/24/607125.html" target="_blank" rel="noopener">河北「爱心妈妈」案主犯李丽娟获刑20年</a>。<a href="https://www.zhihu.com/question/336626906/answer/763425733" target="_blank" rel="noopener">知乎讨论</a></li></ul><h2 id="资源">资源</h2><ul><li><a href="https://css-tricks.com/guide-svg-animations-smil/" target="_blank" rel="noopener">A Guide to SVG Animations (SMIL)</a></li><li><a href="https://design-patterns.readthedocs.io/zh_CN/latest/" target="_blank" rel="noopener">图说设计模式</a>：软件模式是将模式的一般概念应用于软件开发领域，即软件开发的 总体指导思路或参照样板。软件模式并非仅限于设计模式，还包括 架构模式、分析模式和过程模式等，实际上，在软件生存期的每一 个阶段都存在着一些被认同的模式。</li><li>今天发现在mac使用使用搜狗输入法的时候按下Cmd + Shift + E可以切换到一个专门的英文输入模式，这个模式下输入英文会有补全以及英文释义</li><li><a href="https://www.scmp.com/china-internet-report" target="_blank" rel="noopener">中国互联网报告2019</a>: 南华早报出品。</li><li><a href="https://www.bbc.co.uk/news/extra/PLNMqvmycN/conjoined-twins" target="_blank" rel="noopener">一场将Safa和Marwa分开的战斗</a></li><li><a href="https://www.overleaf.com/learn/latex/Learn_LaTeX_in_30_minutes" target="_blank" rel="noopener">Overleaf提供的Latex教程</a></li><li><a href="https://github.com/mattm/sql-style-guide#guidelines" target="_blank" rel="noopener">SQL风格指南</a></li></ul><h2 id="言论">言论</h2><ul><li>地位游戏一定是零和的，有赢家就肯定有输家。 比如，我当了部门主管，你就不能当了。所以，地位游戏很凶险，必须时刻提防其他玩家的冷枪。财富游戏不是零和的，我盖了一幢漂亮的房子，不影响你也盖一幢。我赚钱了，不影响其他人的利益，很可能还让其他人过得更好。比如，乔布斯创办了苹果公司，其他人就有了更好的电子产品可用。-- <a href="http://www.ruanyifeng.com/blog/2019/07/weekly-issue-66.html" target="_blank" rel="noopener">阮一峰</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://imgs.codewoody.com/uploads/big/e13d52707f66863d9863cb22b18eacf5.jpg&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Weekly" scheme="http://www.codewoody.com/categories/Weekly/"/>
    
    
      <category term="杂谈" scheme="http://www.codewoody.com/tags/%E6%9D%82%E8%B0%88/"/>
    
      <category term="科技新闻" scheme="http://www.codewoody.com/tags/%E7%A7%91%E6%8A%80%E6%96%B0%E9%97%BB/"/>
    
      <category term="转载" scheme="http://www.codewoody.com/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="Weekly" scheme="http://www.codewoody.com/tags/Weekly/"/>
    
  </entry>
  
  <entry>
    <title>网贷的法律问题相关</title>
    <link href="http://www.codewoody.com/posts/59410/"/>
    <id>http://www.codewoody.com/posts/59410/</id>
    <published>2019-07-23T02:45:36.000Z</published>
    <updated>2019-07-24T06:50:14.542Z</updated>
    
    <content type="html"><![CDATA[<p>最近家里有亲人沾染上了网贷的事情，果然是在身边印证了当前年轻人普遍负债的现象。不过这些网贷，既然这么容易就能借到，必然也是找各种擦边球的手段，来提高事实利率来对冲贸然接待的高风险。不然坏账这么多，肯定遭不住。</p><p>国家法律规定中，用24%和36%两个关键数字，划定了民间借贷的利率和利息问题。根据2015年9月1日起开始施行的<a href="http://www.court.gov.cn/zixun-xiangqing-15146.html" target="_blank" rel="noopener">《最高人民法院关于审理民间借贷案件适用法律若干问题的规定》</a>司法解释：</p><blockquote><p>借贷双方约定的利率未超过年利率24%，出借人请求借款人按照约定的利率支付利息的，人民法院应予支持。借贷双方约定的利率超过年利率36%，超过部分的利息约定无效。借款人请求出借人返还已支付的超过年利率36%部分的利息的，人民法院应予支持。</p></blockquote><p>不过，大部分的网贷平台，到目前也不太可能蠢到把事实上奇高的利息写到纸面上。相反，这些高额利息会被包装成手续费，服务费之类的名目。例如，A从某网贷借出20000，服务费的扣除5000，还款24%的利息，事实上的年化利息达到了65%。</p><p>不过，2017年12月1日，联网金融风险专项整治工作领导小组办公室、P2P网贷风险专项整治工作领导小组办公室印发并实施了<a href="https://baike.baidu.com/reference/22239759/03b2NZyCEsP_dOZTcSiWZzbIqKCEX5Jkhu_NEfYrze1dX3L8gwUgF-RR2YdZ3JkukrTyhnRcopyqhCwMTq-ZXLwvRvf5JfFruU3UUyQJZAPf-HcXIH-C1XjNuntz" target="_blank" rel="noopener">《关于规范整顿“现金贷”业务的通知》</a>。其中第四部分，「持续推进，完善P2P网络借贷信息中介机构业务管理 」，第一条规定：</p><blockquote><p>不得撮合或变相撮合不符合法律有关利率规定的借贷业务；禁止从借贷本金中先行扣除利息、手续费、管理费、保证金以及设定高额逾期利息、滞纳金、罚息等。</p></blockquote><p>另，2018年<a href="https://baike.baidu.com/item/%E4%B8%AD%E5%9B%BD%E4%BA%92%E8%81%94%E7%BD%91%E9%87%91%E8%9E%8D%E5%8D%8F%E4%BC%9A" target="_blank" rel="noopener">中国互金会</a>发布<a href="http://finance.sina.com.cn/money/bank/hykx/2018-09-04/doc-ihiqtcan7041142.shtml" target="_blank" rel="noopener">《关于P2P网络借贷机构自律检查第一阶段会员自查自纠工作相关问题的说明》</a>，其中要求：</p><blockquote><p>会员机构不得撮合或变相撮合不符合法律有关利率规定的借贷业务，禁止从借贷本金中先行扣除利息、手续费、管理费、保证金以及设定高额逾期利息、滞纳金、罚息等,相关逾期罚息也要计算在综合资金成本中。</p></blockquote><p>随着法规的完善，这些网贷平台自然也是道高一尺，魔高一丈。很多网贷在收取服务费的时候，就是要求借款人将服务费转到私人账户。这样，将来有了纠纷，借款人也就无法举证说明这笔费用是平台收取的服务费了。今年春天爆出来的<a href="https://zh.wikipedia.org/zh-hans/%E8%A5%BF%E5%AE%89%E5%A5%94%E9%A9%B0%E6%96%B0%E8%BD%A6%E6%BC%8F%E6%B2%B9%E7%BB%B4%E6%9D%83%E4%BA%8B%E4%BB%B6" target="_blank" rel="noopener">西安奔驰车主维权</a>中：</p><blockquote><p>在曝光的谈话录音里，车主提到自己本来可以全款购买，但4S店称奔驰金融贷款利息低，用各种方法“引诱”自己使用奔驰金融。此后，她付完首付款后，在不知情的情况下被开通奔驰金融，还被迫交纳服务费1.5万，对方还要求把钱转至一个私人账户，并且没有发票。交完这笔服务费，才接着为她办理后续业务。车主表示，并不理解自己交纳的这笔服务费，到底获得了什么服务。</p></blockquote><p>西安这个案子全国瞩目，自然，当事人被收取的<a href="http://www.nbd.com.cn/articles/2019-06-13/1342626.html" target="_blank" rel="noopener">金融服务费被退还了</a>。其他的普通人遇到同样的时间，自然是不会有这个待遇。而且就目前来说，如果服务费之类的内容已经打到了私人账户上，确实没有任何有效的手段能够追回，或是让法院认可这笔交易是交纳服务费了，举证非常困难。但是如果网贷平台的环节设置中存在漏洞，例如在平台APP上曾经显示服务费的项目，也许可以有一定的转机。</p><p>不过，还有一个潜在的「文字」问题：上面涉及到的条款并非禁止收取高额服务费，而是禁止从本金中预先扣除这些费用，即变相的砍头息。如果已经全部拿到纸面的本金，再以其他渠道收取服务费，则是不违法的。</p><p>更多阅读：</p><ul><li><a href="https://www.weibo.com/ttarticle/p/show?id=2309404370716387587185&amp;mod=zwenzhang" target="_blank" rel="noopener">网贷乱象再调查：到手8万8要还近16万，变相砍头息用户维权难</a></li><li><a href="http://www.xinhuanet.com/local/2018-02/28/c_1122467345.htm" target="_blank" rel="noopener">网贷真能逼死人 别让高利贷钻了创新空子</a></li><li><a href="http://finance.sina.com.cn/chanjing/cyxw/2018-03-14/doc-ifysftkm3469332.shtml" target="_blank" rel="noopener">秘而不宣的网贷砍头息：借款5000元 手续费就得1200</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近家里有亲人沾染上了网贷的事情，果然是在身边印证了当前年轻人普遍负债的现象。不过这些网贷，既然这么容易就能借到，必然也是找各种擦边球的手段，来提高事实利率来对冲贸然接待的高风险。不然坏账这么多，肯定遭不住。&lt;/p&gt;
&lt;p&gt;国家法律规定中，用24%和36%两个关键数字，划定
      
    
    </summary>
    
      <category term="杂谈" scheme="http://www.codewoody.com/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="折腾" scheme="http://www.codewoody.com/tags/%E6%8A%98%E8%85%BE/"/>
    
      <category term="杂谈" scheme="http://www.codewoody.com/tags/%E6%9D%82%E8%B0%88/"/>
    
      <category term="法律" scheme="http://www.codewoody.com/tags/%E6%B3%95%E5%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>Mysql安装过程中没有提示设置密码的问题</title>
    <link href="http://www.codewoody.com/posts/9986/"/>
    <id>http://www.codewoody.com/posts/9986/</id>
    <published>2019-07-18T06:49:26.000Z</published>
    <updated>2019-07-23T09:52:21.550Z</updated>
    
    <content type="html"><![CDATA[<ul><li><a href="https://www.digitalocean.com/community/questions/no-password-is-asked-when-installing-mysql-server" target="_blank" rel="noopener">原贴地址</a></li></ul><a id="more"></a><p>问题描述：在使用<code>sudo apt-get install -y mysql-server</code>的过程中没有提示设置<code>root</code>账户的密码，按照<a href="https://www.digitalocean.com/community/tutorials/how-to-install-linux-apache-mysql-php-lamp-stack-on-ubuntu-16-04" target="_blank" rel="noopener">教程</a>执行<code>mysql_secure_installation</code>时，无法以<code>root</code>账户登录进入MySQL。</p><p>解决方法如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo mysqld_safe --skip-grant-tables&amp;</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo mysql --user=root mysql</span></span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> update user <span class="built_in">set</span> authentication_string=PASSWORD(<span class="string">'new-password'</span>) <span class="built_in">where</span> user=<span class="string">'root'</span>;</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> flush privileges;</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> quit</span></span><br><span class="line">sudo service mysql restart</span><br></pre></td></tr></table></figure><p>注意将<code>new-password</code>替换为你想要设置的密码。注意，我们仍然需要使用<code>sudo</code>才能运行<code>mysql_secure_installation</code>，否则会出现<code>Error: Access denied for user 'root'@'localhost'</code>的错误。</p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.digitalocean.com/community/questions/no-password-is-asked-when-installing-mysql-server&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;原贴地址&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Debug" scheme="http://www.codewoody.com/categories/Debug/"/>
    
    
      <category term="翻译" scheme="http://www.codewoody.com/tags/%E7%BF%BB%E8%AF%91/"/>
    
      <category term="linux" scheme="http://www.codewoody.com/tags/linux/"/>
    
      <category term="Debug" scheme="http://www.codewoody.com/tags/Debug/"/>
    
  </entry>
  
  <entry>
    <title>Sqlite: window function</title>
    <link href="http://www.codewoody.com/posts/35361/"/>
    <id>http://www.codewoody.com/posts/35361/</id>
    <published>2019-07-17T07:18:01.000Z</published>
    <updated>2019-07-23T09:52:36.789Z</updated>
    
    <content type="html"><![CDATA[</p><p><a href="https://www.sqlite.org/windowfunctions.html" target="_blank" rel="noopener">Sqlite Window Function</a></p><h2 id="简介">简介</h2><p>之前我们接触的SQL命令的结果，一般都是逐行的。即SQL命令返回的结果，都是来自原表的同一行。Window Function则赋予了我们在SQL 结果中，获得来自一组行的数据的能力。这样的组被称为「Window」。</p><p>Window Function最鲜明的特征是<code>OVER</code>关键字。如果 以一个函数有<code>OVER</code>子句，则此函数为Window Function。反之，如果这个函数不带<code>OVER</code>子句，则这个函数是简单的聚合(Aggregate)函数或者标量(Scalar)函数。Window Function在函数和<code>OVER</code>子句之间，还可能带有<code>FILTER</code>子句。</p><p>Window Function的语法结构如下：</p><figure><img src="https://www.sqlite.org/images/syntax/window-function-invocation.gif" alt="Window function invocation"><figcaption>Window function invocation</figcaption></figure><p>不同于普通的函数，Window Function不能使用Distinct子句。另外，Window Function只能出现在查询结果中和<code>ORDER BY</code>后面。</p><p>Window Function可以划归为的两种不同类型：聚合窗函数(Aggregate Window Function)和内建窗函数(Built-in Window Function)。每个聚合窗函数也可以当做普通的聚合函数使用（只需要舍去<code>OVER</code>和<code>FILTER</code>子句即可）。内建窗函数，也可以通过合适地配置<code>OVER</code>子句从而具备聚合函数的功能。在应用中，我们也可以通过<a href="https://www.sqlite.org/c3ref/create_function.html" target="_blank" rel="noopener">sqlite3_create_window_function()</a>接口（C）来自定义新的聚合窗函数。</p><p>下面是使用内建的<code>row_number()</code>窗函数的例子：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> t0(x <span class="built_in">INTEGER</span> PRIMARY <span class="keyword">KEY</span>, y <span class="built_in">TEXT</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> t0 <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">'aaa'</span>), (<span class="number">2</span>, <span class="string">'ccc'</span>), (<span class="number">3</span>, <span class="string">'bbb'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- The following SELECT statement returns:</span></span><br><span class="line"><span class="comment">--</span></span><br><span class="line"><span class="comment">--   x | y | row_number</span></span><br><span class="line"><span class="comment">-----------------------</span></span><br><span class="line"><span class="comment">--   1 | aaa | 1</span></span><br><span class="line"><span class="comment">--   2 | ccc | 3</span></span><br><span class="line"><span class="comment">--   3 | bbb | 2</span></span><br><span class="line"><span class="comment">--</span></span><br><span class="line"><span class="keyword">SELECT</span> x, y, row_number() <span class="keyword">OVER</span> (<span class="keyword">ORDER</span> <span class="keyword">BY</span> y) <span class="keyword">AS</span> row_number <span class="keyword">FROM</span> t0 <span class="keyword">ORDER</span> <span class="keyword">BY</span> x;</span><br></pre></td></tr></table></figure><p><code>row_number()</code>窗函数函数可以每行添加一个行号。行号的顺序通过<code>OVER</code>后面的<code>ORDER BY y</code>确定。注意，<code>OVER</code>后面的<code>ORDER BY y</code>不会影响<code>SELECT</code>返回的查询结果的顺序。在上面的例子中，<code>SELECT</code>返回的顺序还是根据<code>x</code>来排序的。比对上面的「Window function invocation」图，<code>OVER</code>后的子句体称为<code>window-defn</code>。我们还可以在<code>SELECT</code>语句中通过<code>WINDOW</code>子句来声明<code>named window-defn</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> x, y, row_number() <span class="keyword">OVER</span> win1, <span class="keyword">rank</span>() <span class="keyword">OVER</span> win2</span><br><span class="line"><span class="keyword">FROM</span> t0</span><br><span class="line">WINDOW win1 <span class="keyword">AS</span> (<span class="keyword">ORDER</span> <span class="keyword">BY</span> y <span class="keyword">RANGE</span> <span class="keyword">BETWEEN</span> <span class="keyword">UNBOUNDED</span> <span class="keyword">PRECEDING</span> <span class="keyword">AND</span> <span class="keyword">CURRENT</span> <span class="keyword">ROW</span>),</span><br><span class="line">       win2 <span class="keyword">AS</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> y <span class="keyword">ORDER</span> <span class="keyword">BY</span> x)</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> x;</span><br></pre></td></tr></table></figure><p><code>WINDOW</code>子句，应当位于<code>HAVING</code>之后，<code>ORDER BY</code>之前。</p><h2 id="聚合窗函数">聚合窗函数</h2><p>在这个部分我们假设所有的数据库的结构都是：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> t1(a <span class="built_in">INTEGER</span> PRIMARY <span class="keyword">KEY</span>, b, c);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> t1 <span class="keyword">VALUES</span>   (<span class="number">1</span>, <span class="string">'A'</span>, <span class="string">'one'</span>  ),</span><br><span class="line">                        (<span class="number">2</span>, <span class="string">'B'</span>, <span class="string">'two'</span>  ),</span><br><span class="line">                        (<span class="number">3</span>, <span class="string">'C'</span>, <span class="string">'three'</span>),</span><br><span class="line">                        (<span class="number">4</span>, <span class="string">'D'</span>, <span class="string">'one'</span>  ),</span><br><span class="line">                        (<span class="number">5</span>, <span class="string">'E'</span>, <span class="string">'two'</span>  ),</span><br><span class="line">                        (<span class="number">6</span>, <span class="string">'F'</span>, <span class="string">'three'</span>),</span><br><span class="line">                        (<span class="number">7</span>, <span class="string">'G'</span>, <span class="string">'one'</span>  );</span><br></pre></td></tr></table></figure><p>聚合窗函数类似于一般的聚合函数，添加聚合窗函数不会改变查询返回的行数。相反，聚合窗函数会将于「Window frame」中运行的得到的聚合结果添加到原本的每一行结果中。例如</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- The following SELECT statement returns:</span></span><br><span class="line"><span class="comment">--</span></span><br><span class="line"><span class="comment">--   a | b | group_concat</span></span><br><span class="line"><span class="comment">-------------------------</span></span><br><span class="line"><span class="comment">--   1 | A | A.B</span></span><br><span class="line"><span class="comment">--   2 | B | A.B.C</span></span><br><span class="line"><span class="comment">--   3 | C | B.C.D</span></span><br><span class="line"><span class="comment">--   4 | D | C.D.E</span></span><br><span class="line"><span class="comment">--   5 | E | D.E.F</span></span><br><span class="line"><span class="comment">--   6 | F | E.F.G</span></span><br><span class="line"><span class="comment">--   7 | G | F.G</span></span><br><span class="line"><span class="comment">--</span></span><br><span class="line"><span class="keyword">SELECT</span> a, b, <span class="keyword">group_concat</span>(b, <span class="string">'.'</span>) <span class="keyword">OVER</span> (</span><br><span class="line">  <span class="keyword">ORDER</span> <span class="keyword">BY</span> a <span class="keyword">ROWS</span> <span class="keyword">BETWEEN</span> <span class="number">1</span> <span class="keyword">PRECEDING</span> <span class="keyword">AND</span> <span class="number">1</span> <span class="keyword">FOLLOWING</span></span><br><span class="line">) <span class="keyword">AS</span> <span class="keyword">group_concat</span> <span class="keyword">FROM</span> t1;</span><br></pre></td></tr></table></figure><p>在上面的例子中，我们要做的将本行与上下两行的结果拼起来，而上下行关系，是根据<code>OVER</code>子句中的<code>ORDER BY</code>来确定的。</p><h3 id="partition-by-子句"><code>PARTITION BY</code> 子句</h3><p>为了计算窗函数，查询的返回结果通过<code>PARTITION BY</code>子句分割成多个「partitions」。<code>PARTITION BY</code>类似于<code>GROUP BY</code>，可以将查询结果中，于<code>PARTITION BY</code>后的<code>window-defn</code>所指定列拥有相通值的行组成组。若没有<code>PARTITION BY</code>子句，则所有的查询结果组成一个单一的组。窗函数在各个「partition」上运行。</p><p>例如</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- The following SELECT statement returns:</span></span><br><span class="line"><span class="comment">-- </span></span><br><span class="line"><span class="comment">--   c     | a | b | group_concat</span></span><br><span class="line"><span class="comment">---------------------------------</span></span><br><span class="line"><span class="comment">--   one   | 1 | A | A.D.G       </span></span><br><span class="line"><span class="comment">--   one   | 4 | D | D.G         </span></span><br><span class="line"><span class="comment">--   one   | 7 | G | G           </span></span><br><span class="line"><span class="comment">--   three | 3 | C | C.F         </span></span><br><span class="line"><span class="comment">--   three | 6 | F | F           </span></span><br><span class="line"><span class="comment">--   two   | 2 | B | B.E         </span></span><br><span class="line"><span class="comment">--   two   | 5 | E | E           </span></span><br><span class="line"><span class="comment">-- </span></span><br><span class="line"><span class="keyword">SELECT</span> c, a, b, <span class="keyword">group_concat</span>(b, <span class="string">'.'</span>) <span class="keyword">OVER</span> (</span><br><span class="line">  <span class="keyword">PARTITION</span> <span class="keyword">BY</span> c <span class="keyword">ORDER</span> <span class="keyword">BY</span> a <span class="keyword">RANGE</span> <span class="keyword">BETWEEN</span> <span class="keyword">CURRENT</span> <span class="keyword">ROW</span> <span class="keyword">AND</span> <span class="keyword">UNBOUNDED</span> <span class="keyword">FOLLOWING</span></span><br><span class="line">) <span class="keyword">AS</span> <span class="keyword">group_concat</span></span><br><span class="line"><span class="keyword">FROM</span> t1 <span class="keyword">ORDER</span> <span class="keyword">BY</span> c, a;</span><br></pre></td></tr></table></figure><p>在上面的查询例子中，<code>PARTITION BY c</code>将查询结果划分成了三个Partition。第一个Parition的<code>c = one</code>，第二个Partition的<code>c = three</code>，第三个Partition的<code>c = two</code>。注意，Partiion的划分，及其后续的的<code>ORDER BY</code>的排序，和最终查询结果的顺序是没有关系的。上面的查询的例子的输出也可能是：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- The following SELECT statement returns:</span></span><br><span class="line"><span class="comment">-- </span></span><br><span class="line"><span class="comment">--   c     | a | b | group_concat</span></span><br><span class="line"><span class="comment">---------------------------------</span></span><br><span class="line"><span class="comment">--   one   | 1 | A | A.D.G       </span></span><br><span class="line"><span class="comment">--   two   | 2 | B | B.E         </span></span><br><span class="line"><span class="comment">--   three | 3 | C | C.F         </span></span><br><span class="line"><span class="comment">--   one   | 4 | D | D.G         </span></span><br><span class="line"><span class="comment">--   two   | 5 | E | E           </span></span><br><span class="line"><span class="comment">--   three | 6 | F | F           </span></span><br><span class="line"><span class="comment">--   one   | 7 | G | G           </span></span><br><span class="line"><span class="comment">--</span></span><br><span class="line"><span class="keyword">SELECT</span> c, a, b, <span class="keyword">group_concat</span>(b, <span class="string">'.'</span>) <span class="keyword">OVER</span> (</span><br><span class="line">  <span class="keyword">PARTITION</span> <span class="keyword">BY</span> c <span class="keyword">ORDER</span> <span class="keyword">BY</span> a <span class="keyword">RANGE</span> <span class="keyword">BETWEEN</span> <span class="keyword">CURRENT</span> <span class="keyword">ROW</span> <span class="keyword">AND</span> <span class="keyword">UNBOUNDED</span> <span class="keyword">FOLLOWING</span></span><br><span class="line">) <span class="keyword">AS</span> <span class="keyword">group_concat</span></span><br><span class="line"><span class="keyword">FROM</span> t1 <span class="keyword">ORDER</span> <span class="keyword">BY</span> a;</span><br></pre></td></tr></table></figure><h3 id="frame-specification">Frame Specification</h3><p>Frame Specification是<code>OVER</code>子句的一个部分，规定了聚合窗函数读取的输出行的范围。<code>frame-spec</code>在<code>window-defn</code>中的位置如下:</p><p><img src="https://www.sqlite.org/images/syntax/window-defn.gif"></p><p><code>frame-spec</code>包含如下四个部分：</p><ul><li>Frame type: either ROWS, RANGE or GROUPS;</li><li>A starting frame boundary;</li><li>An ending frame broundary;</li><li>An EXCLUDE clause;</li></ul><p>细节的语法结构如下：</p><p><img src="https://www.sqlite.org/images/syntax/frame-spec.gif"></p><p>其中ending frame boundary可以被省略，此时默认情况下ending frame boundary默认为 <code>CURRENT ROW</code>。</p><p>如果frame type为<code>RANGE</code>或者<code>GROUPS</code>，那么在<code>ORDER BY</code>所指定的列上具有相同值的行被归为一组「peers」。如果没有<code>ORDER BY</code>，那么所有的行归于一组Peer。注意Peers总是属于相同的frame。</p><p>默认的<code>frame-spec</code>为</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW EXCLUDE NO OTHERS</span><br></pre></td></tr></table></figure><p>默认的配置的意思是，聚合窗函数从Partition的开头开始读取直到当前的行的所有Peers。同Peer组的行对从窗函数获取的返回值是相通的（其Window frame是相同的）。例如</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- The following SELECT statement returns:</span></span><br><span class="line"><span class="comment">-- </span></span><br><span class="line"><span class="comment">--   a | b | c | group_concat</span></span><br><span class="line"><span class="comment">-----------------------------</span></span><br><span class="line"><span class="comment">--   1 | A | one   | A.D.G       </span></span><br><span class="line"><span class="comment">--   2 | B | two   | A.D.G.C.F.B.E</span></span><br><span class="line"><span class="comment">--   3 | C | three | A.D.G.C.F   </span></span><br><span class="line"><span class="comment">--   4 | D | one   | A.D.G       </span></span><br><span class="line"><span class="comment">--   5 | E | two   | A.D.G.C.F.B.E</span></span><br><span class="line"><span class="comment">--   6 | F | three | A.D.G.C.F   </span></span><br><span class="line"><span class="comment">--   7 | G | one   | A.D.G       </span></span><br><span class="line"><span class="comment">-- </span></span><br><span class="line"><span class="keyword">SELECT</span> a, b, c,</span><br><span class="line">       <span class="keyword">group_concat</span>(b, <span class="string">'.'</span>) <span class="keyword">OVER</span> (<span class="keyword">ORDER</span> <span class="keyword">BY</span> c) <span class="keyword">AS</span> <span class="keyword">group_concat</span> </span><br><span class="line"><span class="keyword">FROM</span> t1 <span class="keyword">ORDER</span> <span class="keyword">BY</span> a;</span><br></pre></td></tr></table></figure><blockquote><p>关于Frame的更多细节，参考出处原文（页面顶部）</p></blockquote><h3 id="filter-子句"><code>FILTER</code> 子句</h3><p><img src="https://www.sqlite.org/images/syntax/filter.gif"></p><p>如果出现了<code>FILTER</code>子句，那么只有<code>expr</code>指定的行才会被包含到window frame中。这里的<code>FILTER</code>不会过滤查询结果，只是决定了窗函数作用的范围。</p><h2 id="内建窗函数">内建窗函数</h2><p>内建窗函数也具备和聚合窗函数同样的<code>PARTITION BY</code>子句功能：每个行都从属于一个Partition，而每个Partition被单独地进行处理。<code>ORDER BY</code>的作用，我们在下面进行阐述。有一些特定的窗函数（<code>rank()</code>, <code>dense_rank</code>, <code>percent_rank</code> and <code>ntile()</code>）采用了<code>peer group</code>的概念（rows within the same partition that have the same values for all ORDER BY expressions）。此时<code>frame-spec</code>中<code>frame type</code>(<code>ROWS</code>, <code>GROUPS</code>, <code>RANGE</code>) 就不起作用了。</p><p>SQLite支持如下11个内建的窗函数</p><ul><li><code>row_number()</code>: 当前行位于Partition中的位置（行号），从1开始排列，顺序由窗函数的<code>ORDER BY</code>决定。</li><li><code>rank()</code>: 每一个Group（同一个Partition内在<code>ORDER BY</code>指定的列上具有相同值的行归于一个Group）中的第一个peer（行）的<code>row_number</code>值。<code>rank</code>获取的序号可能是不连续的。</li><li><code>dense_rank()</code>: 相比于<code>rank()</code>, 压缩了序号的间隙，得到的序号总是连续的。从1开始排。</li><li><code>percent_rank()</code>: 将rank转化成百分比，等于<code>(rank - 1)/(partition-rows - 1)</code>。如果只有一个组，返回0.</li><li><code>cume_dist()</code>: 累积分布，等于<code>row-number/partition-rows</code>。</li><li><code>ntile(N)</code>: 参数N为整数，这个函数将partition划分为尽可能均匀的N份，并为每份分配一个1到N的整数，顺序由<code>ORDER BY</code>决定（若无<code>ORDER BY</code>，则为乱序）。如果需要的话，较大的组会先出现。</li><li><code>lag(expr)</code></li><li><code>lag(expr, offset)</code></li><li><code>lag(expr, offset, default)</code>: 返回对上一行执行<code>expr</code>得到的结果。如果没有上一行，返回空。可以通过<code>offset</code>修改偏移量（如设为2，返回往上数第二行执行结果，必须为费复制）。<code>offset</code>为0表示对当前行执行。<code>default</code>表示目标行不存在时需要返回的默认值。</li><li><code>lead(expr)</code></li><li><code>lead(expr, offset)</code></li><li><code>lead(expr, offset, default)</code>: 和<code>lag</code>函数类似，不过是向下获取。</li><li><code>first_value(expr)</code>: 返回第一个行的数据</li><li><code>last_value(expr)</code>: 返回最后一行的数据</li><li><code>nth_value(expr, N)</code>: 返回第N行的数据。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://imgs.codewoody.com/uploads/big/34274a932d5bced7fbe1fed335fb4567.png&quot;&gt;
    
    </summary>
    
      <category term="教程" scheme="http://www.codewoody.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="http://www.codewoody.com/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="翻译" scheme="http://www.codewoody.com/tags/%E7%BF%BB%E8%AF%91/"/>
    
      <category term="转载" scheme="http://www.codewoody.com/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="sqlite" scheme="http://www.codewoody.com/tags/sqlite/"/>
    
  </entry>
  
  <entry>
    <title>Weekly - 4</title>
    <link href="http://www.codewoody.com/posts/24622/"/>
    <id>http://www.codewoody.com/posts/24622/</id>
    <published>2019-07-15T05:44:07.000Z</published>
    <updated>2019-07-29T02:28:21.237Z</updated>
    
    <content type="html"><![CDATA[<figure><img src="https://imgs.codewoody.com/uploads/big/162af9ffc7fbac0835c29904548c369e.jpg" alt="「长安十二时辰」还是非常好看的，安利一下！"><figcaption>「长安十二时辰」还是非常好看的，安利一下！</figcaption></figure><h2 id="新闻">新闻</h2><h3 id="广州越秀区--轻微醉驾从宽免刑"><a href="https://auto.ifeng.com/c/7nu1P1tbUae" target="_blank" rel="noopener">广州越秀区 -「轻微醉驾从宽免刑」</a></h3><p>虽然不是这周发生的事情，不过进来看到了，深感滑稽，放在这里</p><blockquote><p>从今年 4 月 1 日起，越秀区检察院在轻微醉驾案件中引入社会公益服务考察项目。轻微醉驾者在满足一定的申请条件后，通过在一个月内参加 40 个小时的社会公益服务，来获得不起诉决定的机会。截至目前，已有48名轻微醉驾者申请该公益服务考察项目，其中已有 46 名获得罪轻不起诉决定。</p></blockquote><h3 id="朝阳区爆发诺如病毒感染">朝阳区爆发诺如病毒感染</h3><blockquote><p>7月15日凌晨，北京朝阳官方微博通报，7月12日晚，接到群众反映朝阳区豆各庄地区部分小区居民出现腹泻情况，截止到7月14日20时，调查了到医院就诊的49人、自述有症状未就诊的105人，并采集了肛拭子和便标本105件，已检测79件，其中，52件检测出诺如病毒。从调查情况判断，存在诺如病毒感染情况。专家提示，诺如病毒感染是一种常见消化道传染病，传染性强，常见症状为腹泻、呕吐。</p></blockquote><h3 id="张扣扣被执行死刑">张扣扣被执行死刑</h3><blockquote><p>7月17日，张扣扣被执行死刑。2018年除夕，张扣扣为母报仇，刺死了上坟返途中的邻居王家大儿子和三儿子，随后到王家将王家父亲刺死。2019年1月8日，汉中中院一审当庭判处张扣扣死刑，其当庭上诉。4月11日，陕西高院驳回上诉维持死刑判决。</p></blockquote><h3 id="京阿尼第一工作室火灾">京阿尼第一工作室火灾</h3><blockquote><p>堪称二次元911。这个工作室是京都动画最重要的工作室，这里集中了大多数制作部门。监督、演出、作监、原画、中割、上色、CG、美术、摄影……我们通常看到的京都动画内部的视频/照片，也都是在这里拍摄的。</p><p>预计死亡人数会超过10人，数十人受伤。本次火灾为人为纵火。</p></blockquote><p><img src="https://imgs.codewoody.com/uploads/big/3a1638df0964523e510db699d06a9e4f.jpg"></p><h3 id="章莹颖案被告获无期判决">章莹颖案被告获无期判决</h3><blockquote><p>历时两天、12名陪审团成员用8小时27分的时间完成了讨论，没有就判处章莹颖案凶手克里斯滕森死刑获得统一意见。克里斯滕森被判处终身监禁。根据美国联邦法律，他将老死狱中，不得假释。</p></blockquote><figure><img src="https://imgs.codewoody.com/uploads/big/ec4086430c5b1098979291cc5ba8ffba.jpg" alt="被告人克里斯滕森 Brendt Christensen"><figcaption>被告人克里斯滕森 Brendt Christensen</figcaption></figure><h3 id="魅族李楠辞职">魅族李楠辞职</h3><blockquote><p>这几天，关于李楠辞职创业的消息传得沸沸扬扬。电子烟，机械键盘，这位曾经魅族的功臣，活跃的知乎答主，会选择哪个方向作为职业的下一站，是很多“煤油”关心的问题。而早在今年 5 月，李楠就已经从魅族主要人员中移除。</p><p>针对此事，黄章昨晚再次在魅族论坛语出惊人：“能挣钱的就是人才，不断亏钱的就是费财”。虽然没有指名道姓，但结合最近的传言，很难不让人产生联想。</p></blockquote><p><img src="https://imgs.codewoody.com/uploads/big/a710fc7fe849fee648b3416892fed024.jpg"></p><h2 id="资源">资源</h2><ul><li><a href="https://www.sqlite.org/windowfunctions.html" target="_blank" rel="noopener">SQLite Window Function</a>：在最近的仿真研究中使用了Window function，是之前比较少接触到的，但是功能非常强大！</li></ul><h2 id="言论">言论</h2><ul><li><p>从本质上来说，父母选择怎样的育儿方式，不取决于父母小时候的经历，而取决于父母对孩子现在与未来的预测。 -- <a href="https://songshuhui.net/archives/106133" target="_blank" rel="noopener">科学松鼠会</a></p></li><li><p>经济学研究的是人们如何做出选择。社会学研究的是人们其实并无多少选择余地。 - 经济学家James Duesenberry</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://imgs.codewoody.com/uploads/big/3a1638df0964523e510db699d06a9e4f.jpg&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Weekly" scheme="http://www.codewoody.com/categories/Weekly/"/>
    
    
      <category term="杂谈" scheme="http://www.codewoody.com/tags/%E6%9D%82%E8%B0%88/"/>
    
      <category term="科技新闻" scheme="http://www.codewoody.com/tags/%E7%A7%91%E6%8A%80%E6%96%B0%E9%97%BB/"/>
    
      <category term="转载" scheme="http://www.codewoody.com/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="Weekly" scheme="http://www.codewoody.com/tags/Weekly/"/>
    
  </entry>
  
  <entry>
    <title>Git:恢复一个已经在提交中被删除的文件</title>
    <link href="http://www.codewoody.com/posts/10723/"/>
    <id>http://www.codewoody.com/posts/10723/</id>
    <published>2019-07-12T06:43:00.000Z</published>
    <updated>2019-07-12T06:54:47.315Z</updated>
    
    <content type="html"><![CDATA[<p>这里要研究的问题是，如果我们在之前的某一个提交中删除了一个文件，如何使用git将此文件恢复出来。</p><a id="more"></a><p>首先我们要做的是找到当时删除的这个文件对应的提交。比较简便的方法是使用一些图形化的Git软件，可以直接浏览找到对应的提交。这些软件包括SourceTree，Github Desktop等。纯命令行的环境可以使用如下的命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git log --diff-filter=D --summary</span><br></pre></td></tr></table></figure><p>在找到对应的提交后，使用如下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout $commit~1 path/to/file.ext</span><br></pre></td></tr></table></figure><p>注意一下，这里的<code>$commit</code>指的是对应的commit id。后面的<code>~n</code>是git的一种语法，表明追溯某个提交的第<code>n</code>个祖先。详情可以参考<a href="https://www.bignerdranch.com/blog/git-treeishes-considered-awesome/" target="_blank" rel="noopener">Git Treeishes Considered Awesome</a>。那这里的意思就是检出删除这个文件的提交的上一个提交（届时那个文件还存在）中的对应文件。</p><p><a href="https://stackoverflow.com/a/953573/5081487" target="_blank" rel="noopener">参考链接</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里要研究的问题是，如果我们在之前的某一个提交中删除了一个文件，如何使用git将此文件恢复出来。&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="http://www.codewoody.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="http://www.codewoody.com/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="git" scheme="http://www.codewoody.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>时空错乱的名称二则</title>
    <link href="http://www.codewoody.com/posts/53783/"/>
    <id>http://www.codewoody.com/posts/53783/</id>
    <published>2019-07-11T06:59:45.000Z</published>
    <updated>2019-07-11T07:31:14.251Z</updated>
    
    <content type="html"><![CDATA[</p><h2 id="荷兰豆">荷兰豆</h2><p>荷兰豆在中国叫荷兰豆，在荷兰叫中国豆，类似的情况还有：</p><ol type="1"><li><p>梅毒：意大利人叫那不勒斯症状、法国病、高卢病，法国人叫意大利病，俄罗斯叫波兰人病，日耳曼人叫西班牙病，阿拉伯人叫基督徒病，大溪地叫英国人病，日本叫唐疮，琉球疮，葡萄牙病，有意思的是，中国人称之为广东疮。这基本上反映了梅毒的传染过程。</p></li><li><p>过山车：在法国、意大利、葡萄牙、西班牙等一些地方，“过山车”的字面意思是“俄罗斯山峰”，这是因为过山车的原型是俄罗斯的雪橇，从雪山上滑下来。在法国，当时就叫Les Montagnes Russes（俄罗斯山峰）。重点来了，在俄罗斯，过山车叫&quot;американские горки&quot; [Amerikanskie gorki]，字面意思就是“美国山峰”。</p></li><li><p>手抓饼在大陆叫台湾手抓饼，在台湾叫天津葱抓饼。</p></li></ol><p>关于荷兰豆在荷兰被称为中国豆的<a href="https://www.guokr.com/post/342270/" target="_blank" rel="noopener">考证</a>：</p><p>(1)刚开始豌豆Pisum sativum是只吃豆的。</p><p>(2)然后在中国南部接近东南亚的地区，人们培育了一种可以吃豆荚的豌豆，我们叫荷兰豆，英语里叫Chinese snow pea, 学名为Pisum sativum var. saccharatum,豌豆苗是它的嫩芽</p><p>(3)再然后出现了另一种吃豆荚的豌豆snap pea, Pisum sativum var. macrocarpon,我们叫甜豆，豆荚更鼓。</p><p>最后美国人把2和3杂交了一下，就出现了sweet snap pea(4),适合完全生吃。所有这些生吃都无毒.</p><p>为什么要叫荷兰豆？应该是荷兰蔬菜育种比较强,所以被联系在了一起，跟荷兰人无关.</p><p>资料来源：Plant Breeding Reviews, Volume 21，Chapter 3. Origin, History, and Genetic Improvement of the Snap Pea (Pisum sativum L.)</p><p>下面是我搜索到的例子：</p><figure><img src="https://imgs.codewoody.com/uploads/big/4f2ff0133e781f7a2e4f1f8095786cbe.png" alt="Cooking Snow Peas"><figcaption><a href="https://whatscookingamerica.net/Q-A/Snowpeas.htm" target="_blank" rel="noopener">Cooking Snow Peas</a></figcaption></figure><h2 id="中情局十条诫令">中情局十条诫令</h2><blockquote><p>“十条诫令” : 这是此谣言在中国大陆地区使用的名称。其他名称包括：十条戒令，十大戒令。虽然此谣言在全世界各地都有不同版本和名称，最流行的二个国家是中国大陆和巴西。而且还会有不同的中文版本。其首次在1940年代的美国出现。现在在全世界不同国家继续流传，是有不同作者，不同版本的都会传奇。所以根本就没有原始文件的存在。美国的名称是“共产党革命章程”。巴西和西班牙则说是列宁写的十诫。中国大陆则谣传是美国中央情报局1951年的绝密文件。随着时间推移，谣言的内容也会不断增加。在中国大陆地区，现在已经出现美国中情局的十二条诫令，又加入了新的第一条，和最后第十二条。</p></blockquote><p>下面三张图，是我今天听说的北京四中的给高中生做的讲座的内容：</p><p><img src="https://imgs.codewoody.com/uploads/big/b83d2d8aba24f88fe22df2e7813339a2.jpg"></p><p><img src="https://imgs.codewoody.com/uploads/big/2053f33e3b536f8b5f8b57c4278f9b19.jpg"></p><p><img src="https://imgs.codewoody.com/uploads/big/34ad58b27d2789a8c3e9a16fd8702556.jpg"></p><p>美国版本为 Communist Rules for Revolution</p><p><img src="https://imgs.codewoody.com/uploads/big/4ecddf57c56d93d01eb41fb5215f2a2f.jpg"></p><p><a href="https://www.truthorfiction.com/communist-rules-for-revolution-found-by-allied-forces-in-dusseldorf-germany-fiction/" target="_blank" rel="noopener">谣传的内容</a>是协约国在德国Dusseldorf发现了Communist Rules for Revolution，翻译过来就是共产党革命章程的。其内容的精神，无外乎就是说应该通过腐化国家的年轻一代以策动革命。</p><p>从Google Books最早可以搜到提到“共产主义者革命章程”的书籍是出版于1964年。美国纽约时报，署名Donald Janson在1970年7月10日，就发表文章，指出这些内容是假的。根据该篇文章报导，1946年2月，最早的版本发表在‘新世界新闻’。</p><p>包括瑞士，法国，巴西，西班牙等地流传的版本，可以进一步看<a href="https://zh.wikipedia.org/wiki/%E5%8D%81%E6%9D%A1%E8%AF%AB%E4%BB%A4#cite_note-snopes-2" target="_blank" rel="noopener">维基</a></p><p>我这边最早接触到这一「谣言」的渠道，是中国大陆军方人士制作的长达90分钟的宣传片《较量无声》中引用了“十条诫令”，并称是前美国中央情报总监艾伦·杜勒斯提出来颠覆中国共产政权的。</p><h2 id="结语">结语</h2><blockquote><p>我们的对外宣传部门挤满了没有脑子的翻译机器，但我毫无办法。-- 长者</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;荷兰豆在中国叫荷兰豆，在荷兰叫中国豆。
    
    </summary>
    
      <category term="杂谈" scheme="http://www.codewoody.com/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="杂谈" scheme="http://www.codewoody.com/tags/%E6%9D%82%E8%B0%88/"/>
    
      <category term="宗教" scheme="http://www.codewoody.com/tags/%E5%AE%97%E6%95%99/"/>
    
      <category term="智商税" scheme="http://www.codewoody.com/tags/%E6%99%BA%E5%95%86%E7%A8%8E/"/>
    
      <category term="政治" scheme="http://www.codewoody.com/tags/%E6%94%BF%E6%B2%BB/"/>
    
  </entry>
  
  <entry>
    <title>Weekly - 3</title>
    <link href="http://www.codewoody.com/posts/41583/"/>
    <id>http://www.codewoody.com/posts/41583/</id>
    <published>2019-07-07T07:49:29.000Z</published>
    <updated>2019-07-22T02:04:21.458Z</updated>
    
    <content type="html"><![CDATA[<h2 id="新闻">新闻</h2><h3 id="三体一在日本大卖">三体一在日本大卖</h3><figure><img src="https://imgs.codewoody.com/uploads/big/b0f83d6cc9c93cfdd25eae7d3ec7fb85.jpg" alt="日亚·三体"><figcaption>日亚·三体</figcaption></figure><p>见证三体逐渐成长为一个全球性的超级IP！</p><h3 id="北京市发布三个房屋出租合同范本"><a href="https://www.huxiu.com/article/307640.html?f=wangzhan" target="_blank" rel="noopener">北京市发布三个房屋出租合同范本</a></h3><p>7月8日，北京发布《北京市住房租赁合同》《北京市房屋出租经纪服务合同》《北京市房屋承租经纪服务合同》三个合同示范文本。示范文本均在说明中强调，不得改变房屋内部结构分割出租、出租房屋人均居住面积不得低于5平方米、每个房间居住的人数不得超过2人等有关禁止违法群租的文件规定内容。</p><p>此外，租金方面，合同明确规定，未经双方当事人协商一致，出租人不得在租赁期限内单方面提高租金。合同提前解除的，出租人应在合同解除后约定日期内退还已收但尚未发生的租金。承租人应当在合同解除后约定时间内搬离。</p><h3 id="逃犯条例修订已寿终正寝"><a href="https://cn.reuters.com/article/hk-chief-0709-tues-idCNKCS1U40B6?feedType=RSS&amp;feedName=CNTopGenNews" target="_blank" rel="noopener">《逃犯条例》修订已「寿终正寝」</a></h3><p>路透香港7月9日 - 香港特首林郑月娥周二称，社会目前的矛盾、纷争、愤怒等都由《逃犯条例》修例引起，承认有关工作是完全失败，并清晰说明《逃犯条例》修订已经“寿终正寝”，政府愿意聆听社会更广泛民意，平息纷争。</p><h3 id="ibm-以-340-亿美元收购red-hat">IBM 以 340 亿美元收购Red Hat</h3><p>根据路透社报道，IBM周二宣布以340亿美元正式收购红帽。这笔交易最初公布于去年十月，当时IBM表示将会以每股190美元的价格，用现金购买红帽的所有股份。</p><figure><img src="https://imgs.codewoody.com/uploads/big/8bd2e52ab04476ac85f1b92d09581c19.png" alt="IBM &amp; Red Hat"><figcaption>IBM &amp; Red Hat</figcaption></figure><p>此次交易也是IBM迄今为止最大规模的一次收购交易，在美国历史上也可以排在前列。撇开AOL和时代华纳的并购不谈，美国科技产业的前两大收购交易分别是2016年戴尔和EMC之间价值670亿美元的并购以及JDS Uniphase在2000年以410亿美元收购光学元件供应商SDL。</p><p>按照交易合约，这家开源企业软件制造商将并入IBM的混合云部门，而红帽的首席执行官吉姆·怀特赫斯特（Jim Whitehurst）将加入IBM的高管团队，向IBM的首席执行官罗睿兰（Ginni Rometty）汇报工作。</p><ul><li><a href="https://zh.wikipedia.org/zh-hans/%E7%B4%85%E5%B8%BD%E5%85%AC%E5%8F%B8" target="_blank" rel="noopener">Red Hat</a></li></ul><h3 id="日本制裁韩国"><a href="https://www.guancha.cn/internation/2019_07_01_507678.shtml" target="_blank" rel="noopener">日本制裁韩国</a></h3><p>据日本《产经新闻》6月30日报道，日本政府将从7月4日开始限制对韩国出口部分半导体、OLED材料出口。韩联社称，韩国相关业界高度紧张，认为稍有不慎就会出现严重状况。日本经济产业省已经于7月1日上午，公布了相关决定。</p><p>涉及的被限制对韩出口的材料包括「氟聚酰亚胺」，「光刻胶」，以及「高纯度氟化氢」等三个品种。日本在这几个材料上的市场份额占据压倒性的优势。</p><p>日本之所以宣布制裁韩国，可能是日本不满韩国无视1965年协议，不断向日本发起「二战」劳工诉讼。不过日本方面否认了这一说法。日本内阁官房长官菅义伟2日向媒体表示，这是出于安全保障考虑而进行的适当的出口管理，并不是围绕“劳工”问题而采取的对抗措施。</p><p>3日，据韩联社报道，韩国执政的共同民主党、政府、青瓦台周三就日本限制对韩半导体材料出口的应对方案表示，政府推进对半导体材料、零部件、设备研发每年投入1万亿韩元（约合人民币58.8亿元）的方案，并正在对此进行可行性调查。日本此举也激怒了韩国民众，从3日开始，韩国网络上出现不少鼓励抵制日货的言论。《中央日报》称，被韩国网友点名的日本商品覆盖从知名家电到汽车、化妆品、服装、手表、酒类等数十个种类。不仅如此，韩国网络上还开始出现抵制赴日旅游的号召。韩联社称，韩国政府3日开始向WTO提出申诉，目前韩贸易部已开始审查相关法律文件。</p><figure><img src="https://imgs.codewoody.com/uploads/big/cecd35e56014638f312ca49592461279.jpg" alt="图片来自蒋校长"><figcaption>图片来自<a href="https://bbs.tiexue.net/post2_13465562_1.html" target="_blank" rel="noopener">蒋校长</a></figcaption></figure><blockquote><p>全世界都在打贸易战</p></blockquote><h3 id="阮一峰的科技爱好者周刊增加就业栏目">阮一峰的科技爱好者周刊增加就业栏目</h3><p>阮一峰也是非常有名的中文技术博客博主，我开始写Weekly就是受他的科技爱好者周刊的启发。<a href="http://www.ruanyifeng.com/blog/2019/07/weekly-issue-64.html" target="_blank" rel="noopener">本周阮一峰想要为他的周刊增加一个《就业栏目》</a>。</p><blockquote><p>向大家报告，我想为周刊增加一个 《就业栏目》 ，每周发布招聘信息。如果你的公司正在招人，欢迎联系我（邮箱：yifeng.ruan@gmail.com）。</p></blockquote><h2 id="软件推荐">软件推荐</h2><p><a href="https://languagetool.org/" target="_blank" rel="noopener">LanguageTool</a> 是一款支持中文、英语、德语、日语等 27 种语言的语法与拼写检查工具，拥有网页版、Chrome 和 Firefox 插件，LibreOffice、Google Docs、MS Word、甚至还有 Android、Emacs、Vim、VS Code 等平台插件，服务器端开源。</p><p><img src="https://imgs.codewoody.com/uploads/big/1f611c5a984fff3067370d3d61458ec4.png"></p><h2 id="资源">资源</h2><ul><li><p>学习Java以及JavaScript的网站： <a href="https://javabrains.io/" target="_blank" rel="noopener">Java Brains</a></p></li><li><p><a href="https://jalammar.github.io/visual-numpy/" target="_blank" rel="noopener">Numpy可视化介绍</a></p></li><li><p><a href="https://tableconvert.com/" target="_blank" rel="noopener">表格转化工具</a>，支持markdown, json, html, xml, yaml等数据格式</p></li></ul><h2 id="段子与言论">段子与言论</h2><ul><li><p>2017 年初，为了验证亚马逊公司的「无限云」，一名叫 Beaston02 的男子坚持录制了 2000 TB 色情片上传到亚马逊云。半年后，亚马逊停止了无限云服务。-- <a href="https://sspai.com/post/55622" target="_blank" rel="noopener">来源</a></p></li><li><p>马克思的学说在今天的遭遇，正如历史上被压迫阶级在解放斗争中的革命思想家和领袖的学说常有的遭遇一样。当伟大的革命家在世时，压迫阶级总是不断迫害他们，以最恶毒的敌意、最疯狂的仇恨、最放肆的造谣和诽谤对待他们的学说。在他们逝世以后，便试图把他们变为无害的神像，可以说是把他们偶像化，赋予他们的名字某种荣誉，以便“安慰”和愚弄被压迫阶级，同时却阉割革命学说的内容，磨去它的革命锋芒，把它庸俗化。现在资产阶级和工人运动中的机会主义者在对马克思主义作这种“加工”的事情上正一致起来。他们忘记、抹杀和歪曲这个学说的革命方面，革命灵魂。他们把资产阶级可以接受或者觉得资产阶级可以接受的东西放在第一位来加以颂扬。 -- 列宁</p></li><li><p>发达国家人均预期寿命：美国以冠绝全球，接近18%的医疗GDP占比，人均寿命如图。（<a href="https://ourworldindata.org/the-link-between-life-expectancy-and-health-spending-us-focus" target="_blank" rel="noopener">出处</a>）</p></li></ul><p><img src="https://imgs.codewoody.com/uploads/big/fbca06ae942781af6fe9cfccf85b0996.jpg"></p><ul><li>要承认人工智能是作者，事实上也就意味着要在著作权法上创设一种新的独立法律主体，这将遇到极大的法律和伦理障碍，在相当长的一段时间内恐怕都难以实现。 - <a href="http://www.nipso.cn/onews.asp?id=46776" target="_blank" rel="noopener">人大法学院教授万勇</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;figure&gt;
&lt;img src=&quot;https://imgs.codewoody.com/uploads/big/f7e6647dc85e02dcbaadb4609941a503.jpg&quot; alt=&quot;进击的巨人第四季要等到2020年了&quot;&gt;&lt;figcaption&gt;进击的巨人第四季要等到2020年了&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;终于看完了第三季，巨人可以说是近年来最优秀的动漫作品了。而且第三季的最后几集又将整个作品的世界观和精神层次提升了一大截，可以说是相当起来第四季艾主席的表现了。&lt;/p&gt;
    
    </summary>
    
      <category term="Weekly" scheme="http://www.codewoody.com/categories/Weekly/"/>
    
    
      <category term="杂谈" scheme="http://www.codewoody.com/tags/%E6%9D%82%E8%B0%88/"/>
    
      <category term="科技新闻" scheme="http://www.codewoody.com/tags/%E7%A7%91%E6%8A%80%E6%96%B0%E9%97%BB/"/>
    
      <category term="转载" scheme="http://www.codewoody.com/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="Weekly" scheme="http://www.codewoody.com/tags/Weekly/"/>
    
  </entry>
  
  <entry>
    <title>Struct in Vector: 进一步讨论</title>
    <link href="http://www.codewoody.com/posts/62430/"/>
    <id>http://www.codewoody.com/posts/62430/</id>
    <published>2019-07-02T02:04:44.000Z</published>
    <updated>2019-07-12T06:10:07.074Z</updated>
    
    <content type="html"><![CDATA[<p>之前我们讨论了<a href="C++中将结构体放置在std::vector容器内的操作风险">C++中将结构体放置在std::vector容器内的操作风险</a>。这里我们来进一步讨论如何处理在容器中存储的结构体数据。</p><a id="more"></a><p>前文中提到，如果我们尝试获取容器中的结构体时，我们直接拿到的是该结构体的拷贝，如果要对结构体成员修改，我们需要整体进行两次复制：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;struct A&gt; data;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">A</span> <span class="title">val</span> = <span class="title">data</span>.<span class="title">at</span> (0);</span></span><br><span class="line">val.b = c;</span><br><span class="line">data[<span class="number">0</span>] = val;</span><br><span class="line">``</span><br><span class="line"></span><br><span class="line">这种操作显然是不经济。一种『粗暴』的方法是使用`<span class="built_in">std</span>::<span class="built_in">vector</span>::data`函数获取底层数据的指针，然后操作这个指针。但是这种方法不太优雅，也不安全。合适的做法是使用引用</span><br><span class="line"></span><br><span class="line">```cpp</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;struct A&gt; data;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">A</span> &amp; <span class="title">val</span> = <span class="title">data</span>[0];</span></span><br><span class="line">val.b = c;</span><br></pre></td></tr></table></figure><p>放在遍历的场景中，可以使用如下的形式：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;struct A&gt; data;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span>&amp; val : data) &#123;...&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前我们讨论了&lt;a href=&quot;C++中将结构体放置在std::vector容器内的操作风险&quot;&gt;C++中将结构体放置在std::vector容器内的操作风险&lt;/a&gt;。这里我们来进一步讨论如何处理在容器中存储的结构体数据。&lt;/p&gt;
    
    </summary>
    
      <category term="编程研究" scheme="http://www.codewoody.com/categories/%E7%BC%96%E7%A8%8B%E7%A0%94%E7%A9%B6/"/>
    
    
      <category term="C++" scheme="http://www.codewoody.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>CPP: STL map的用法</title>
    <link href="http://www.codewoody.com/posts/3626/"/>
    <id>http://www.codewoody.com/posts/3626/</id>
    <published>2019-07-01T09:23:13.000Z</published>
    <updated>2019-07-12T06:10:21.731Z</updated>
    
    <content type="html"><![CDATA[<p>抛开具体的编程语言场景，map是一类非常基本的数据组织形式，其作用是将一个可Hash的值，映射到另一个值，而且一般来讲是一对一的（存在一对多的情况）。map内部使用了红黑树，这棵树具有对数据自动排序的功能，使得对map的检索意义达到非常高的效率。基于键值的查找的复杂度是Log(N)。</p><p>这里讲讲C++标准库里面map的用法。</p><a id="more"></a><h2 id="使用map">使用map</h2><p>头文件：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br></pre></td></tr></table></figure><p>声明时需要指明键与值的类型：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">std</span>::<span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt; persons;</span><br></pre></td></tr></table></figure><h2 id="数据插入">数据插入</h2><p>数据插入有三种方法：</p><ol type="1"><li>使用<code>insert</code>函数插入<code>pair</code>数据，例如：</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">std</span>::<span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt; students;</span><br><span class="line"></span><br><span class="line">students.insert (<span class="built_in">std</span>::pair&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt; (<span class="number">1</span>, <span class="string">"Student A"</span>));</span><br></pre></td></tr></table></figure><ol start="2" type="1"><li>用insert函数插入<code>value_type</code>的数据，例如：</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">std</span>::<span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt; students;</span><br><span class="line"></span><br><span class="line">students.insert (<span class="built_in">std</span>::<span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt;::value_type (<span class="number">1</span>, <span class="string">"Student A"</span>));</span><br></pre></td></tr></table></figure><ol start="3" type="1"><li>用Subscript方式插入数据，例如：</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">std</span>::<span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt; students;</span><br><span class="line"></span><br><span class="line">students[<span class="number">1</span>] = <span class="string">"Student A"</span></span><br></pre></td></tr></table></figure><p>上面三种插入方式的区别在于，第三种默认会覆盖已经存在的映射，而前两个不会。前两个插入方式等价，在插入的键已经存在于映射中时，当前的插入语句会被忽略。那么如何知道插入是否成功呢？可以通过<code>insert</code>函数的返回值来判断。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">std</span>::<span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt; students;</span><br><span class="line"></span><br><span class="line"><span class="comment">// res为pair&lt;map&lt;int, string&gt;::iterator, bool&gt;乐行</span></span><br><span class="line"><span class="keyword">auto</span> res = students.insert (pair&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt; (<span class="number">1</span>, <span class="string">"Student A"</span>));</span><br><span class="line"><span class="keyword">if</span> (res.second == <span class="literal">true</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"Insert successfully"</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"Insert fail"</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="数据的遍历">数据的遍历</h2><p>使用迭代器：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> iter = students.begin (); iter != students.end (); iter ++ )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">// first为key，second为value</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;iter-&gt;first&lt;&lt;<span class="string">' '</span>&lt;&lt;iter-&gt;second&lt;&lt;<span class="built_in">endl</span>;  </span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="查找并获取map中的元素">查找并获取map中的元素</h2><p>查找是map的核心功能。我们可以使用<code>find</code>函数来进行查找。当找到目标时，返回一个迭代器，否则返回<code>end</code>。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">std</span>::<span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt; students;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">auto</span> iter = students.find (<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span> (iter == students.end ())</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"not found "</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">string</span> studentName = iter.second;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="删除元素">删除元素</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">std</span>::<span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt; students;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="keyword">auto</span> iter = students.find (<span class="number">1</span>);</span><br><span class="line">student.erase (iter);</span><br><span class="line"></span><br><span class="line">student.erase (<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 这会清空整个map</span></span><br><span class="line">student.erase (students.begin (), students.end ());</span><br></pre></td></tr></table></figure><h2 id="further-reading">Further Reading</h2><ul><li><a href="https://www.cnblogs.com/fnlingnzb-learner/p/5833051.html" target="_blank" rel="noopener">C++中的STL中map用法详解</a></li><li><a href="http://www.cplusplus.com/reference/map/map/map/" target="_blank" rel="noopener">std::map::map</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;抛开具体的编程语言场景，map是一类非常基本的数据组织形式，其作用是将一个可Hash的值，映射到另一个值，而且一般来讲是一对一的（存在一对多的情况）。map内部使用了红黑树，这棵树具有对数据自动排序的功能，使得对map的检索意义达到非常高的效率。基于键值的查找的复杂度是Log(N)。&lt;/p&gt;
&lt;p&gt;这里讲讲C++标准库里面map的用法。&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="http://www.codewoody.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="http://www.codewoody.com/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="C++" scheme="http://www.codewoody.com/tags/C/"/>
    
  </entry>
  
</feed>
